%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /lus/scratch/p02128/work/MiniGhost/source/MG_UTILS.F
Compiled : 10/31/18  05:23:30
Compiler : Version 8.7.6
Ftnlx    : Version 8503 (libcif 85008)
Target   : x86-64
Command  : ftn_driver.exe -hcpu=broadwell -hstatic -D__CRAYXC
           -D__CRAY_BROADWELL -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries
           -D_MG_MPI -D_MG_INT4 -D_MG_REAL8 -ffree -hlist=a -c MG_UTILS.F
           -I/opt/cray/pe/cce/8.7.6/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/mpt/7.7.3/gni/mpich-cray/8.6/include
           -I/opt/cray/pe/libsci/18.07.1/CRAY/8.6/x86_64/include
           -I/opt/cray/rca/2.2.18-6.0.7.0_33.3__g2aa4f39.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/xpmem/2.2.15-6.0.7.0_35.11__g7549d06.ari/include
           -I/opt/cray/dmapp/7.1.1-6.0.7.0_34.3__g5a674e0.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-6.0.7.0_24.1__g3b1768f.ari/include
           -I/opt/cray/ugni/6.0.14.0-6.0.7.0_23.1__gea11d3d.ari/include
           -I/opt/cray/udreg/2.3.2-6.0.7.0_33.18__g5196236.ari/include
           -I/opt/cray/alps/6.6.43-6.0.7.0_26.4__ga796da3.ari/include
           -I/opt/cray/wlm_detect/1.3.3-6.0.7.0_47.2__g7109084.ari/include
           -I/opt/cray/krca/2.2.4-6.0.7.0_32.3__g8505b97.ari/include
           -I/opt/cray-hss-devel/8.0.0/include
Program
  Units  : MG_UTILS_MOD

ftnlx report
------------
Source   : /lus/scratch/p02128/work/MiniGhost/source/MG_UTILS.F
Date     : 10/31/2018  05:23:32


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          O p t i o n s   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Options :  -O cache2,scalar2,thread2,vector2,mpi0,modinline,ipa3,noaggress
           -O autoprefetch,noautothread,fusion2,nomsgs,nonegmsgs,nooverindex
           -O pattern,shortcircuit2,unroll2,nozeroinc
           -h noadd_paren,align_arrays,nobounds,caf,noconcurrent,nocontiguous
           -h nocontiguous_assumed_shape,fma,nofp_trap,nofunc_trace,noomp_analyz
           e
           -h noomp_trace,nopat_trace
           -h safe_addr,thread_do_concurrent,fp2=approx,flex_mp=default         
           -h alias=default:standard_restrict         
           -h static (or -static)
           -h omp,noacc
           -h cpu=x86-64,broadwell
           -h network=aries
           -K trap=none
           -s default32
           -eh
           -d abcdefgijmopqsvwzACEFIPQRST0
           -e nBDZ 
           -f free
           -m3
           -S /lus/scratch/tmp/pe_4906/MG_UTILS_1.s


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned                
     F - Flat - No calls      f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
     R - Rerolling            r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.                ! ************************************************************************
    2.                !
    3.                !               miniGhost: stencil computations with boundary exchange.
    4.                !                 Copyright (2012) Sandia Corporation
    5.                !
    6.                ! Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
    7.                ! license for use of this work by or on behalf of the U.S. Government.
    8.                !
    9.                ! This library is free software; you can redistribute it and/or modify
   10.                ! it under the terms of the GNU Lesser General Public License as
   11.                ! published by the Free Software Foundation; either version 2.1 of the
   12.                ! License, or (at your option) any later version.
   13.                !
   14.                ! This library is distributed in the hope that it will be useful, but
   15.                ! WITHOUT ANY WARRANTY; without even the implied warranty of
   16.                ! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   17.                ! Lesser General Public License for more details.
   18.                !
   19.                ! You should have received a copy of the GNU Lesser General Public
   20.                ! License along with this library; if not, write to the Free Software
   21.                ! Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
   22.                ! USA
   23.                ! Questions? Contact Richard F. Barrett (rfbarre@sandia.gov) or
   24.                !                    Michael A. Heroux (maherou@sandia.gov)
   25.                !
   26.                ! ************************************************************************
   27.                
   28.                MODULE MG_UTILS_MOD
   29.                
   30.                   USE MG_CONSTANTS_MOD
   31.                   USE MG_OPTIONS_MOD
   32.                
   33.                   IMPLICIT NONE
   34.                
   35.                CONTAINS
   36.                
   37.                   ! MG_INIT             : Set up MPI environment, problem input.
   38.                   ! MG_PRINT_HEADER     : Write configuration to STDIO.
   39.                   ! MG_GRID_INIT        : Allocate GRID arrays, call MG_INIT_GRID.
   40.                   ! MG_INSERT_SPIKE     : Insert heat sources.
   41.                   ! MG_GRID_DEALLOC     : Deallocate GRID arrays.
   42.                   ! MG_ASSERT           : Error checking.
   43.                   ! MG_INIT_GRID        : Initialize GRID arrays.
   44.                   ! MG_TIMER            : Returns time.
   45.                   ! MG_COMPUTE_STDDEV   : Compute standard deviation of input profiling data.
   46.                
   47.                !  =================================================================================
   48.                
   49.                   SUBROUTINE MG_INIT ( IERR )
   50.                
   51.                      IMPLICIT NONE
   52.                   
   53.                      INTEGER ::  &
   54.                         IERR                    ! Return status.
   55.                
   56.                      ! ---------------
   57.                      ! Local Variables
   58.                      ! ---------------
   59.                
   60.                      INTEGER ::  &
   61.                         I,                    &    ! Counter.
   62.                         IX,                   &
   63.                         IY,                   &
   64.                         IZ,                   &
   65.                         J,                    &    ! Counter.
   66.                         MYPE_XY,              &    ! tmp var
   67.                         NVARS,                &    ! tmp var
   68.                         OFFSET_X,             &
   69.                         OFFSET_Y,             &
   70.                         OFFSET_Z,             &
   71.                         REMAINDER,            &
   72.                         XLOC,                 &
   73.                         YLOC,                 &
   74.                         ZLOC
   75.                
   76.                      ! ------------
   77.                      ! Local Arrays
   78.                      ! ------------
   79.                 
   80.                      REAL(KIND=MG_REAL), DIMENSION(:,:), ALLOCATABLE ::   &
   81.                         RSPIKE_LOC            ! Temporary for random number generator.
   82.                   
   83.                      ! ---------------------
   84.                      ! Executable Statements 
   85.                      ! ---------------------
   86.                
   87.                      IERR = 0
   88.                   
   89.                #if defined _MG_MPI
   90.                      ! Parallel processing configuration:
   91.                
   92.  +                   CALL MPI_COMM_DUP ( MPI_COMM_WORLD, MPI_COMM_MG, IERR )
   93.                
   94.  +                   CALL MPI_ERRHANDLER_SET ( MPI_COMM_MG, MPI_ERRORS_ARE_FATAL, IERR )
   95.                
   96.  +                   CALL MPI_COMM_RANK ( MPI_COMM_MG, MYPE, IERR )
   97.                
   98.  +                   CALL MPI_COMM_SIZE ( MPI_COMM_MG, NUMPES, IERR )
   99.                #elif defined _MG_SERIAL
  100.    D                 MYPE = 0    ! All formulas based on these values should work correctly.
  101.    D                 NUMPES = 1
  102.                #endif
  103.                
  104.                      ! ---------------------------------
  105.                      ! Set position in 3d processor grid
  106.                      ! ---------------------------------
  107.                
  108.                      MYPE_XY = MOD ( MYPE, NPX*NPY )
  109.                      MYPY = MYPE_XY / NPX
  110.                      REMAINDER = MOD ( MYPE_XY, NPX )
  111.                      IF ( REMAINDER /= 0 ) THEN
  112.                         MYPX = REMAINDER
  113.                      ELSE
  114.                         MYPX = 0
  115.                      END IF
  116.                      MYPZ = MYPE / ( NPX*NPY )
  117.                
  118.                      ! --------------
  119.                      ! Set neighbors.
  120.                      ! --------------
  121.                
  122.                      ALLOCATE ( NEIGHBORS(MAX_NUM_NEIGHBORS), STAT = IERR )
  123.    V--------<>       NEIGHBORS(1:MAX_NUM_NEIGHBORS) = -1
  124.  +                   CALL MG_ASSERT ( IERR, 'MG_INIT: ALLOCATE ( NEIGHBORS )', MAX_NUM_NEIGHBORS )
  125.                
  126.                      ALLOCATE ( NEIGHBORS_ORIG(MAX_NUM_NEIGHBORS), STAT = IERR )
  127.    V--------<>       NEIGHBORS_ORIG(1:MAX_NUM_NEIGHBORS) = -1
  128.  +                   CALL MG_ASSERT ( IERR, 'MG_INIT: ALLOCATE ( NEIGHBORS_ORIG )', MAX_NUM_NEIGHBORS )
  129.                
  130.                      NUM_NEIGHS = 0
  131.                      IF ( MYPY /= 0  ) THEN
  132.                         NEIGHBORS(SOUTH) = MYPE - NPX
  133.                         NUM_NEIGHS = NUM_NEIGHS + 1
  134.                      END IF
  135.                      IF ( MYPY /= NPY-1 ) THEN
  136.                         NEIGHBORS(NORTH) = MYPE + NPX
  137.                         NUM_NEIGHS = NUM_NEIGHS + 1
  138.                      END IF
  139.                      IF ( MYPX /= 0 ) THEN
  140.                         NEIGHBORS(WEST) = MYPE - 1
  141.                         NUM_NEIGHS = NUM_NEIGHS + 1
  142.                      END IF
  143.                      IF ( MYPX /= NPX-1 ) THEN
  144.                         NEIGHBORS(EAST) = MYPE + 1
  145.                         NUM_NEIGHS = NUM_NEIGHS + 1
  146.                      END IF
  147.                      IF ( MYPZ /= 0 ) THEN
  148.                         NEIGHBORS(BACK) = MYPE - ( NPX*NPY )
  149.                         NUM_NEIGHS = NUM_NEIGHS + 1
  150.                      END IF
  151.                      IF ( MYPZ /= NPZ-1 ) THEN
  152.                         NEIGHBORS(FRONT) = MYPE + ( NPX*NPY )
  153.                         NUM_NEIGHS = NUM_NEIGHS + 1
  154.                      END IF
  155.                
  156.    A--------<>       NEIGHBORS_ORIG = NEIGHBORS
  157.                
  158.                      ALLOCATE ( SPIKES(NUM_VARS,NUM_SPIKES), STAT = IERR )
  159.  +                   CALL MG_ASSERT ( IERR, 'MG_INIT: ALLOCATE ( SPIKES )', NUM_VARS*NUM_SPIKES )
  160.    AC-------<>       SPIKES = -1.0
  161.                
  162.                      ALLOCATE ( SPIKE_LOC(0:3,NUM_SPIKES), STAT = IERR )
  163.  +                   CALL MG_ASSERT ( IERR, 'MG_INIT: ALLOCATE ( SPIKE_LOC )', 4*NUM_SPIKES )
  164.    AC-------<>       SPIKE_LOC = -1
  165.                
  166.                      ALLOCATE ( SOURCE_TOTAL(NUM_VARS), STAT = IERR )
  167.  +                   CALL MG_ASSERT ( IERR, 'MG_INIT: ALLOCATE ( SOURCE_TOTAL )', NUM_VARS )
  168.    A--------<>       SOURCE_TOTAL = 0.0
  169.                
  170.                      ! -------------------------------------------------------
  171.                      ! ROOT_PE generates and distributes SPIKES and SPIKE_LOC.
  172.                      ! Each GRIDi has a unique SPIKE value, but for each set,
  173.                      ! all in same location within the GRIDi array.
  174.                      ! Global location computed, PEs determines ownership.
  175.                      ! -------------------------------------------------------
  176.                
  177.                      ! Determine global indices (excluding ghost)
  178.                
  179.                      GLOBAL_NX = NX * NPX
  180.                      GLOBAL_NY = NY * NPY
  181.                      GLOBAL_NZ = NZ * NPZ
  182.                
  183.                      MY_GLOBAL_NX_START = NX * MYPX + 1
  184.                      MY_GLOBAL_NY_START = NY * MYPY + 1
  185.                      MY_GLOBAL_NZ_START = NZ * MYPZ + 1
  186.                
  187.                      MY_GLOBAL_NX_END   = MY_GLOBAL_NX_START + NX - 1
  188.                      MY_GLOBAL_NY_END   = MY_GLOBAL_NY_START + NY - 1
  189.                      MY_GLOBAL_NZ_END   = MY_GLOBAL_NZ_START + NZ - 1
  190.                
  191.                      IF ( MYPE == ROOT_PE ) THEN
  192.                   
  193.  +                      CALL RANDOM_NUMBER ( SPIKES ( 1:NUM_VARS,1:NUM_SPIKES ) )
  194.    VCr2-----<>          SPIKES = SPIKES * GLOBAL_NX * GLOBAL_NY * GLOBAL_NZ
  195.                
  196.                         ALLOCATE ( RSPIKE_LOC(3,NUM_SPIKES), STAT = IERR )
  197.  +                      CALL RANDOM_NUMBER ( RSPIKE_LOC )
  198.                      
  199.                         ! First spike set to problem dimension, inserted center of global grid.
  200.                         SPIKES(1,1) = REAL ( GLOBAL_NX * GLOBAL_NY * GLOBAL_NZ )
  201.                
  202.                         SPIKE_LOC(0,1) = -1 
  203.                         SPIKE_LOC(1,1) = GLOBAL_NX / 2
  204.                         SPIKE_LOC(2,1) = GLOBAL_NY / 2
  205.                         SPIKE_LOC(3,1) = GLOBAL_NZ / 2
  206.                
  207.                         ! Set additional spikes randomly about global grid
  208.                
  209.    Vpr8------<          DO I = 2, NUM_SPIKES
  210.    Vpr8                    SPIKE_LOC(0,I) = -1   ! Owning MPI rank will set to its MYPE.
  211.    Vpr8                    SPIKE_LOC(1,I) = INT ( RSPIKE_LOC(1,I) * GLOBAL_NX )
  212.    Vpr8                    SPIKE_LOC(2,I) = INT ( RSPIKE_LOC(2,I) * GLOBAL_NY )
  213.    Vpr8                    SPIKE_LOC(3,I) = INT ( RSPIKE_LOC(3,I) * GLOBAL_NZ )
  214.    Vpr8------>          END DO
  215.                
  216.                         DEALLOCATE ( RSPIKE_LOC )
  217.                
  218.                      END IF ! ROOT_PE work.
  219.                
  220.                #if defined _MG_MPI
  221.                
  222.                      ! -----------------
  223.                      ! Distribute SPIKES
  224.                      ! -----------------
  225.                
  226.  +                   CALL MPI_BCAST ( SPIKES, NUM_VARS*NUM_SPIKES, MG_MPI_REAL, ROOT_PE,  &
  227.                                       MPI_COMM_MG, IERR )
  228.  +                   CALL MG_ASSERT ( IERR, 'INIT: MPI_BCAST(SPIKES)', IERR )
  229.                
  230.  +                   CALL MPI_BCAST ( SPIKE_LOC, 4*NUM_SPIKES, MPI_INTEGER, ROOT_PE,  &
  231.                                       MPI_COMM_MG, IERR )
  232.  +                   CALL MG_ASSERT ( IERR, 'INIT: MPI_BCAST(SPIKE_LOC)', IERR )
  233.                
  234.                #endif
  235.                
  236.                      ! Owning MPI rank determines converts the global location to its local array indices.
  237.                
  238.  + 1---------<       DO I = 1, NUM_SPIKES
  239.    1           
  240.    1                    XLOC = SPIKE_LOC ( 1, I ) ! Global values here.
  241.    1                    YLOC = SPIKE_LOC ( 2, I )
  242.    1                    ZLOC = SPIKE_LOC ( 3, I )
  243.    1           
  244.    1                    IF ( ( MY_GLOBAL_NX_START <= XLOC ) .AND. ( XLOC <= MY_GLOBAL_NX_END ) .AND.  &
  245.    1                         ( MY_GLOBAL_NY_START <= YLOC ) .AND. ( YLOC <= MY_GLOBAL_NY_END ) .AND.  &
  246.    1                         ( MY_GLOBAL_NZ_START <= ZLOC ) .AND. ( ZLOC <= MY_GLOBAL_NZ_END ) ) THEN
  247.    1              
  248.    1                       SPIKE_LOC ( 0, I ) = MYPE
  249.    1           
  250.    1                       SPIKE_LOC ( 1, I ) = SPIKE_LOC ( 1, I ) - MY_GLOBAL_NX_START
  251.    1                       SPIKE_LOC ( 2, I ) = SPIKE_LOC ( 2, I ) - MY_GLOBAL_NY_START 
  252.    1                       SPIKE_LOC ( 3, I ) = SPIKE_LOC ( 3, I ) - MY_GLOBAL_NZ_START 
  253.    1           
  254.    1                    ELSE
  255.    1           
  256.    1                       ! Not owner, so set to -1 (to make obvious).
  257.    1           
  258.    1 VsR----<>             SPIKE_LOC ( 0, I ) = -1
  259.    1           
  260.    1                       SPIKE_LOC ( 1, I ) = -1
  261.    1                       SPIKE_LOC ( 2, I ) = -1
  262.    1                       SPIKE_LOC ( 3, I ) = -1
  263.    1           
  264.    1                    END IF
  265.    1           
  266.    1--------->       END DO
  267.                
  268.                      RETURN
  269.                   
  270.                   END SUBROUTINE MG_INIT
ftn-5002 ftn: NOTE MG_INIT, File = MG_UTILS.F, Line = 270 
  Local variable "IX" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_INIT, File = MG_UTILS.F, Line = 270 
  Local variable "IZ" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_INIT, File = MG_UTILS.F, Line = 270 
  Local variable "OFFSET_Y" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_INIT, File = MG_UTILS.F, Line = 270 
  Local variable "J" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_INIT, File = MG_UTILS.F, Line = 270 
  Local variable "NVARS" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_INIT, File = MG_UTILS.F, Line = 270 
  Local variable "IY" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_INIT, File = MG_UTILS.F, Line = 270 
  Local variable "OFFSET_X" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_INIT, File = MG_UTILS.F, Line = 270 
  Local variable "OFFSET_Z" is declared but neither defined nor used.

  271.                
  272.                !  ===================================================================================
  273.                 
  274.                   SUBROUTINE MG_PRINT_HEADER ( COMM_METHOD, STENCIL, IERR )
  275.                
  276.                      IMPLICIT NONE
  277.                
  278.                      ! Argument Declarations
  279.                      INTEGER, INTENT(IN)  ::       &
  280.                         COMM_METHOD, STENCIL
  281.                
  282.                      INTEGER, INTENT(OUT) :: IERR
  283.                
  284.                      !  Purpose
  285.                      !  =======
  286.                      !  Collate, process, and report performance results.
  287.                
  288.                      ! Local Scalars
  289.                      CHARACTER(LEN=30) ::        &
  290.                         TEST_DATE
  291.                      CHARACTER(LEN=30) ::        &
  292.                         TEST_TIME
  293.                
  294.                      INTEGER ::            &
  295.                         I,                              &
  296.                         ICLOCK_RATE,                    &
  297.                         IDUM,                           &
  298.                         LEN
  299.                
  300.                      REAL(KIND=MG_REAL4) ::       &
  301.                         CLOCK_RES = 0.0
  302.                
  303.                      INTEGER(KIND=MG_INT8), PARAMETER ::  &
  304.                         SIZE_OF_DATA = 8
  305.                
  306.                      ! ---------------------
  307.                      ! Executable Statements
  308.                      ! ---------------------
  309.                
  310.                      IERR = 0
  311.                
  312.                      IF ( MYPE /= ROOT_PE ) &
  313.                         RETURN
  314.                
  315.                      CALL DATE_AND_TIME ( TEST_DATE, TEST_TIME )
  316.                
  317.                      WRITE(*,*)
  318.                      WRITE(*,100)
  319.                      WRITE(*,*) '          Mantevo miniapp MiniGhost experiment'
  320.                      WRITE(*,100)
  321.                
  322.                #if defined _MG_MPI
  323.  +                   CLOCK_RES = REAL(MPI_WTICK ( ))
  324.                
  325.                      WRITE(*,*)
  326.                      SELECT CASE ( COMM_METHOD )
  327.                         CASE ( COMM_METHOD_BSPMA )
  328.                
  329.                            WRITE(*,*) 'Communication strategy: full message aggregation (COMM_METHOD_BSPMA)'
  330.                
  331.                         CASE ( COMM_METHOD_SVAF )
  332.                
  333.                            WRITE(*,*) 'Communication strategy: one variable at a time (COMM_METHOD_SVAF)'
  334.                
  335.                         CASE DEFAULT
  336.                
  337.                            WRITE(*,*) '** Warning ** Unknown communication strategy'
  338.                
  339.                      END SELECT
  340.                #endif
  341.                
  342.                      WRITE(*,*)
  343.                
  344.                      SELECT CASE ( STENCIL )
  345.                
  346.                         CASE ( STENCIL_NONE )
  347.                
  348.                            WRITE(*,*) 'No computation inserted.'
  349.                
  350.                         CASE ( STENCIL_2D5PT )
  351.                
  352.                            WRITE(*,*) 'Computation: 5 pt difference stencil on a 2D grid (STENCIL_2D5PT)'
  353.                
  354.                         CASE ( STENCIL_2D9PT )
  355.                
  356.                            WRITE(*,*) 'Computation: 9 pt difference stencil on a 2D grid (STENCIL_2D9PT)'
  357.                
  358.                         CASE ( STENCIL_3D7PT )
  359.                
  360.                            WRITE(*,*) 'Computation: 7 pt difference stencil on a 3D grid (STENCIL_3D7PT)'
  361.                
  362.                         CASE ( STENCIL_3D27PT )
  363.                
  364.                            WRITE(*,*) 'Computation: 27 pt difference stencil on a 3D grid stencil (STENCIL_3D27PT)'
  365.                
  366.                         CASE DEFAULT
  367.                
  368.                            WRITE(*,*) '** Warning ** Unknown computation'
  369.                
  370.                      END SELECT
  371.                
  372.                      WRITE(*,*)
  373.                      WRITE(*,101) NX * NPX, NY * NPY, NZ * NPZ
  374.                      WRITE(*,102) NX, NY, NZ
  375.                      WRITE(*,*)
  376.                      WRITE(*,103) NUM_VARS
  377.                      WRITE(*,*)
  378.                      IF ( REPORT_DIFFUSION /= 0 ) THEN
  379.                         WRITE(*,104) REPORT_DIFFUSION, ERROR_TOL
  380.                      END IF
  381.                      WRITE(*,105) NUM_SUM_GRID, PERCENT_SUM
  382.                      WRITE(*,*)
  383.                      WRITE(*,110) NUM_TSTEPS
  384.                      WRITE(*,*)
  385.                #if defined _MG_MPI
  386.                      WRITE(*,120) NPX, NPY, NPZ
  387.                      WRITE(*,*)
  388.                      IF ( SCALING == SCALING_STRONG ) THEN   ! Not that it really matters.
  389.                         WRITE(*,*) 'MPI version, strong scaling'
  390.                      ELSE
  391.                         WRITE(*,*) 'MPI version, weak scaling'
  392.                      END IF
  393.                      WRITE(*,*)
  394.                      IF ( NUMPES == 1 ) THEN
  395.                         WRITE(*,121) TEST_TIME, TEST_DATE
  396.                      ELSE
  397.                         WRITE(*,122) NUMPES, TEST_TIME, TEST_DATE
  398.                      END IF
  399.                #elif defined _MG_SERIAL
  400.    D                 IF ( SCALING == SCALING_STRONG ) THEN   ! Not that it really matters.
  401.    D                    WRITE(*,123) 'Serial version, strong scaling', TEST_TIME, TEST_DATE
  402.    D                 ELSE
  403.    D                    WRITE(*,123) 'Serial version, weak scaling', TEST_TIME, TEST_DATE
  404.    D                 END IF
  405.    D                 WRITE(*,*)
  406.                #endif
  407.                
  408.                      ! Format statements
  409.                
  410.                 100  FORMAT ( ' =================================================' )
  411.                
  412.                 101  FORMAT ( '      Global Grid Dimension: ', I8, ', ', I8, ', ', I8 )
  413.                 102  FORMAT ( '      Local Grid Dimension : ', I8, ', ', I8, ', ', I8 )
  414.                
  415.                 103  FORMAT ( ' Number of variables: ', I2 )
  416.                 104  FORMAT ( ' Error reported every ', I3, ' time steps. Tolerance is ', 1PE8.2 )
  417.                 105  FORMAT ( ' Number of variables reduced each time step: ', I2, '; requested  ', I3, '%.')
  418.                
  419.                 110  FORMAT ( '      Time steps: ', I6 )
  420.                
  421.                 120  FORMAT ( '      Task grid: ', I5, ',', I5, ',', I5 )
  422.                
  423.                 121  FORMAT ( ' 1 process executing', // &
  424.                             ' Program execution at ', A10, ' on ', A8, '.' )
  425.                
  426.                 122  FORMAT ( I4, ' processes executing', // &
  427.                             ' Program execution at ', A10, ' on ', A8, '.' )
  428.                 123  FORMAT ( A32, ', ', A10, ' on ', A8, '.' )
  429.                
  430.                   END SUBROUTINE MG_PRINT_HEADER
ftn-5002 ftn: NOTE MG_PRINT_HEADER, File = MG_UTILS.F, Line = 430 
  Local variable "I" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_PRINT_HEADER, File = MG_UTILS.F, Line = 430 
  Local variable "IDUM" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_PRINT_HEADER, File = MG_UTILS.F, Line = 430 
  Local variable "ICLOCK_RATE" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_PRINT_HEADER, File = MG_UTILS.F, Line = 430 
  Local variable "LEN" is declared but neither defined nor used.

ftn-5008 ftn: NOTE MG_PRINT_HEADER, File = MG_UTILS.F, Line = 430 
  Named Constant "SIZE_OF_DATA" is not used.

ftn-5010 ftn: NOTE MG_PRINT_HEADER, File = MG_UTILS.F, Line = 430 
  Local variable "CLOCK_RES" is DATA initialized but not used.

ftn-5011 ftn: NOTE MG_PRINT_HEADER, File = MG_UTILS.F, Line = 430 
  Label "123" is unused.

  431.                
  432.                !  ===================================================================================
  433.                
  434.                   SUBROUTINE MG_GRID_INIT ( IERR ) 
  435.                
  436.                      INTEGER, INTENT(OUT) ::  &
  437.                         IERR                    ! Return status.
  438.                
  439.                      ! ------------------
  440.                      ! Local Declarations
  441.                      ! ------------------
  442.                
  443.                      LOGICAL ::               &
  444.                         MY_SPIKE
  445.                
  446.                      INTEGER ::  &
  447.                         SPIKE_LOC_X,          & !
  448.                         SPIKE_LOC_Y,          & !
  449.                         SPIKE_LOC_Z
  450.                
  451.                      ! ---------------------
  452.                      ! Executable Statements
  453.                      ! ---------------------
  454.                
  455.                      IERR = 0
  456.                
  457.                      ! Determine global indices (excluding ghost)
  458.                
  459.                      IF ( NUM_VARS > 0 ) THEN
  460.                         ALLOCATE ( GRID1( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  461.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID1 )', (NX+2)*(NY+2)*(NZ+2) )
  462.  +                      CALL MG_INIT_GRID ( GRID1, IERR )
  463.                      END IF
  464.                
  465.                      IF ( NUM_VARS > 1 ) THEN
  466.                         ALLOCATE ( GRID2( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  467.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID2 )', (NX+2)*(NY+2)*(NZ+2) )
  468.  +                      CALL MG_INIT_GRID ( GRID2, IERR )
  469.                      END IF
  470.                
  471.                      IF ( NUM_VARS > 2 ) THEN
  472.                         ALLOCATE ( GRID3( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  473.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID3 )', (NX+2)*(NY+2)*(NZ+2) )
  474.  +                      CALL MG_INIT_GRID ( GRID3, IERR )
  475.                      END IF
  476.                
  477.                      IF ( NUM_VARS > 3 ) THEN
  478.                         ALLOCATE ( GRID4( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  479.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID4 )', (NX+2)*(NY+2)*(NZ+2) )
  480.  +                      CALL MG_INIT_GRID ( GRID4, IERR )
  481.                      END IF
  482.                
  483.                      IF ( NUM_VARS > 4 ) THEN
  484.                         ALLOCATE ( GRID5( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  485.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID5 )', (NX+2)*(NY+2)*(NZ+2) )
  486.  +                      CALL MG_INIT_GRID ( GRID5, IERR )
  487.                      END IF
  488.                
  489.                      IF ( NUM_VARS > 5 ) THEN
  490.                         ALLOCATE ( GRID6( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  491.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID6 )', (NX+2)*(NY+2)*(NZ+2) )
  492.  +                      CALL MG_INIT_GRID ( GRID6, IERR )
  493.                      END IF
  494.                
  495.                      IF ( NUM_VARS > 6 ) THEN
  496.                         ALLOCATE ( GRID7( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  497.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID7 )', (NX+2)*(NY+2)*(NZ+2) )
  498.  +                      CALL MG_INIT_GRID ( GRID7, IERR )
  499.                      END IF
  500.                
  501.                      IF ( NUM_VARS > 7 ) THEN
  502.                         ALLOCATE ( GRID8( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  503.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID8 )', (NX+2)*(NY+2)*(NZ+2) )
  504.  +                      CALL MG_INIT_GRID ( GRID8, IERR )
  505.                      END IF
  506.                
  507.                      IF ( NUM_VARS > 8 ) THEN
  508.                         ALLOCATE ( GRID9( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  509.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID9 )', (NX+2)*(NY+2)*(NZ+2) )
  510.  +                      CALL MG_INIT_GRID ( GRID9, IERR )
  511.                      END IF
  512.                
  513.                      IF ( NUM_VARS > 9 ) THEN
  514.                         ALLOCATE ( GRID10( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  515.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID10 )', (NX+2)*(NY+2)*(NZ+2) )
  516.  +                      CALL MG_INIT_GRID ( GRID10, IERR )
  517.                      END IF
  518.                
  519.                      IF ( NUM_VARS > 10 ) THEN
  520.                         ALLOCATE ( GRID11( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  521.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID11 )', (NX+2)*(NY+2)*(NZ+2) )
  522.  +                      CALL MG_INIT_GRID ( GRID11, IERR )
  523.                      END IF
  524.                
  525.                      IF ( NUM_VARS > 11 ) THEN
  526.                         ALLOCATE ( GRID12( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  527.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID12 )', (NX+2)*(NY+2)*(NZ+2) )
  528.  +                      CALL MG_INIT_GRID ( GRID12, IERR )
  529.                      END IF
  530.                
  531.                      IF ( NUM_VARS > 12 ) THEN
  532.                         ALLOCATE ( GRID13( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  533.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID13 )', (NX+2)*(NY+2)*(NZ+2) )
  534.  +                      CALL MG_INIT_GRID ( GRID13, IERR )
  535.                      END IF
  536.                
  537.                      IF ( NUM_VARS > 13 ) THEN
  538.                         ALLOCATE ( GRID14( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  539.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID14 )', (NX+2)*(NY+2)*(NZ+2) )
  540.  +                      CALL MG_INIT_GRID ( GRID14, IERR )
  541.                      END IF
  542.                
  543.                      IF ( NUM_VARS > 14 ) THEN
  544.                         ALLOCATE ( GRID15( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  545.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID15 )', (NX+2)*(NY+2)*(NZ+2) )
  546.  +                      CALL MG_INIT_GRID ( GRID15, IERR )
  547.                      END IF
  548.                
  549.                      IF ( NUM_VARS > 15 ) THEN
  550.                         ALLOCATE ( GRID16( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  551.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID16 )', (NX+2)*(NY+2)*(NZ+2) )
  552.  +                      CALL MG_INIT_GRID ( GRID16, IERR )
  553.                      END IF
  554.                
  555.                      IF ( NUM_VARS > 16 ) THEN
  556.                         ALLOCATE ( GRID17( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  557.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID17 )', (NX+2)*(NY+2)*(NZ+2) )
  558.  +                      CALL MG_INIT_GRID ( GRID17, IERR )
  559.                      END IF
  560.                
  561.                      IF ( NUM_VARS > 17 ) THEN
  562.                         ALLOCATE ( GRID18( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  563.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID18 )', (NX+2)*(NY+2)*(NZ+2) )
  564.  +                      CALL MG_INIT_GRID ( GRID18, IERR )
  565.                      END IF
  566.                
  567.                      IF ( NUM_VARS > 18 ) THEN
  568.                         ALLOCATE ( GRID19( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  569.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID19 )', (NX+2)*(NY+2)*(NZ+2) )
  570.  +                      CALL MG_INIT_GRID ( GRID19, IERR )
  571.                      END IF
  572.                
  573.                      IF ( NUM_VARS > 19 ) THEN
  574.                         ALLOCATE ( GRID20( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  575.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID20 )', (NX+2)*(NY+2)*(NZ+2) )
  576.  +                      CALL MG_INIT_GRID ( GRID20, IERR )
  577.                      END IF
  578.                
  579.                      IF ( NUM_VARS > 20 ) THEN
  580.                         ALLOCATE ( GRID21( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  581.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID21 )', (NX+2)*(NY+2)*(NZ+2) )
  582.  +                      CALL MG_INIT_GRID ( GRID21, IERR )
  583.                      END IF
  584.                
  585.                      IF ( NUM_VARS > 21 ) THEN
  586.                         ALLOCATE ( GRID22( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  587.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID22 )', (NX+2)*(NY+2)*(NZ+2) )
  588.  +                      CALL MG_INIT_GRID ( GRID22, IERR )
  589.                      END IF
  590.                
  591.                      IF ( NUM_VARS > 22 ) THEN
  592.                         ALLOCATE ( GRID23( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  593.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID23 )', (NX+2)*(NY+2)*(NZ+2) )
  594.  +                      CALL MG_INIT_GRID ( GRID23, IERR )
  595.                      END IF
  596.                
  597.                      IF ( NUM_VARS > 23 ) THEN
  598.                         ALLOCATE ( GRID24( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  599.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID24 )', (NX+2)*(NY+2)*(NZ+2) )
  600.  +                      CALL MG_INIT_GRID ( GRID24, IERR )
  601.                      END IF
  602.                
  603.                      IF ( NUM_VARS > 24 ) THEN
  604.                         ALLOCATE ( GRID25( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  605.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID25 )', (NX+2)*(NY+2)*(NZ+2) )
  606.  +                      CALL MG_INIT_GRID ( GRID25, IERR )
  607.                      END IF
  608.                
  609.                      IF ( NUM_VARS > 25 ) THEN
  610.                         ALLOCATE ( GRID26( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  611.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID26 )', (NX+2)*(NY+2)*(NZ+2) )
  612.  +                      CALL MG_INIT_GRID ( GRID26, IERR )
  613.                      END IF
  614.                
  615.                      IF ( NUM_VARS > 26 ) THEN
  616.                            ALLOCATE ( GRID27( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  617.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID27 )', (NX+2)*(NY+2)*(NZ+2) )
  618.  +                      CALL MG_INIT_GRID ( GRID27, IERR )
  619.                      END IF
  620.                
  621.                      IF ( NUM_VARS > 27 ) THEN
  622.                         ALLOCATE ( GRID28( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  623.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID28 )', (NX+2)*(NY+2)*(NZ+2) )
  624.  +                      CALL MG_INIT_GRID ( GRID28, IERR )
  625.                      END IF
  626.                
  627.                      IF ( NUM_VARS > 28 ) THEN
  628.                         ALLOCATE ( GRID29( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  629.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID29 )', (NX+2)*(NY+2)*(NZ+2) )
  630.  +                      CALL MG_INIT_GRID ( GRID29, IERR )
  631.                      END IF
  632.                
  633.                      IF ( NUM_VARS > 29 ) THEN
  634.                         ALLOCATE ( GRID30( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  635.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID30 )', (NX+2)*(NY+2)*(NZ+2) )
  636.  +                      CALL MG_INIT_GRID ( GRID30, IERR )
  637.                      END IF
  638.                
  639.                
  640.                      IF ( NUM_VARS > 30 ) THEN
  641.                         ALLOCATE ( GRID31( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  642.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID31 )', (NX+2)*(NY+2)*(NZ+2) )
  643.  +                      CALL MG_INIT_GRID ( GRID31, IERR )
  644.                      END IF
  645.                
  646.                      IF ( NUM_VARS > 31 ) THEN
  647.                         ALLOCATE ( GRID32( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  648.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID32 )', (NX+2)*(NY+2)*(NZ+2) )
  649.  +                      CALL MG_INIT_GRID ( GRID32, IERR )
  650.                      END IF
  651.                
  652.                      IF ( NUM_VARS > 32 ) THEN
  653.                         ALLOCATE ( GRID33( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  654.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID33 )', (NX+2)*(NY+2)*(NZ+2) )
  655.  +                      CALL MG_INIT_GRID ( GRID33, IERR )
  656.                      END IF
  657.                
  658.                      IF ( NUM_VARS > 33 ) THEN
  659.                         ALLOCATE ( GRID34( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  660.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID34 )', (NX+2)*(NY+2)*(NZ+2) )
  661.  +                      CALL MG_INIT_GRID ( GRID34, IERR )
  662.                      END IF
  663.                
  664.                      IF ( NUM_VARS > 34 ) THEN
  665.                         ALLOCATE ( GRID35( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  666.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID35 )', (NX+2)*(NY+2)*(NZ+2) )
  667.  +                      CALL MG_INIT_GRID ( GRID35, IERR )
  668.                      END IF
  669.                
  670.                      IF ( NUM_VARS > 35 ) THEN
  671.                         ALLOCATE ( GRID36( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  672.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID36 )', (NX+2)*(NY+2)*(NZ+2) )
  673.  +                      CALL MG_INIT_GRID ( GRID36, IERR )
  674.                      END IF
  675.                
  676.                      IF ( NUM_VARS > 36 ) THEN
  677.                         ALLOCATE ( GRID37( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  678.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID37 )', (NX+2)*(NY+2)*(NZ+2) )
  679.  +                      CALL MG_INIT_GRID ( GRID37, IERR )
  680.                      END IF
  681.                
  682.                      IF ( NUM_VARS > 37 ) THEN
  683.                         ALLOCATE ( GRID38( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  684.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID38 )', (NX+2)*(NY+2)*(NZ+2) )
  685.  +                      CALL MG_INIT_GRID ( GRID38, IERR )
  686.                      END IF
  687.                
  688.                      IF ( NUM_VARS > 38 ) THEN
  689.                         ALLOCATE ( GRID39( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  690.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID39 )', (NX+2)*(NY+2)*(NZ+2) )
  691.  +                      CALL MG_INIT_GRID ( GRID39, IERR )
  692.                      END IF
  693.                
  694.                      IF ( NUM_VARS > 39 ) THEN
  695.                         ALLOCATE ( GRID40( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  696.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( GRID40 )', (NX+2)*(NY+2)*(NZ+2) )
  697.  +                      CALL MG_INIT_GRID ( GRID40, IERR )
  698.                      END IF
  699.                
  700.                      IF ( NUM_VARS > 40 ) THEN
  701.                         IERR = -1
  702.  +                      CALL MG_ASSERT ( IERR, 'GRID_INIT: TOO MANY VARS', NUM_VARS )
  703.                      END IF
  704.                
  705.                      ALLOCATE ( WORK( 0:NX+1, 0:NY+1, 0:NZ+1 ), STAT = IERR )
  706.  +                   CALL MG_ASSERT ( IERR, 'GRID_INIT: ALLOCATE ( WORK )', (NX+2)*(NY+2)*(NZ+2) )
  707.                
  708.                      RETURN
  709.                
  710.                   END SUBROUTINE MG_GRID_INIT
ftn-5002 ftn: NOTE MG_GRID_INIT, File = MG_UTILS.F, Line = 710 
  Local variable "MY_SPIKE" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_GRID_INIT, File = MG_UTILS.F, Line = 710 
  Local variable "SPIKE_LOC_Y" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_GRID_INIT, File = MG_UTILS.F, Line = 710 
  Local variable "SPIKE_LOC_X" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_GRID_INIT, File = MG_UTILS.F, Line = 710 
  Local variable "SPIKE_LOC_Z" is declared but neither defined nor used.

  711.                
  712.                !  ===================================================================================
  713.                
  714.                   SUBROUTINE MG_INSERT_SPIKE ( SPIKE_NUM, IERR )
  715.                
  716.                      ! Insert heat source (SPIKES) into arrays. 
  717.                      ! This vlaue is added to the total heat applied to the variable.
  718.                
  719.                      INTEGER, INTENT(IN) ::  &
  720.                         SPIKE_NUM
  721.                
  722.                      INTEGER, INTENT(OUT) ::  &
  723.                         IERR                    ! Return status.
  724.                
  725.                      ! ------------------
  726.                      ! Local Declarations
  727.                      ! ------------------
  728.                
  729.                      INTEGER ::  &
  730.                         IX,      & ! Local index
  731.                         IY,      & ! Local index
  732.                         IZ,      & ! Local index
  733.                         I          ! Counter
  734.                
  735.                      ! ---------------------
  736.                      ! Executable Statements
  737.                      ! ---------------------
  738.                
  739.                      IERR = 0
  740.                
  741.                      IF ( MYPE == ( SPIKE_LOC ( 0, SPIKE_NUM ) ) ) THEN
  742.                
  743.                         IX = SPIKE_LOC ( 1, SPIKE_NUM )
  744.                         IY = SPIKE_LOC ( 2, SPIKE_NUM )
  745.                         IZ = SPIKE_LOC ( 3, SPIKE_NUM )
  746.                
  747.                         IF ( NUM_VARS > 0 ) THEN
  748.                            GRID1( IX, IY, IZ ) = SPIKES( 1, SPIKE_NUM )
  749.                         END IF
  750.                
  751.                         IF ( NUM_VARS > 1 ) THEN
  752.                            GRID2( IX, IY, IZ ) = SPIKES( 2, SPIKE_NUM )
  753.                         END IF
  754.                
  755.                         IF ( NUM_VARS > 2 ) THEN
  756.                            GRID3( IX, IY, IZ ) = SPIKES( 3, SPIKE_NUM )
  757.                         END IF
  758.                
  759.                         IF ( NUM_VARS > 3 ) THEN
  760.                            GRID4( IX, IY, IZ ) = SPIKES( 4, SPIKE_NUM )
  761.                         END IF
  762.                
  763.                         IF ( NUM_VARS > 4 ) THEN
  764.                            GRID5( IX, IY, IZ ) = SPIKES( 5, SPIKE_NUM )
  765.                         END IF
  766.                   
  767.                         IF ( NUM_VARS > 5 ) THEN
  768.                            GRID6( IX, IY, IZ ) = SPIKES( 6, SPIKE_NUM )
  769.                         END IF
  770.                
  771.                         IF ( NUM_VARS > 6 ) THEN
  772.                            GRID7( IX, IY, IZ ) = SPIKES( 7, SPIKE_NUM )
  773.                         END IF
  774.                
  775.                         IF ( NUM_VARS > 7 ) THEN
  776.                            GRID8( IX, IY, IZ ) = SPIKES( 8, SPIKE_NUM )
  777.                         END IF
  778.                
  779.                         IF ( NUM_VARS > 8 ) THEN
  780.                            GRID9( IX, IY, IZ ) = SPIKES( 9, SPIKE_NUM )
  781.                         END IF
  782.                
  783.                         IF ( NUM_VARS > 9 ) THEN
  784.                            GRID10( IX, IY, IZ ) = SPIKES( 10, SPIKE_NUM )
  785.                         END IF
  786.                
  787.                         IF ( NUM_VARS > 10 ) THEN
  788.                            GRID11( IX, IY, IZ ) = SPIKES( 11, SPIKE_NUM )
  789.                         END IF
  790.                
  791.                         IF ( NUM_VARS > 11 ) THEN
  792.                            GRID12( IX, IY, IZ ) = SPIKES( 12, SPIKE_NUM )
  793.                         END IF
  794.                   
  795.                         IF ( NUM_VARS > 12 ) THEN
  796.                            GRID13( IX, IY, IZ ) = SPIKES( 13, SPIKE_NUM )
  797.                         END IF
  798.                
  799.                         IF ( NUM_VARS > 13 ) THEN
  800.                            GRID14( IX, IY, IZ ) = SPIKES( 14, SPIKE_NUM )
  801.                         END IF
  802.                
  803.                         IF ( NUM_VARS > 14 ) THEN
  804.                            GRID15( IX, IY, IZ ) = SPIKES( 15, SPIKE_NUM )
  805.                         END IF
  806.                
  807.                         IF ( NUM_VARS > 15 ) THEN
  808.                            GRID16( IX, IY, IZ ) = SPIKES( 16, SPIKE_NUM )
  809.                         END IF
  810.                
  811.                         IF ( NUM_VARS > 16 ) THEN
  812.                            GRID17( IX, IY, IZ ) = SPIKES( 17, SPIKE_NUM )
  813.                         END IF
  814.                
  815.                         IF ( NUM_VARS > 17 ) THEN
  816.                            GRID18( IX, IY, IZ ) = SPIKES( 18, SPIKE_NUM )
  817.                         END IF
  818.                
  819.                         IF ( NUM_VARS > 18 ) THEN
  820.                            GRID19( IX, IY, IZ ) = SPIKES( 19, SPIKE_NUM )
  821.                         END IF
  822.                
  823.                         IF ( NUM_VARS > 19 ) THEN
  824.                            GRID20( IX, IY, IZ ) = SPIKES( 20, SPIKE_NUM )
  825.                         END IF
  826.                
  827.                         IF ( NUM_VARS > 20 ) THEN
  828.                            GRID21( IX, IY, IZ ) = SPIKES( 21, SPIKE_NUM )
  829.                         END IF
  830.                
  831.                         IF ( NUM_VARS > 21 ) THEN
  832.                            GRID22( IX, IY, IZ ) = SPIKES( 22, SPIKE_NUM )
  833.                         END IF
  834.                
  835.                         IF ( NUM_VARS > 22 ) THEN
  836.                            GRID23( IX, IY, IZ ) = SPIKES( 23, SPIKE_NUM )
  837.                         END IF
  838.                
  839.                         IF ( NUM_VARS > 23 ) THEN
  840.                            GRID24( IX, IY, IZ ) = SPIKES( 24, SPIKE_NUM )
  841.                         END IF
  842.                
  843.                         IF ( NUM_VARS > 24 ) THEN
  844.                            GRID25( IX, IY, IZ ) = SPIKES( 25, SPIKE_NUM )
  845.                         END IF
  846.                
  847.                         IF ( NUM_VARS > 25 ) THEN
  848.                            GRID26( IX, IY, IZ ) = SPIKES( 26, SPIKE_NUM )
  849.                         END IF
  850.                
  851.                         IF ( NUM_VARS > 26 ) THEN
  852.                            GRID27( IX, IY, IZ ) = SPIKES( 27, SPIKE_NUM )
  853.                         END IF
  854.                
  855.                         IF ( NUM_VARS > 27 ) THEN
  856.                            GRID28( IX, IY, IZ ) = SPIKES( 28, SPIKE_NUM )
  857.                         END IF
  858.                
  859.                         IF ( NUM_VARS > 28 ) THEN
  860.                            GRID29( IX, IY, IZ ) = SPIKES( 29, SPIKE_NUM )
  861.                         END IF
  862.                
  863.                         IF ( NUM_VARS > 29 ) THEN
  864.                            GRID30( IX, IY, IZ ) = SPIKES( 30, SPIKE_NUM )
  865.                         END IF
  866.                
  867.                         IF ( NUM_VARS > 30 ) THEN
  868.                            GRID31( IX, IY, IZ ) = SPIKES( 31, SPIKE_NUM )
  869.                         END IF
  870.                
  871.                         IF ( NUM_VARS > 31 ) THEN
  872.                            GRID32( IX, IY, IZ ) = SPIKES( 32, SPIKE_NUM )
  873.                         END IF
  874.                
  875.                         IF ( NUM_VARS > 32 ) THEN
  876.                            GRID33( IX, IY, IZ ) = SPIKES( 33, SPIKE_NUM )
  877.                         END IF
  878.                
  879.                         IF ( NUM_VARS > 33 ) THEN
  880.                            GRID34( IX, IY, IZ ) = SPIKES( 34, SPIKE_NUM )
  881.                         END IF
  882.                
  883.                         IF ( NUM_VARS > 34 ) THEN
  884.                            GRID35( IX, IY, IZ ) = SPIKES( 35, SPIKE_NUM )
  885.                         END IF
  886.                
  887.                         IF ( NUM_VARS > 35 ) THEN
  888.                            GRID36( IX, IY, IZ ) = SPIKES( 36, SPIKE_NUM )
  889.                         END IF
  890.                
  891.                         IF ( NUM_VARS > 36 ) THEN
  892.                            GRID37( IX, IY, IZ ) = SPIKES( 37, SPIKE_NUM )
  893.                         END IF
  894.                
  895.                         IF ( NUM_VARS > 37 ) THEN
  896.                            GRID38( IX, IY, IZ ) = SPIKES( 38, SPIKE_NUM )
  897.                         END IF
  898.                
  899.                         IF ( NUM_VARS > 38 ) THEN
  900.                            GRID39( IX, IY, IZ ) = SPIKES( 39, SPIKE_NUM )
  901.                         END IF
  902.                
  903.                         IF ( NUM_VARS > 39 ) THEN
  904.                            GRID40( IX, IY, IZ ) = SPIKES( 40, SPIKE_NUM )
  905.                         END IF
  906.                
  907.                         IF ( NUM_VARS > 40 ) THEN
  908.                            IERR = -1
  909.  +                         CALL MG_ASSERT ( IERR, 'GRID_INIT: TOO MANY VARS', NUM_VARS )
  910.                         END IF
  911.                      END IF
  912.                
  913.                      IF ( MYPE == ROOT_PE ) THEN
  914.    Vr2-------<          DO I = 1, NUM_VARS
  915.    Vr2                     SOURCE_TOTAL( I ) = SOURCE_TOTAL( I ) + SPIKES( I, SPIKE_NUM )
  916.    Vr2------->          END DO
  917.                      END IF
  918.                
  919.                   END SUBROUTINE MG_INSERT_SPIKE
  920.                
  921.                !  ===================================================================================
  922.                
  923.                   SUBROUTINE MG_GRID_DEALLOC ( IERR )
  924.                   
  925.                      USE MG_CONSTANTS_MOD
  926.                   
  927.                      IMPLICIT NONE
  928.                   
  929.                      ! Variable Declarations
  930.                   
  931.                      INTEGER :: &
  932.                         IERR                            ! Return status
  933.                   
  934.                      ! ---------------------
  935.                      ! Executable Statements
  936.                      ! ---------------------
  937.                   
  938.                      IERR = 0
  939.                   
  940.                      IF ( ALLOCATED ( GRID1 )  ) DEALLOCATE ( GRID1 )
  941.                      IF ( ALLOCATED ( GRID2 )  ) DEALLOCATE ( GRID2 )
  942.                      IF ( ALLOCATED ( GRID3 )  ) DEALLOCATE ( GRID3 )
  943.                      IF ( ALLOCATED ( GRID4 )  ) DEALLOCATE ( GRID4 )
  944.                      IF ( ALLOCATED ( GRID5 )  ) DEALLOCATE ( GRID5 )
  945.                      IF ( ALLOCATED ( GRID6 )  ) DEALLOCATE ( GRID6 )
  946.                      IF ( ALLOCATED ( GRID7 )  ) DEALLOCATE ( GRID7 )
  947.                      IF ( ALLOCATED ( GRID8 )  ) DEALLOCATE ( GRID8 )
  948.                      IF ( ALLOCATED ( GRID9 )  ) DEALLOCATE ( GRID9 )
  949.                      IF ( ALLOCATED ( GRID10 ) ) DEALLOCATE ( GRID10 )
  950.                   
  951.                      IF ( ALLOCATED ( GRID11 ) ) DEALLOCATE ( GRID11 )
  952.                      IF ( ALLOCATED ( GRID12 ) ) DEALLOCATE ( GRID12 )
  953.                      IF ( ALLOCATED ( GRID13 ) ) DEALLOCATE ( GRID13 )
  954.                      IF ( ALLOCATED ( GRID14 ) ) DEALLOCATE ( GRID14 )
  955.                      IF ( ALLOCATED ( GRID15 ) ) DEALLOCATE ( GRID15 )
  956.                      IF ( ALLOCATED ( GRID16 ) ) DEALLOCATE ( GRID16 )
  957.                      IF ( ALLOCATED ( GRID17 ) ) DEALLOCATE ( GRID17 )
  958.                      IF ( ALLOCATED ( GRID18 ) ) DEALLOCATE ( GRID18 )
  959.                      IF ( ALLOCATED ( GRID19 ) ) DEALLOCATE ( GRID19 )
  960.                      IF ( ALLOCATED ( GRID20 ) ) DEALLOCATE ( GRID20 )
  961.                   
  962.                      IF ( ALLOCATED ( GRID21 ) ) DEALLOCATE ( GRID21 )
  963.                      IF ( ALLOCATED ( GRID22 ) ) DEALLOCATE ( GRID22 )
  964.                      IF ( ALLOCATED ( GRID23 ) ) DEALLOCATE ( GRID23 )
  965.                      IF ( ALLOCATED ( GRID24 ) ) DEALLOCATE ( GRID24 )
  966.                      IF ( ALLOCATED ( GRID25 ) ) DEALLOCATE ( GRID25 )
  967.                      IF ( ALLOCATED ( GRID26 ) ) DEALLOCATE ( GRID26 )
  968.                      IF ( ALLOCATED ( GRID27 ) ) DEALLOCATE ( GRID27 )
  969.                      IF ( ALLOCATED ( GRID28 ) ) DEALLOCATE ( GRID28 )
  970.                      IF ( ALLOCATED ( GRID29 ) ) DEALLOCATE ( GRID29 )
  971.                      IF ( ALLOCATED ( GRID30 ) ) DEALLOCATE ( GRID30 )
  972.                   
  973.                      IF ( ALLOCATED ( GRID31 ) ) DEALLOCATE ( GRID31 )
  974.                      IF ( ALLOCATED ( GRID32 ) ) DEALLOCATE ( GRID32 )
  975.                      IF ( ALLOCATED ( GRID33 ) ) DEALLOCATE ( GRID33 )
  976.                      IF ( ALLOCATED ( GRID34 ) ) DEALLOCATE ( GRID34 )
  977.                      IF ( ALLOCATED ( GRID35 ) ) DEALLOCATE ( GRID35 )
  978.                      IF ( ALLOCATED ( GRID36 ) ) DEALLOCATE ( GRID36 )
  979.                      IF ( ALLOCATED ( GRID37 ) ) DEALLOCATE ( GRID37 )
  980.                      IF ( ALLOCATED ( GRID38 ) ) DEALLOCATE ( GRID38 )
  981.                      IF ( ALLOCATED ( GRID39 ) ) DEALLOCATE ( GRID39 )
  982.                      IF ( ALLOCATED ( GRID40 ) ) DEALLOCATE ( GRID40 )
  983.                   
  984.                   END SUBROUTINE MG_GRID_DEALLOC
  985.                
  986.                !  ===================================================================================
  987.                
  988.                   SUBROUTINE MG_ASSERT ( IERR, ERROR_MSG, INFO )
  989.                
  990.                      USE MG_CONSTANTS_MOD
  991.                
  992.                      IMPLICIT NONE
  993.                
  994.                      CHARACTER(LEN=*), INTENT(IN) ::    &
  995.                         ERROR_MSG
  996.                
  997.                      INTEGER, INTENT(IN) ::             &
  998.                         IERR,                           & ! Error code.
  999.                         INFO
 1000.                
 1001.                      ! ---------------------
 1002.                      ! Executable Statements
 1003.                      ! ---------------------
 1004.                
 1005.                #if defined _MG_MPI
 1006.                
 1007.                      CHARACTER*(MPI_MAX_ERROR_STRING) STRING
 1008.                      INTEGER RESULTLEN, IERROR
 1009.                
 1010.                      IF ( IERR /= 0 ) THEN
 1011.                         WRITE(*,80) MYPE, TRIM(ERROR_MSG), IERR, INFO
 1012.  +                      call MPI_ERROR_STRING(IERR, STRING, RESULTLEN, IERROR)
 1013.                         WRITE(*,81) STRING
 1014.  +                      CALL MPI_ABORT ( MPI_COMM_MG, -1, IERR )
 1015.                      END IF
 1016.                
 1017.                 80   FORMAT ( '** Error ** [pe ', I5, '] ', A40, '; CODE = ', I7, &
 1018.                               '. Additional info:', I4 )
 1019.                 81   FORMAT ( 'MPI error message: ', A80)
 1020.                
 1021.                #else
 1022.    D           
 1023.    D                 IF ( IERR /= 0 ) THEN
 1024.    D                    WRITE(*,90) TRIM(ERROR_MSG), IERR, INFO
 1025.    D                    STOP
 1026.    D                 END IF
 1027.    D           
 1028.                #endif
 1029.                
 1030.                 90   FORMAT ( '** Error ** ', A40, '; CODE = ', I7, '. Additional info:', I4 )
 1031.                
 1032.                
 1033.                   END SUBROUTINE MG_ASSERT
ftn-5011 ftn: NOTE MG_ASSERT, File = MG_UTILS.F, Line = 1033 
  Label "90" is unused.

 1034.                
 1035.                !  ===================================================================================
 1036.                
 1037.                   SUBROUTINE MG_INIT_GRID( GRID, IERR )
 1038.                
 1039.                      IMPLICIT NONE
 1040.                
 1041.                      INTEGER, INTENT(OUT) ::  &
 1042.                         IERR                    ! Return status.
 1043.                
 1044.                      REAL(KIND=MG_REAL), DIMENSION(0:NX+1, 0:NY+1, 0:NZ+1), INTENT(OUT) :: &
 1045.                         GRID
 1046.                
 1047.                      ! ---------------
 1048.                      ! Local Variables
 1049.                      ! ---------------
 1050.                
 1051.                      INTEGER :: I, J, K
 1052.                
 1053.                      ! ---------------------
 1054.                      ! Executable Statements
 1055.                      ! ---------------------
 1056.                
 1057.                      ! Explicit loops enable first touch affinity for OpenMP.
 1058.                
 1059.                      IF ( DEBUG_GRID == 1 ) THEN
 1060.                
 1061.    M---------< !$OMP PARALLEL DO
 1062.  + M m-------<          DO K = 0, NZ+1
 1063.    M m C-----<             DO J = 0, NY+1
 1064.    M m C AC--<                DO I = 0, NX+1
 1065.    M m C AC                      GRID(I, J, K) = 0.0
 1066.    M m C AC-->                END DO
 1067.    M m C----->             END DO
 1068.    M m------->          END DO
 1069.    M---------> !$OMP END PARALLEL DO
 1070.                
 1071.                      ELSE
 1072.                
 1073.    M---------< !$OMP PARALLEL DO
 1074.  + M m-------<          DO K = 0, NZ+1
 1075.    M m C-----<             DO J = 0, NY+1
 1076.  + M m C C---<                DO I = 0, NX+1
 1077.    M m C C                       CALL RANDOM_NUMBER( GRID(I, J, K) )
 1078.    M m C C--->                END DO
 1079.    M m C----->             END DO
 1080.    M m------->          END DO
 1081.    M---------> !$OMP END PARALLEL DO
 1082.                
 1083.                      END IF
 1084.                
 1085.                      RETURN
 1086.                
 1087.                   END SUBROUTINE MG_INIT_GRID
ftn-5005 ftn: NOTE MG_INIT_GRID, File = MG_UTILS.F, Line = 1087 
  Dummy Argument "IERR" which has INTENT(OUT) is not assigned a value or

 1088.                
 1089.                !  ===================================================================================
 1090.                
 1091.                   DOUBLE PRECISION FUNCTION MG_TIMER ()
 1092.                
 1093.                #if defined _MG_MPI
 1094.                      include 'mpif.h'
 1095.                
 1096.  +                   MG_TIMER = MPI_WTIME ()
 1097.                
 1098.                #else
 1099.    D                 INTEGER COUNT_1, COUNT_RATE, COUNT_MAX
 1100.    D           
 1101.    D                 CALL SYSTEM_CLOCK (COUNT_1, COUNT_RATE, COUNT_MAX)
 1102.    D                 MG_TIMER = COUNT_1 * 1.0 / COUNT_RATE
 1103.    D           
 1104.                #endif
 1105.                
 1106.                      RETURN
 1107.                 
 1108.                   END FUNCTION MG_TIMER
ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_KEYVAL_INVALID" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LAND" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LASTUSEDCODE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LB" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LOCK_EXCLUSIVE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LOCK_SHARED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LOGICAL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LONG" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LONG_DOUBLE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LONG_DOUBLE_INT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LONG_INT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LONG_LONG" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LONG_LONG_INT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LOR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_LXOR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MAX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MAXLOC" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MAX_DATAREP_STRING" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MAX_ERROR_STRING" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MAX_INFO_KEY" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MAX_INFO_VAL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MAX_LIBRARY_VERSION_STRING" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MAX_OBJECT_NAME" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MAX_PORT_NAME" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MAX_PROCESSOR_NAME" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MESSAGE_NO_PROC" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MESSAGE_NULL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MIN" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MINLOC" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_APPEND" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_CREATE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_DELETE_ON_CLOSE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_EXCL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_NOCHECK" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_NOPRECEDE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_NOPUT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_NOSTORE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_NOSUCCEED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_RDONLY" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_RDWR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_SEQUENTIAL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_UNIQUE_OPEN" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_MODE_WRONLY" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_NO_OP" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_2DOUBLE_PRECISION" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_IO" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_OFFSET" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INTEGER_KIND" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_2INT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_OFFSET_KIND" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_OP_NULL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ORDER_C" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ORDER_FORTRAN" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_PACKED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_PROC_NULL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_PROD" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_REAL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_REAL16" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_REAL4" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_REAL8" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_REPLACE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_REQUEST_NULL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ROOT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SEEK_CUR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SEEK_END" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SEEK_SET" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SHORT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SHORT_INT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SIGNED_CHAR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SIMILAR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SOURCE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SUBARRAYS_SUPPORTED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SUBVERSION" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SUCCESS" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_SUM" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_TAG" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_TAG_UB" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_THREAD_FUNNELED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_THREAD_MULTIPLE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_THREAD_SERIALIZED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_THREAD_SINGLE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_TYPECLASS_COMPLEX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_TYPECLASS_INTEGER" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_TYPECLASS_REAL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UB" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UINT16_T" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UINT32_T" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UINT64_T" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UINT8_T" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UNDEFINED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UNEQUAL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UNIVERSE_SIZE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UNSIGNED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UNSIGNED_CHAR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UNSIGNED_LONG" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UNSIGNED_LONG_LONG" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_UNSIGNED_SHORT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_VERSION" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WCHAR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_BASE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_CREATE_FLAVOR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_DISP_UNIT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_FLAVOR_ALLOCATE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_FLAVOR_CREATE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_FLAVOR_DYNAMIC" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_FLAVOR_SHARED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_MODEL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_NULL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_SEPARATE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_SIZE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WIN_UNIFIED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_WTIME_IS_GLOBAL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_2INTEGER" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_2REAL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ADDRESS_KIND" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_AINT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ANY_SOURCE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ANY_TAG" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_APPNUM" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ASYNC_PROTECTS_NONBLOCKING" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_BAND" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_BOR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_BSEND_OVERHEAD" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_BXOR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_BYTE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_CART" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_CHAR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_CHARACTER" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_CONTIGUOUS" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_DARRAY" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_DUP" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_F90_COMPLEX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_F90_INTEGER" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_F90_REAL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_HINDEXED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_HINDEXED_BLOCK" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_HINDEXED_INTEGER" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_HVECTOR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_HVECTOR_INTEGER" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_INDEXED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_INDEXED_BLOCK" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_NAMED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_RESIZED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_STRUCT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_STRUCT_INTEGER" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_SUBARRAY" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMBINER_VECTOR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMM_NULL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMM_SELF" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMM_TYPE_SHARED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMM_WORLD" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMPLEX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMPLEX16" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMPLEX32" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COMPLEX8" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_CONGRUENT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COUNT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_COUNT_KIND" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_CXX_BOOL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_CXX_DOUBLE_COMPLEX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_CXX_FLOAT_COMPLEX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_CXX_LONG_DOUBLE_COMPLEX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_C_BOOL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_C_COMPLEX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_C_DOUBLE_COMPLEX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_C_FLOAT_COMPLEX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_C_LONG_DOUBLE_COMPLEX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_DISPLACEMENT_CURRENT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_DISTRIBUTE_BLOCK" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_DISTRIBUTE_CYCLIC" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_DISTRIBUTE_DFLT_DARG" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_DISTRIBUTE_NONE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_DIST_GRAPH" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_DOUBLE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_DOUBLE_COMPLEX" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_DOUBLE_INT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_DOUBLE_PRECISION" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERRHANDLER_NULL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERROR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERRORS_ARE_FATAL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERRORS_RETURN" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_ACCESS" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_AMODE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_ARG" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_ASSERT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_BAD_FILE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_BASE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_BUFFER" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_COMM" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_CONVERSION" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_COUNT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_DIMS" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_DISP" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_DUP_DATAREP" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_FILE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_FILE_EXISTS" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_FILE_IN_USE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_GROUP" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_INFO" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_INFO_KEY" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_INFO_NOKEY" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_INFO_VALUE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_INTERN" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_IN_STATUS" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_IO" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_KEYVAL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_LASTCODE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_LOCKTYPE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_NAME" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_NOT_SAME" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_NO_MEM" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_NO_SPACE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_NO_SUCH_FILE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_OP" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_OTHER" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_PENDING" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_PORT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_QUOTA" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_RANK" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_READ_ONLY" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_REQUEST" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_RMA_ATTACH" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_RMA_CONFLICT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_RMA_FLAVOR" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_RMA_RANGE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_RMA_SHARED" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_RMA_SYNC" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_ROOT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_SERVICE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_SIZE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_SPAWN" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_TAG" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_TOPOLOGY" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_TRUNCATE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_TYPE" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_UNKNOWN" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_UNSUPPORTED_DATAREP" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_UNSUPPORTED_OPERATION" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_ERR_WIN" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_FILE_NULL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_FLOAT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_FLOAT_INT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_GRAPH" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_GROUP_EMPTY" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_GROUP_NULL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_HOST" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_IDENT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INFO_ENV" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INFO_NULL" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INT" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INT16_T" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INT32_T" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INT64_T" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INT8_T" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INTEGER" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INTEGER1" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INTEGER16" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INTEGER2" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INTEGER4" is not used.

ftn-5008 ftn: NOTE MG_TIMER, File = MG_UTILS.F, Line = 1108 
  Named Constant "MPI_INTEGER8" is not used.

 1109.                !  ===================================================================================
 1110.                
 1111.                   DOUBLE PRECISION FUNCTION MG_COMPUTE_STDDEV ( VALUES, MEAN )
 1112.                
 1113.                      DOUBLE PRECISION :: &
 1114.                         VALUES(*), MEAN
 1115.                
 1116.                      INTEGER :: I 
 1117.                      DOUBLE PRECISION :: TMP
 1118.                
 1119.                      TMP = 0.0
 1120.    Vr6-------<       DO I = 1, NUMPES
 1121.    Vr6                  TMP = TMP + ( VALUES(I) - MEAN )**2
 1122.    Vr6------->       END DO
 1123.                
 1124.                      MG_COMPUTE_STDDEV = SQRT ( TMP / REAL( NUMPES ))
 1125.                
 1126.                      RETURN
 1127.                
 1128.                   END FUNCTION MG_COMPUTE_STDDEV
 1129.                
 1130.                !  ===================================================================================
 1131.                
 1132.                END MODULE MG_UTILS_MOD

ftn-3021 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 92, Column = 12 
  "mpi_comm_dup" (called from "mg_init") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 94, Column = 12 
  "mpi_errhandler_set" (called from "mg_init") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 96, Column = 12 
  "mpi_comm_rank" (called from "mg_init") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 98, Column = 12 
  "mpi_comm_size" (called from "mg_init") was not inlined because the compiler was unable to locate the routine.

ftn-6204 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 123 
  A loop starting at line 123 was vectorized.

ftn-3118 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 124, Column = 12 
  "mg_assert" (called from "mg_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-6204 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 127 
  A loop starting at line 127 was vectorized.

ftn-3118 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 128, Column = 12 
  "mg_assert" (called from "mg_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-6202 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 156 
  A loop starting at line 156 was replaced by a library call.

ftn-3118 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 159, Column = 12 
  "mg_assert" (called from "mg_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-6066 ftn: SCALAR MG_INIT, File = MG_UTILS.F, Line = 160 
   A loop nest at line 160 collapsed to a single loop.

ftn-6202 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 160 
  A loop starting at line 160 was replaced by a library call.

ftn-3118 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 163, Column = 12 
  "mg_assert" (called from "mg_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-6066 ftn: SCALAR MG_INIT, File = MG_UTILS.F, Line = 164 
   A loop nest at line 164 collapsed to a single loop.

ftn-6202 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 164 
  A loop starting at line 164 was replaced by a library call.

ftn-3118 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 167, Column = 12 
  "mg_assert" (called from "mg_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-6202 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 168 
  A loop starting at line 168 was replaced by a library call.

ftn-6332 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 193 
  A loop starting at line 193 was not vectorized because it does not map well onto the target architecture.

ftn-6066 ftn: SCALAR MG_INIT, File = MG_UTILS.F, Line = 194 
   A loop nest at line 194 collapsed to a single loop.

ftn-6005 ftn: SCALAR MG_INIT, File = MG_UTILS.F, Line = 194 
  A loop starting at line 194 was unrolled 2 times.

ftn-6204 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 194 
  A loop starting at line 194 was vectorized.

ftn-6332 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 197 
  A loop starting at line 197 was not vectorized because it does not map well onto the target architecture.

ftn-6005 ftn: SCALAR MG_INIT, File = MG_UTILS.F, Line = 209 
  A loop starting at line 209 was unrolled 8 times.

ftn-6217 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 209 
  A loop starting at line 209 was partially and conditionally vectorized.

ftn-3021 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 226, Column = 12 
  "mpi_bcast" (called from "mg_init") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 228, Column = 12 
  "mg_assert" (called from "mg_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3021 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 230, Column = 12 
  "mpi_bcast" (called from "mg_init") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_INIT, File = MG_UTILS.F, Line = 232, Column = 12 
  "mg_assert" (called from "mg_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-6294 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 238 
  A loop starting at line 238 was not vectorized because a better candidate was found at line 258.

ftn-6079 ftn: SCALAR MG_INIT, File = MG_UTILS.F, Line = 258 
  A loop starting at line 258 was created by rerolling 4 statements.

ftn-6205 ftn: VECTOR MG_INIT, File = MG_UTILS.F, Line = 258 
  A loop starting at line 258 was vectorized with a single vector iteration.

ftn-3021 ftn: IPA MG_PRINT_HEADER, File = MG_UTILS.F, Line = 323, Column = 24 
  "mpi_wtick" (called from "mg_print_header") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 461, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 462, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 467, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 468, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 473, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 474, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 479, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 480, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 485, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 486, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 491, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 492, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 497, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 498, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 503, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 504, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 509, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 510, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 515, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 516, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 521, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 522, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 527, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 528, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 533, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 534, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 539, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 540, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 545, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 546, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 551, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 552, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 557, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 558, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 563, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 564, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 569, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 570, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 575, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 576, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 581, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 582, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 587, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 588, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 593, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 594, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 599, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 600, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 605, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 606, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 611, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 612, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 617, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 618, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 623, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 624, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 629, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 630, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 635, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 636, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 642, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 643, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 648, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 649, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 654, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 655, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 660, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 661, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 666, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 667, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 672, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 673, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 678, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 679, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 684, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 685, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 690, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 691, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 696, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3171 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 697, Column = 15 
  "mg_init_grid" (called from "mg_grid_init") was not inlined because it is not in the body of a loop.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 702, Column = 15 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3118 ftn: IPA MG_GRID_INIT, File = MG_UTILS.F, Line = 706, Column = 12 
  "mg_assert" (called from "mg_grid_init") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-3118 ftn: IPA MG_INSERT_SPIKE, File = MG_UTILS.F, Line = 909, Column = 18 
  "mg_assert" (called from "mg_insert_spike") was not inlined because the call site will not flatten.  "mpi_abort_" is missing.

ftn-6005 ftn: SCALAR MG_INSERT_SPIKE, File = MG_UTILS.F, Line = 914 
  A loop starting at line 914 was unrolled 2 times.

ftn-6204 ftn: VECTOR MG_INSERT_SPIKE, File = MG_UTILS.F, Line = 914 
  A loop starting at line 914 was vectorized.

ftn-3021 ftn: IPA MG_ASSERT, File = MG_UTILS.F, Line = 1012, Column = 15 
  "mpi_error_string" (called from "mg_assert") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA MG_ASSERT, File = MG_UTILS.F, Line = 1014, Column = 15 
  "mpi_abort" (called from "mg_assert") was not inlined because the compiler was unable to locate the routine.

ftn-6823 ftn: THREAD MG_INIT_GRID, File = MG_UTILS.F, Line = 1061 
  A region starting at line 1061 and ending at line 1069 was multi-threaded.

ftn-6294 ftn: VECTOR MG_INIT_GRID, File = MG_UTILS.F, Line = 1062 
  A loop starting at line 1062 was not vectorized because a better candidate was found at line 1064.

ftn-6817 ftn: THREAD MG_INIT_GRID, File = MG_UTILS.F, Line = 1062 
  A loop starting at line 1062 was partitioned.

ftn-6003 ftn: SCALAR MG_INIT_GRID, File = MG_UTILS.F, Line = 1063 
  A loop starting at line 1063 was collapsed into the loop starting at line 1064.

ftn-6202 ftn: VECTOR MG_INIT_GRID, File = MG_UTILS.F, Line = 1064 
  A loop starting at line 1064 was replaced by a library call.

ftn-6823 ftn: THREAD MG_INIT_GRID, File = MG_UTILS.F, Line = 1073 
  A region starting at line 1073 and ending at line 1081 was multi-threaded.

ftn-6817 ftn: THREAD MG_INIT_GRID, File = MG_UTILS.F, Line = 1074 
  A loop starting at line 1074 was partitioned.

ftn-6250 ftn: VECTOR MG_INIT_GRID, File = MG_UTILS.F, Line = 1074 
  A loop starting at line 1074 was not vectorized for an unspecified reason.

ftn-6003 ftn: SCALAR MG_INIT_GRID, File = MG_UTILS.F, Line = 1075 
  A loop starting at line 1075 was collapsed into the loop starting at line 1076.

ftn-6332 ftn: VECTOR MG_INIT_GRID, File = MG_UTILS.F, Line = 1076 
  A loop starting at line 1076 was not vectorized because it does not map well onto the target architecture.

ftn-3021 ftn: IPA MG_TIMER, File = MG_UTILS.F, Line = 1096, Column = 18 
  "mpi_wtime" (called from "mg_timer") was not inlined because the compiler was unable to locate the routine.

ftn-6005 ftn: SCALAR MG_COMPUTE_STDDEV, File = MG_UTILS.F, Line = 1120 
  A loop starting at line 1120 was unrolled 6 times.

ftn-6204 ftn: VECTOR MG_COMPUTE_STDDEV, File = MG_UTILS.F, Line = 1120 
  A loop starting at line 1120 was vectorized.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
               C r o s s   R e f e r e n c e   for   MG_UTILS_MOD
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                                      Storage/Owner                   
----                                      -------------                   

100                                                                       
  FORMAT label
  Declared       410
  Defined   
  Referenced

101                                                                       
  FORMAT label
  Declared       412
  Defined   
  Referenced

102                                                                       
  FORMAT label
  Declared       413
  Defined   
  Referenced

103                                                                       
  FORMAT label
  Declared       415
  Defined   
  Referenced

104                                                                       
  FORMAT label
  Declared       416
  Defined   
  Referenced

105                                                                       
  FORMAT label
  Declared       417
  Defined   
  Referenced

110                                                                       
  FORMAT label
  Declared       419
  Defined   
  Referenced

120                                                                       
  FORMAT label
  Declared       421
  Defined   
  Referenced

121                                                                       
  FORMAT label
  Declared       423
  Defined   
  Referenced

122                                                                       
  FORMAT label
  Declared       426
  Defined   
  Referenced

123                                                                       
  FORMAT label
  Declared       428
  Defined   
  Referenced

80                                                                        
  FORMAT label
  Declared      1017
  Defined   
  Referenced

81                                                                        
  FORMAT label
  Declared      1019
  Defined   
  Referenced

90                                                                        
  FORMAT label
  Declared      1030
  Defined   
  Referenced

ALLOCATED                                                                 
  Function, Integer, Intrinsic, Pure
  Declared  
  Defined   
  Referenced     940     941     942     943     944     945     946     947     948     949     951     952     953     954     955
           956     957     958     959     960     962     963     964     965     966     967     968     969     970     971
           973     974     975     976     977     978     979     980     981     982

BACK                                      Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     148
  Referenced in contained procedure

CLOCK_RES                                 Static offset=0                 
  Variable, Real(kind=4), Initialized, Save
  Declared       301
  Defined        323
  Referenced

COMM_METHOD                               MG_PRINT_HEADER                 
  Dummy Argument, Integer, Intent(in)
  Declared       274     280
  Defined   
  Referenced     326

COMM_METHOD_BSPMA                         Module MG_OPTIONS_MOD           
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced     327
  Referenced in contained procedure

COMM_METHOD_SVAF                          Module MG_OPTIONS_MOD           
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced     331
  Referenced in contained procedure

DATE_AND_TIME                                                             
  Subroutine, Intrinsic
  Declared  
  Defined   
  Referenced     315

DEBUG_GRID                                Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced    1059
  Referenced in contained procedure

EAST                                      Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     144
  Referenced in contained procedure

ERROR_MSG                                 MG_ASSERT                       
  Dummy Argument, Character(*), Intent(in)
  Declared       988     995
  Defined   
  Referenced    1011

ERROR_TOL                                 Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc
  Declared  
  Defined   
  Referenced     379
  Referenced in contained procedure

FRONT                                     Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     152
  Referenced in contained procedure

GLOBAL_NX                                 Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        179
  Referenced     194     200     203     211
  Referenced in contained procedure

GLOBAL_NY                                 Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        180
  Referenced     194     200     204     212
  Referenced in contained procedure

GLOBAL_NZ                                 Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        181
  Referenced     194     200     205     213
  Referenced in contained procedure

GRID                                      MG_INIT_GRID                    
  Dummy Argument, Real(kind=8), Dimension(0:<exp>,0:<exp>,0:<exp>),
                                                        Intent(out)
  Declared      1037    1045
  Defined       1065    1077
  Referenced

GRID1                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        748
  Referenced     460     462
  Referenced in contained procedure

GRID1                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     940

GRID10                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        784
  Referenced     514     516
  Referenced in contained procedure

GRID10                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     949

GRID11                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        788
  Referenced     520     522
  Referenced in contained procedure

GRID11                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     951

GRID12                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        792
  Referenced     526     528
  Referenced in contained procedure

GRID12                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     952

GRID13                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        796
  Referenced     532     534
  Referenced in contained procedure

GRID13                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     953

GRID14                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        800
  Referenced     538     540
  Referenced in contained procedure

GRID14                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     954

GRID15                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        804
  Referenced     544     546
  Referenced in contained procedure

GRID15                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     955

GRID16                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        808
  Referenced     550     552
  Referenced in contained procedure

GRID16                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     956

GRID17                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        812
  Referenced     556     558
  Referenced in contained procedure

GRID17                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     957

GRID18                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        816
  Referenced     562     564
  Referenced in contained procedure

GRID18                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     958

GRID19                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        820
  Referenced     568     570
  Referenced in contained procedure

GRID19                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     959

GRID2                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        752
  Referenced     466     468
  Referenced in contained procedure

GRID2                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     941

GRID20                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        824
  Referenced     574     576
  Referenced in contained procedure

GRID20                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     960

GRID21                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        828
  Referenced     580     582
  Referenced in contained procedure

GRID21                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     962

GRID22                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        832
  Referenced     586     588
  Referenced in contained procedure

GRID22                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     963

GRID23                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        836
  Referenced     592     594
  Referenced in contained procedure

GRID23                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     964

GRID24                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        840
  Referenced     598     600
  Referenced in contained procedure

GRID24                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     965

GRID25                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        844
  Referenced     604     606
  Referenced in contained procedure

GRID25                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     966

GRID26                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        848
  Referenced     610     612
  Referenced in contained procedure

GRID26                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     967

GRID27                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        852
  Referenced     616     618
  Referenced in contained procedure

GRID27                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     968

GRID28                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        856
  Referenced     622     624
  Referenced in contained procedure

GRID28                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     969

GRID29                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        860
  Referenced     628     630
  Referenced in contained procedure

GRID29                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     970

GRID3                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        756
  Referenced     472     474
  Referenced in contained procedure

GRID3                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     942

GRID30                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        864
  Referenced     634     636
  Referenced in contained procedure

GRID30                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     971

GRID31                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        868
  Referenced     641     643
  Referenced in contained procedure

GRID31                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     973

GRID32                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        872
  Referenced     647     649
  Referenced in contained procedure

GRID32                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     974

GRID33                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        876
  Referenced     653     655
  Referenced in contained procedure

GRID33                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     975

GRID34                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        880
  Referenced     659     661
  Referenced in contained procedure

GRID34                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     976

GRID35                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        884
  Referenced     665     667
  Referenced in contained procedure

GRID35                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     977

GRID36                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        888
  Referenced     671     673
  Referenced in contained procedure

GRID36                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     978

GRID37                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        892
  Referenced     677     679
  Referenced in contained procedure

GRID37                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     979

GRID38                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        896
  Referenced     683     685
  Referenced in contained procedure

GRID38                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     980

GRID39                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        900
  Referenced     689     691
  Referenced in contained procedure

GRID39                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     981

GRID4                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        760
  Referenced     478     480
  Referenced in contained procedure

GRID4                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     943

GRID40                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        904
  Referenced     695     697
  Referenced in contained procedure

GRID40                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     982

GRID5                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        764
  Referenced     484     486
  Referenced in contained procedure

GRID5                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     944

GRID6                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        768
  Referenced     490     492
  Referenced in contained procedure

GRID6                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     945

GRID7                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        772
  Referenced     496     498
  Referenced in contained procedure

GRID7                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     946

GRID8                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        776
  Referenced     502     504
  Referenced in contained procedure

GRID8                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     947

GRID9                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined        780
  Referenced     508     510
  Referenced in contained procedure

GRID9                                     Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     948

I                                         Stack                           
  Variable, Integer
  Declared        61
  Defined   
  Referenced     210     211     212     213     240     241     242     248     250     251     252     258     260     261     262

I                                         Stack                           
  Variable, Integer
  Declared       295
  Defined   
  Referenced

I                                         Stack                           
  Variable, Integer
  Declared       733
  Defined   
  Referenced     915

I                                         Stack                           
  Variable, Integer
  Declared      1051
  Defined   
  Referenced    1065    1077

I                                         Stack                           
  Variable, Integer
  Declared      1116
  Defined   
  Referenced    1121

ICLOCK_RATE                               Stack                           
  Variable, Integer
  Declared       296
  Defined   
  Referenced

IDUM                                      Stack                           
  Variable, Integer
  Declared       297
  Defined   
  Referenced

IERR                                      MG_INIT                         
  Dummy Argument, Integer
  Declared        49      54
  Defined         87
  Referenced      92      94      96      98     122     124     126     128     158     159     162     163     166     167     196
           227     228     231     232

IERR                                      MG_PRINT_HEADER                 
  Dummy Argument, Integer, Intent(out)
  Declared       274     282
  Defined        310
  Referenced

IERR                                      MG_GRID_INIT                    
  Dummy Argument, Integer, Intent(out)
  Declared       434     437
  Defined        455     701
  Referenced     460     461     462     466     467     468     472     473     474     478     479     480     484     485     486
           490     491     492     496     497     498     502     503     504     508     509     510     514     515     516
           520     521     522     526     527     528     532     533     534     538     539     540     544     545     546
           550     551     552     556     557     558     562     563     564     568     569     570     574     575     576
           580     581     582     586     587     588     592     593     594     598     599     600     604     605     606
           610     611     612     616     617     618     622     623     624     628     629     630     634     635     636
           641     642     643     647     648     649     653     654     655     659     660     661     665     666     667
           671     672     673     677     678     679     683     684     685     689     690     691     695     696     697
           702     705     706

IERR                                      MG_INSERT_SPIKE                 
  Dummy Argument, Integer, Intent(out)
  Declared       714     723
  Defined        739     908
  Referenced     909

IERR                                      MG_GRID_DEALLOC                 
  Dummy Argument, Integer
  Declared       923     932
  Defined        938
  Referenced

IERR                                      MG_ASSERT                       
  Dummy Argument, Integer, Intent(in)
  Declared       988     998
  Defined   
  Referenced    1010    1011    1012    1014

IERR                                      MG_INIT_GRID                    
  Dummy Argument, Integer, Intent(out)
  Declared      1037    1042
  Defined   
  Referenced

IERROR                                    Stack                           
  Variable, Integer
  Declared      1008
  Defined   
  Referenced    1012

INFO                                      MG_ASSERT                       
  Dummy Argument, Integer, Intent(in)
  Declared       988     999
  Defined   
  Referenced    1011

INT                                                                       
  Function, Integer, Intrinsic, Pure, Elemental
  Declared  
  Defined   
  Referenced     211     212     213

IX                                        Stack                           
  Variable, Integer
  Declared        62
  Defined   
  Referenced

IX                                        Stack                           
  Variable, Integer
  Declared       730
  Defined        743
  Referenced     748     752     756     760     764     768     772     776     780     784     788     792     796     800     804
           808     812     816     820     824     828     832     836     840     844     848     852     856     860     864
           868     872     876     880     884     888     892     896     900     904

IY                                        Stack                           
  Variable, Integer
  Declared        63
  Defined   
  Referenced

IY                                        Stack                           
  Variable, Integer
  Declared       731
  Defined        744
  Referenced     748     752     756     760     764     768     772     776     780     784     788     792     796     800     804
           808     812     816     820     824     828     832     836     840     844     848     852     856     860     864
           868     872     876     880     884     888     892     896     900     904

IZ                                        Stack                           
  Variable, Integer
  Declared        64
  Defined   
  Referenced

IZ                                        Stack                           
  Variable, Integer
  Declared       732
  Defined        745
  Referenced     748     752     756     760     764     768     772     776     780     784     788     792     796     800     804
           808     812     816     820     824     828     832     836     840     844     848     852     856     860     864
           868     872     876     880     884     888     892     896     900     904

J                                         Stack                           
  Variable, Integer
  Declared        65
  Defined   
  Referenced

J                                         Stack                           
  Variable, Integer
  Declared      1051
  Defined   
  Referenced    1065    1077

K                                         Stack                           
  Variable, Integer
  Declared      1051
  Defined   
  Referenced    1065    1077

LEN                                       Stack                           
  Variable, Integer
  Declared       298
  Defined   
  Referenced

MAX_NUM_NEIGHBORS                         Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     122     123     124     126     127     128
  Referenced in contained procedure

MEAN                                      MG_COMPUTE_STDDEV               
  Dummy Argument, Double Precision
  Declared      1111    1114
  Defined   
  Referenced    1121

MG_ASSERT                                                                 
  Subroutine, Module procedure
  Declared       988
  Defined   
  Referenced     124     124     128     128     159     163     167     228     228     232     232     461     467     473     479
           485     491     497     503     509     515     521     527     533     539     545     551     557     563     569
           575     581     587     593     599     605     611     617     623     629     635     642     648     654     660
           666     672     678     684     690     696     702     702     706     909     909

MG_COMPUTE_STDDEV                                                         
  Function, Double Precision, result(MG_COMPUTE_STDDEV), Module procedure
  Declared      1111
  Defined   
  Referenced

MG_COMPUTE_STDDEV                                                         
  Function Result, Double Precision
  Declared  
  Defined       1124
  Referenced

MG_CONSTANTS_MOD                                                          
  Module
  Declared  
  Defined   
  Referenced      30

MG_CONSTANTS_MOD                                                          
  Module, Used indirectly (from module MG_OPTIONS_MOD)
  Declared  
  Defined   
  Referenced

MG_CONSTANTS_MOD                                                          
  Module
  Declared  
  Defined   
  Referenced     925

MG_CONSTANTS_MOD                                                          
  Module
  Declared  
  Defined   
  Referenced     990

MG_GRID_DEALLOC                                                           
  Subroutine, Module procedure
  Declared       923
  Defined   
  Referenced

MG_GRID_INIT                                                              
  Subroutine, Module procedure
  Declared       434
  Defined   
  Referenced

MG_INIT                                                                   
  Subroutine, Module procedure
  Declared        49
  Defined   
  Referenced

MG_INIT_GRID                                                              
  Subroutine, Module procedure
  Declared      1037
  Defined   
  Referenced     462     468     474     480     486     492     498     504     510     516     522     528     534     540     546
           552     558     564     570     576     582     588     594     600     606     612     618     624     630     636
           643     649     655     661     667     673     679     685     691     697

MG_INSERT_SPIKE                                                           
  Subroutine, Module procedure
  Declared       714
  Defined   
  Referenced

MG_INT8                                   Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=1), Use assoc
  Declared  
  Defined   
  Referenced     303
  Referenced in contained procedure

MG_MPI_REAL                               Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     226
  Referenced in contained procedure

MG_OPTIONS_MOD                                                            
  Module
  Declared  
  Defined   
  Referenced      31

MG_PRINT_HEADER                                                           
  Subroutine, Module procedure
  Declared       274
  Defined   
  Referenced

MG_REAL                                   Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=1), Use assoc
  Declared  
  Defined   
  Referenced      80    1044
  Referenced in contained procedure

MG_REAL4                                  Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=1), Use assoc
  Declared  
  Defined   
  Referenced     300
  Referenced in contained procedure

MG_TIMER                                                                  
  Function, Double Precision, result(MG_TIMER), Module procedure
  Declared      1091
  Defined   
  Referenced

MG_TIMER                                                                  
  Function Result, Double Precision
  Declared  
  Defined       1096
  Referenced

MG_UTILS_MOD                                                              
  Module
  Declared        28
  Defined   
  Referenced

MOD                                                                       
  Function, Integer, Intrinsic, Pure, Elemental
  Declared  
  Defined   
  Referenced     108     110

MPIFCMB5                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB5                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB5                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB5                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB5                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB5                                                                  
  Common block 
  Declared       550     552
  Defined   
  Referenced

MPIFCMB9                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB9                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB9                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB9                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB9                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB9                                                                  
  Common block 
  Declared       551     553
  Defined   
  Referenced

MPIPRIV1                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV1                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV1                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV1                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV1                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV1                                                                  
  Common block 
  Declared       555     558
  Defined   
  Referenced

MPIPRIV2                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV2                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV2                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV2                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV2                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV2                                                                  
  Common block 
  Declared       557     558
  Defined   
  Referenced

MPIPRIVC                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIVC                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIVC                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIVC                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIVC                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIVC                                                                  
  Common block 
  Declared       560     561
  Defined   
  Referenced

MPI_2DOUBLE_PRECISION                                                     
  Parameter, Integer
  Declared       296     297
  Defined   
  Referenced

MPI_2INT                                                                  
  Parameter, Integer
  Declared       380     381
  Defined   
  Referenced

MPI_2INTEGER                                                              
  Parameter, Integer
  Declared       294     295
  Defined   
  Referenced

MPI_2REAL                                                                 
  Parameter, Integer
  Declared       298     299
  Defined   
  Referenced

MPI_ABORT                                                                 
  Subroutine
  Declared  
  Defined   
  Referenced    1014

MPI_ADDRESS_KIND                                                          
  Parameter, Integer
  Declared       332     333
  Defined   
  Referenced

MPI_AINT                                                                  
  Parameter, Integer
  Declared       410     411
  Defined   
  Referenced

MPI_ANY_SOURCE                                                            
  Parameter, Integer
  Declared       262     263
  Defined   
  Referenced

MPI_ANY_TAG                                                               
  Parameter, Integer
  Declared       264     265
  Defined   
  Referenced

MPI_APPNUM                                                                
  Parameter, Integer
  Declared       226     227
  Defined   
  Referenced

MPI_ARGVS_NULL                            /MPIPRIVC/ offset=0             
  Character(1), Dimension(1,1)
  Declared        16     560
  Defined   
  Referenced

MPI_ARGV_NULL                             /MPIPRIVC/ offset=8             
  Character(1), Dimension(1)
  Declared        17     560
  Defined   
  Referenced

MPI_ASYNC_PROTECTS_NONBLOCKING                                            
  Parameter, Logical
  Declared       532     533
  Defined   
  Referenced

MPI_BAND                                                                  
  Parameter, Integer
  Declared       170     171
  Defined   
  Referenced

MPI_BCAST                                                                 
  Subroutine, External
  Declared  
  Defined   
  Referenced     226     226     230     230

MPI_BOR                                                                   
  Parameter, Integer
  Declared       174     175
  Defined   
  Referenced

MPI_BOTTOM                                /MPIPRIV1/ offset=0             
  Integer
  Declared       534     555
  Defined   
  Referenced

MPI_BSEND_OVERHEAD                                                        
  Parameter, Integer
  Declared       258     259
  Defined   
  Referenced

MPI_BXOR                                                                  
  Parameter, Integer
  Declared       178     179
  Defined   
  Referenced

MPI_BYTE                                                                  
  Parameter, Integer
  Declared       302     303
  Defined   
  Referenced

MPI_CART                                                                  
  Parameter, Integer
  Declared       270     271
  Defined   
  Referenced

MPI_CHAR                                                                  
  Parameter, Integer
  Declared       340     341
  Defined   
  Referenced

MPI_CHARACTER                                                             
  Parameter, Integer
  Declared       300     301
  Defined   
  Referenced

MPI_COMBINER_CONTIGUOUS                                                   
  Parameter, Integer
  Declared       428     429
  Defined   
  Referenced

MPI_COMBINER_DARRAY                                                       
  Parameter, Integer
  Declared       450     451
  Defined   
  Referenced

MPI_COMBINER_DUP                                                          
  Parameter, Integer
  Declared       426     427
  Defined   
  Referenced

MPI_COMBINER_F90_COMPLEX                                                  
  Parameter, Integer
  Declared       454     455
  Defined   
  Referenced

MPI_COMBINER_F90_INTEGER                                                  
  Parameter, Integer
  Declared       456     457
  Defined   
  Referenced

MPI_COMBINER_F90_REAL                                                     
  Parameter, Integer
  Declared       452     453
  Defined   
  Referenced

MPI_COMBINER_HINDEXED                                                     
  Parameter, Integer
  Declared       440     441
  Defined   
  Referenced

MPI_COMBINER_HINDEXED_BLOCK                                               
  Parameter, Integer
  Declared       460     461
  Defined   
  Referenced

MPI_COMBINER_HINDEXED_INTEGER                                             
  Parameter, Integer
  Declared       438     439
  Defined   
  Referenced

MPI_COMBINER_HVECTOR                                                      
  Parameter, Integer
  Declared       434     435
  Defined   
  Referenced

MPI_COMBINER_HVECTOR_INTEGER                                              
  Parameter, Integer
  Declared       432     433
  Defined   
  Referenced

MPI_COMBINER_INDEXED                                                      
  Parameter, Integer
  Declared       436     437
  Defined   
  Referenced

MPI_COMBINER_INDEXED_BLOCK                                                
  Parameter, Integer
  Declared       442     443
  Defined   
  Referenced

MPI_COMBINER_NAMED                                                        
  Parameter, Integer
  Declared       424     425
  Defined   
  Referenced

MPI_COMBINER_RESIZED                                                      
  Parameter, Integer
  Declared       458     459
  Defined   
  Referenced

MPI_COMBINER_STRUCT                                                       
  Parameter, Integer
  Declared       446     447
  Defined   
  Referenced

MPI_COMBINER_STRUCT_INTEGER                                               
  Parameter, Integer
  Declared       444     445
  Defined   
  Referenced

MPI_COMBINER_SUBARRAY                                                     
  Parameter, Integer
  Declared       448     449
  Defined   
  Referenced

MPI_COMBINER_VECTOR                                                       
  Parameter, Integer
  Declared       430     431
  Defined   
  Referenced

MPI_COMM_DUP                                                              
  Subroutine
  Declared  
  Defined   
  Referenced      92

MPI_COMM_DUP_FN                                                           
  Procedure
  Declared       539
  Defined   
  Referenced

MPI_COMM_MG                               Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      92      94      96      98     227     231
  Referenced in contained procedure

MPI_COMM_MG                               Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced    1014

MPI_COMM_NULL                                                             
  Parameter, Integer
  Declared       194     195
  Defined   
  Referenced

MPI_COMM_NULL_COPY_FN                                                     
  Procedure
  Declared       540
  Defined   
  Referenced

MPI_COMM_NULL_DELETE_FN                                                   
  Procedure
  Declared       539
  Defined   
  Referenced

MPI_COMM_RANK                                                             
  Subroutine
  Declared  
  Defined   
  Referenced      96

MPI_COMM_SELF                                                             
  Parameter, Integer
  Declared       190     191
  Defined   
  Referenced

MPI_COMM_SIZE                                                             
  Subroutine, External
  Declared  
  Defined   
  Referenced      98

MPI_COMM_TYPE_SHARED                                                      
  Parameter, Integer
  Declared       478     479
  Defined   
  Referenced

MPI_COMM_WORLD                                                            
  Parameter, Integer
  Declared       188     189
  Defined   
  Referenced

MPI_COMM_WORLD                            Module MG_CONSTANTS_MOD         
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced      92
  Referenced in contained procedure

MPI_COMPLEX                                                               
  Parameter, Integer
  Declared       282     283
  Defined   
  Referenced

MPI_COMPLEX16                                                             
  Parameter, Integer
  Declared       328     329
  Defined   
  Referenced

MPI_COMPLEX32                                                             
  Parameter, Integer
  Declared       330     331
  Defined   
  Referenced

MPI_COMPLEX8                                                              
  Parameter, Integer
  Declared       326     327
  Defined   
  Referenced

MPI_CONGRUENT                                                             
  Parameter, Integer
  Declared       142     143
  Defined   
  Referenced

MPI_CONVERSION_FN_NULL                                                    
  Procedure
  Declared       545
  Defined   
  Referenced

MPI_COUNT                                                                 
  Parameter, Integer
  Declared       414     415
  Defined   
  Referenced

MPI_COUNT_KIND                                                            
  Parameter, Integer
  Declared       336     337
  Defined   
  Referenced

MPI_CXX_BOOL                                                              
  Parameter, Integer
  Declared       416     417
  Defined   
  Referenced

MPI_CXX_DOUBLE_COMPLEX                                                    
  Parameter, Integer
  Declared       420     421
  Defined   
  Referenced

MPI_CXX_FLOAT_COMPLEX                                                     
  Parameter, Integer
  Declared       418     419
  Defined   
  Referenced

MPI_CXX_LONG_DOUBLE_COMPLEX                                               
  Parameter, Integer
  Declared       422     423
  Defined   
  Referenced

MPI_C_BOOL                                                                
  Parameter, Integer
  Declared       400     401
  Defined   
  Referenced

MPI_C_COMPLEX                                                             
  Parameter, Integer
  Declared       404     405
  Defined   
  Referenced

MPI_C_DOUBLE_COMPLEX                                                      
  Parameter, Integer
  Declared       406     407
  Defined   
  Referenced

MPI_C_FLOAT_COMPLEX                                                       
  Parameter, Integer
  Declared       402     403
  Defined   
  Referenced

MPI_C_LONG_DOUBLE_COMPLEX                                                 
  Parameter, Integer
  Declared       408     409
  Defined   
  Referenced

MPI_DATATYPE_NULL                                                         
  Parameter, Integer
  Declared       204     205
  Defined   
  Referenced     319     325     331     365     383     409

MPI_DISPLACEMENT_CURRENT                                                  
  Parameter, Integer*8
  Declared       528     529
  Defined   
  Referenced

MPI_DISTRIBUTE_BLOCK                                                      
  Parameter, Integer
  Declared       520     521
  Defined   
  Referenced

MPI_DISTRIBUTE_CYCLIC                                                     
  Parameter, Integer
  Declared       522     523
  Defined   
  Referenced

MPI_DISTRIBUTE_DFLT_DARG                                                  
  Parameter, Integer
  Declared       526     527
  Defined   
  Referenced

MPI_DISTRIBUTE_NONE                                                       
  Parameter, Integer
  Declared       524     525
  Defined   
  Referenced

MPI_DIST_GRAPH                                                            
  Parameter, Integer
  Declared       272     273
  Defined   
  Referenced

MPI_DOUBLE                                                                
  Parameter, Integer
  Declared       362     363
  Defined   
  Referenced

MPI_DOUBLE_COMPLEX                                                        
  Parameter, Integer
  Declared       284     285
  Defined   
  Referenced

MPI_DOUBLE_INT                                                            
  Parameter, Integer
  Declared       374     375
  Defined   
  Referenced

MPI_DOUBLE_PRECISION                                                      
  Parameter, Integer
  Declared       290     291
  Defined   
  Referenced

MPI_DUP_FN                                                                
  Procedure
  Declared       536
  Defined   
  Referenced

MPI_ERRCODES_IGNORE                       /MPIPRIV2/ offset=160           
  Integer, Dimension(1)
  Declared        15     557
  Defined   
  Referenced

MPI_ERRHANDLER_NULL                                                       
  Parameter, Integer
  Declared       208     209
  Defined   
  Referenced

MPI_ERRHANDLER_SET                                                        
  Subroutine, External
  Declared  
  Defined   
  Referenced      94

MPI_ERROR                                                                 
  Parameter, Integer
  Declared         9      10
  Defined   
  Referenced

MPI_ERRORS_ARE_FATAL                                                      
  Parameter, Integer
  Declared       136     137
  Defined   
  Referenced

MPI_ERRORS_ARE_FATAL                      Module MG_CONSTANTS_MOD         
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced      94
  Referenced in contained procedure

MPI_ERRORS_RETURN                                                         
  Parameter, Integer
  Declared       138     139
  Defined   
  Referenced

MPI_ERROR_STRING                                                          
  Subroutine, External
  Declared  
  Defined   
  Referenced    1012

MPI_ERR_ACCESS                                                            
  Parameter, Integer
  Declared        72      73
  Defined   
  Referenced

MPI_ERR_AMODE                                                             
  Parameter, Integer
  Declared       124     125
  Defined   
  Referenced

MPI_ERR_ARG                                                               
  Parameter, Integer
  Declared        92      93
  Defined   
  Referenced

MPI_ERR_ASSERT                                                            
  Parameter, Integer
  Declared        38      39
  Defined   
  Referenced

MPI_ERR_BAD_FILE                                                          
  Parameter, Integer
  Declared        60      61
  Defined   
  Referenced

MPI_ERR_BASE                                                              
  Parameter, Integer
  Declared        84      85
  Defined   
  Referenced

MPI_ERR_BUFFER                                                            
  Parameter, Integer
  Declared        98      99
  Defined   
  Referenced

MPI_ERR_COMM                                                              
  Parameter, Integer
  Declared        44      45
  Defined   
  Referenced

MPI_ERR_CONVERSION                                                        
  Parameter, Integer
  Declared        76      77
  Defined   
  Referenced

MPI_ERR_COUNT                                                             
  Parameter, Integer
  Declared        22      23
  Defined   
  Referenced

MPI_ERR_DIMS                                                              
  Parameter, Integer
  Declared       128     129
  Defined   
  Referenced

MPI_ERR_DISP                                                              
  Parameter, Integer
  Declared       102     103
  Defined   
  Referenced

MPI_ERR_DUP_DATAREP                                                       
  Parameter, Integer
  Declared        30      31
  Defined   
  Referenced

MPI_ERR_FILE                                                              
  Parameter, Integer
  Declared        80      81
  Defined   
  Referenced

MPI_ERR_FILE_EXISTS                                                       
  Parameter, Integer
  Declared        40      41
  Defined   
  Referenced

MPI_ERR_FILE_IN_USE                                                       
  Parameter, Integer
  Declared       118     119
  Defined   
  Referenced

MPI_ERR_GROUP                                                             
  Parameter, Integer
  Declared       106     107
  Defined   
  Referenced

MPI_ERR_INFO                                                              
  Parameter, Integer
  Declared       114     115
  Defined   
  Referenced

MPI_ERR_INFO_KEY                                                          
  Parameter, Integer
  Declared        90      91
  Defined   
  Referenced

MPI_ERR_INFO_NOKEY                                                        
  Parameter, Integer
  Declared        36      37
  Defined   
  Referenced

MPI_ERR_INFO_VALUE                                                        
  Parameter, Integer
  Declared        54      55
  Defined   
  Referenced

MPI_ERR_INTERN                                                            
  Parameter, Integer
  Declared       134     135
  Defined   
  Referenced

MPI_ERR_IN_STATUS                                                         
  Parameter, Integer
  Declared        88      89
  Defined   
  Referenced

MPI_ERR_IO                                                                
  Parameter, Integer
  Declared        68      69
  Defined   
  Referenced

MPI_ERR_KEYVAL                                                            
  Parameter, Integer
  Declared        46      47
  Defined   
  Referenced

MPI_ERR_LASTCODE                                                          
  Parameter, Integer
  Declared       100     101
  Defined   
  Referenced

MPI_ERR_LOCKTYPE                                                          
  Parameter, Integer
  Declared        26      27
  Defined   
  Referenced

MPI_ERR_NAME                                                              
  Parameter, Integer
  Declared        48      49
  Defined   
  Referenced

MPI_ERR_NOT_SAME                                                          
  Parameter, Integer
  Declared       112     113
  Defined   
  Referenced

MPI_ERR_NO_MEM                                                            
  Parameter, Integer
  Declared        58      59
  Defined   
  Referenced

MPI_ERR_NO_SPACE                                                          
  Parameter, Integer
  Declared        74      75
  Defined   
  Referenced

MPI_ERR_NO_SUCH_FILE                                                      
  Parameter, Integer
  Declared       130     131
  Defined   
  Referenced

MPI_ERR_OP                                                                
  Parameter, Integer
  Declared        28      29
  Defined   
  Referenced

MPI_ERR_OTHER                                                             
  Parameter, Integer
  Declared        20      21
  Defined   
  Referenced

MPI_ERR_PENDING                                                           
  Parameter, Integer
  Declared        42      43
  Defined   
  Referenced

MPI_ERR_PORT                                                              
  Parameter, Integer
  Declared       104     105
  Defined   
  Referenced

MPI_ERR_QUOTA                                                             
  Parameter, Integer
  Declared        62      63
  Defined   
  Referenced

MPI_ERR_RANK                                                              
  Parameter, Integer
  Declared       126     127
  Defined   
  Referenced

MPI_ERR_READ_ONLY                                                         
  Parameter, Integer
  Declared        94      95
  Defined   
  Referenced

MPI_ERR_REQUEST                                                           
  Parameter, Integer
  Declared        50      51
  Defined   
  Referenced

MPI_ERR_RMA_ATTACH                                                        
  Parameter, Integer
  Declared       120     121
  Defined   
  Referenced

MPI_ERR_RMA_CONFLICT                                                      
  Parameter, Integer
  Declared        86      87
  Defined   
  Referenced

MPI_ERR_RMA_FLAVOR                                                        
  Parameter, Integer
  Declared        70      71
  Defined   
  Referenced

MPI_ERR_RMA_RANGE                                                         
  Parameter, Integer
  Declared       132     133
  Defined   
  Referenced

MPI_ERR_RMA_SHARED                                                        
  Parameter, Integer
  Declared        82      83
  Defined   
  Referenced

MPI_ERR_RMA_SYNC                                                          
  Parameter, Integer
  Declared        56      57
  Defined   
  Referenced

MPI_ERR_ROOT                                                              
  Parameter, Integer
  Declared        64      65
  Defined   
  Referenced

MPI_ERR_SERVICE                                                           
  Parameter, Integer
  Declared        66      67
  Defined   
  Referenced

MPI_ERR_SIZE                                                              
  Parameter, Integer
  Declared        96      97
  Defined   
  Referenced

MPI_ERR_SPAWN                                                             
  Parameter, Integer
  Declared        24      25
  Defined   
  Referenced

MPI_ERR_TAG                                                               
  Parameter, Integer
  Declared       110     111
  Defined   
  Referenced

MPI_ERR_TOPOLOGY                                                          
  Parameter, Integer
  Declared       108     109
  Defined   
  Referenced

MPI_ERR_TRUNCATE                                                          
  Parameter, Integer
  Declared        34      35
  Defined   
  Referenced

MPI_ERR_TYPE                                                              
  Parameter, Integer
  Declared        52      53
  Defined   
  Referenced

MPI_ERR_UNKNOWN                                                           
  Parameter, Integer
  Declared       116     117
  Defined   
  Referenced

MPI_ERR_UNSUPPORTED_DATAREP                                               
  Parameter, Integer
  Declared        32      33
  Defined   
  Referenced

MPI_ERR_UNSUPPORTED_OPERATION                                             
  Parameter, Integer
  Declared       122     123
  Defined   
  Referenced

MPI_ERR_WIN                                                               
  Parameter, Integer
  Declared        78      79
  Defined   
  Referenced

MPI_FILE_NULL                                                             
  Parameter, Integer
  Declared       198     199
  Defined   
  Referenced

MPI_FLOAT                                                                 
  Parameter, Integer
  Declared       360     361
  Defined   
  Referenced

MPI_FLOAT_INT                                                             
  Parameter, Integer
  Declared       372     373
  Defined   
  Referenced

MPI_GRAPH                                                                 
  Parameter, Integer
  Declared       268     269
  Defined   
  Referenced

MPI_GROUP_EMPTY                                                           
  Parameter, Integer
  Declared       192     193
  Defined   
  Referenced

MPI_GROUP_NULL                                                            
  Parameter, Integer
  Declared       200     201
  Defined   
  Referenced

MPI_HOST                                                                  
  Parameter, Integer
  Declared       216     217
  Defined   
  Referenced

MPI_IDENT                                                                 
  Parameter, Integer
  Declared       140     141
  Defined   
  Referenced

MPI_INFO_ENV                                                              
  Parameter, Integer
  Declared       212     213
  Defined   
  Referenced

MPI_INFO_NULL                                                             
  Parameter, Integer
  Declared       210     211
  Defined   
  Referenced

MPI_INT                                                                   
  Parameter, Integer
  Declared       352     353
  Defined   
  Referenced

MPI_INT16_T                                                               
  Parameter, Integer
  Declared       386     387
  Defined   
  Referenced

MPI_INT32_T                                                               
  Parameter, Integer
  Declared       388     389
  Defined   
  Referenced

MPI_INT64_T                                                               
  Parameter, Integer
  Declared       390     391
  Defined   
  Referenced

MPI_INT8_T                                                                
  Parameter, Integer
  Declared       384     385
  Defined   
  Referenced

MPI_INTEGER                                                               
  Parameter, Integer
  Declared       292     293
  Defined   
  Referenced

MPI_INTEGER                               Module MG_CONSTANTS_MOD         
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced     230
  Referenced in contained procedure

MPI_INTEGER1                                                              
  Parameter, Integer
  Declared       310     311
  Defined   
  Referenced

MPI_INTEGER16                                                             
  Parameter, Integer
  Declared       318     319
  Defined   
  Referenced

MPI_INTEGER2                                                              
  Parameter, Integer
  Declared       312     313
  Defined   
  Referenced

MPI_INTEGER4                                                              
  Parameter, Integer
  Declared       314     315
  Defined   
  Referenced

MPI_INTEGER8                                                              
  Parameter, Integer
  Declared       316     317
  Defined   
  Referenced

MPI_INTEGER_KIND                                                          
  Parameter, Integer
  Declared       338     339
  Defined   
  Referenced

MPI_IN_PLACE                              /MPIPRIV1/ offset=32            
  Integer
  Declared       534     555
  Defined   
  Referenced

MPI_IO                                                                    
  Parameter, Integer
  Declared       218     219
  Defined   
  Referenced

MPI_KEYVAL_INVALID                                                        
  Parameter, Integer
  Declared       256     257
  Defined   
  Referenced

MPI_LAND                                                                  
  Parameter, Integer
  Declared       168     169
  Defined   
  Referenced

MPI_LASTUSEDCODE                                                          
  Parameter, Integer
  Declared       224     225
  Defined   
  Referenced

MPI_LB                                                                    
  Parameter, Integer
  Declared       306     307
  Defined   
  Referenced

MPI_LOCK_EXCLUSIVE                                                        
  Parameter, Integer
  Declared       278     279
  Defined   
  Referenced

MPI_LOCK_SHARED                                                           
  Parameter, Integer
  Declared       280     281
  Defined   
  Referenced

MPI_LOGICAL                                                               
  Parameter, Integer
  Declared       286     287
  Defined   
  Referenced

MPI_LONG                                                                  
  Parameter, Integer
  Declared       356     357
  Defined   
  Referenced

MPI_LONG_DOUBLE                                                           
  Parameter, Integer
  Declared       364     365
  Defined   
  Referenced

MPI_LONG_DOUBLE_INT                                                       
  Parameter, Integer
  Declared       382     383
  Defined   
  Referenced

MPI_LONG_INT                                                              
  Parameter, Integer
  Declared       376     377
  Defined   
  Referenced

MPI_LONG_LONG                                                             
  Parameter, Integer
  Declared       370     371
  Defined   
  Referenced

MPI_LONG_LONG_INT                                                         
  Parameter, Integer
  Declared       366     367
  Defined   
  Referenced

MPI_LOR                                                                   
  Parameter, Integer
  Declared       172     173
  Defined   
  Referenced

MPI_LXOR                                                                  
  Parameter, Integer
  Declared       176     177
  Defined   
  Referenced

MPI_MAX                                                                   
  Parameter, Integer
  Declared       160     161
  Defined   
  Referenced

MPI_MAXLOC                                                                
  Parameter, Integer
  Declared       182     183
  Defined   
  Referenced

MPI_MAX_DATAREP_STRING                                                    
  Parameter, Integer
  Declared       250     251
  Defined   
  Referenced

MPI_MAX_ERROR_STRING                                                      
  Parameter, Integer
  Declared       238     239
  Defined   
  Referenced

MPI_MAX_ERROR_STRING                      Module MG_CONSTANTS_MOD         
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced    1007

MPI_MAX_INFO_KEY                                                          
  Parameter, Integer
  Declared       244     245
  Defined   
  Referenced

MPI_MAX_INFO_VAL                                                          
  Parameter, Integer
  Declared       246     247
  Defined   
  Referenced

MPI_MAX_LIBRARY_VERSION_STRING                                            
  Parameter, Integer
  Declared       252     253
  Defined   
  Referenced

MPI_MAX_OBJECT_NAME                                                       
  Parameter, Integer
  Declared       242     243
  Defined   
  Referenced

MPI_MAX_PORT_NAME                                                         
  Parameter, Integer
  Declared       240     241
  Defined   
  Referenced

MPI_MAX_PROCESSOR_NAME                                                    
  Parameter, Integer
  Declared       248     249
  Defined   
  Referenced

MPI_MESSAGE_NO_PROC                                                       
  Parameter, Integer
  Declared       482     483
  Defined   
  Referenced

MPI_MESSAGE_NULL                                                          
  Parameter, Integer
  Declared       480     481
  Defined   
  Referenced

MPI_MIN                                                                   
  Parameter, Integer
  Declared       162     163
  Defined   
  Referenced

MPI_MINLOC                                                                
  Parameter, Integer
  Declared       180     181
  Defined   
  Referenced

MPI_MODE_APPEND                                                           
  Parameter, Integer
  Declared       506     507
  Defined   
  Referenced

MPI_MODE_CREATE                                                           
  Parameter, Integer
  Declared       502     503
  Defined   
  Referenced

MPI_MODE_DELETE_ON_CLOSE                                                  
  Parameter, Integer
  Declared       498     499
  Defined   
  Referenced

MPI_MODE_EXCL                                                             
  Parameter, Integer
  Declared       504     505
  Defined   
  Referenced

MPI_MODE_NOCHECK                                                          
  Parameter, Integer
  Declared       468     469
  Defined   
  Referenced

MPI_MODE_NOPRECEDE                                                        
  Parameter, Integer
  Declared       474     475
  Defined   
  Referenced

MPI_MODE_NOPUT                                                            
  Parameter, Integer
  Declared       472     473
  Defined   
  Referenced

MPI_MODE_NOSTORE                                                          
  Parameter, Integer
  Declared       470     471
  Defined   
  Referenced

MPI_MODE_NOSUCCEED                                                        
  Parameter, Integer
  Declared       476     477
  Defined   
  Referenced

MPI_MODE_RDONLY                                                           
  Parameter, Integer
  Declared       492     493
  Defined   
  Referenced

MPI_MODE_RDWR                                                             
  Parameter, Integer
  Declared       494     495
  Defined   
  Referenced

MPI_MODE_SEQUENTIAL                                                       
  Parameter, Integer
  Declared       508     509
  Defined   
  Referenced

MPI_MODE_UNIQUE_OPEN                                                      
  Parameter, Integer
  Declared       500     501
  Defined   
  Referenced

MPI_MODE_WRONLY                                                           
  Parameter, Integer
  Declared       496     497
  Defined   
  Referenced

MPI_NO_OP                                                                 
  Parameter, Integer
  Declared       186     187
  Defined   
  Referenced

MPI_NULL_COPY_FN                                                          
  Procedure
  Declared       536
  Defined   
  Referenced

MPI_NULL_DELETE_FN                                                        
  Procedure
  Declared       536
  Defined   
  Referenced

MPI_OFFSET                                                                
  Parameter, Integer
  Declared       412     413
  Defined   
  Referenced

MPI_OFFSET_KIND                                                           
  Parameter, Integer
  Declared       334     335
  Defined   
  Referenced

MPI_OP_NULL                                                               
  Parameter, Integer
  Declared       202     203
  Defined   
  Referenced

MPI_ORDER_C                                                               
  Parameter, Integer
  Declared       516     517
  Defined   
  Referenced

MPI_ORDER_FORTRAN                                                         
  Parameter, Integer
  Declared       518     519
  Defined   
  Referenced

MPI_PACKED                                                                
  Parameter, Integer
  Declared       308     309
  Defined   
  Referenced

MPI_PROC_NULL                                                             
  Parameter, Integer
  Declared       260     261
  Defined   
  Referenced

MPI_PROD                                                                  
  Parameter, Integer
  Declared       166     167
  Defined   
  Referenced

MPI_REAL                                                                  
  Parameter, Integer
  Declared       288     289
  Defined   
  Referenced

MPI_REAL16                                                                
  Parameter, Integer
  Declared       324     325
  Defined   
  Referenced

MPI_REAL4                                                                 
  Parameter, Integer
  Declared       320     321
  Defined   
  Referenced

MPI_REAL8                                                                 
  Parameter, Integer
  Declared       322     323
  Defined   
  Referenced

MPI_REPLACE                                                               
  Parameter, Integer
  Declared       184     185
  Defined   
  Referenced

MPI_REQUEST_NULL                                                          
  Parameter, Integer
  Declared       206     207
  Defined   
  Referenced

MPI_ROOT                                                                  
  Parameter, Integer
  Declared       266     267
  Defined   
  Referenced

MPI_SEEK_CUR                                                              
  Parameter, Integer
  Declared       512     513
  Defined   
  Referenced

MPI_SEEK_END                                                              
  Parameter, Integer
  Declared       514     515
  Defined   
  Referenced

MPI_SEEK_SET                                                              
  Parameter, Integer
  Declared       510     511
  Defined   
  Referenced

MPI_SHORT                                                                 
  Parameter, Integer
  Declared       348     349
  Defined   
  Referenced

MPI_SHORT_INT                                                             
  Parameter, Integer
  Declared       378     379
  Defined   
  Referenced

MPI_SIGNED_CHAR                                                           
  Parameter, Integer
  Declared       342     343
  Defined   
  Referenced

MPI_SIMILAR                                                               
  Parameter, Integer
  Declared       144     145
  Defined   
  Referenced

MPI_SOURCE                                                                
  Parameter, Integer
  Declared         9      10
  Defined   
  Referenced

MPI_STATUSES_IGNORE                       /MPIPRIV2/ offset=0             
  Integer, Dimension(5,1)
  Declared        14     557
  Defined   
  Referenced

MPI_STATUS_IGNORE                         /MPIPRIV1/ offset=64            
  Integer, Dimension(5)
  Declared        13     555
  Defined   
  Referenced

MPI_STATUS_SIZE                                                           
  Parameter, Integer
  Declared        11      12
  Defined   
  Referenced      13      14

MPI_SUBARRAYS_SUPPORTED                                                   
  Parameter, Logical
  Declared       530     531
  Defined   
  Referenced

MPI_SUBVERSION                                                            
  Parameter, Integer
  Declared       276     277
  Defined   
  Referenced

MPI_SUCCESS                                                               
  Parameter, Integer
  Declared        18      19
  Defined   
  Referenced

MPI_SUM                                                                   
  Parameter, Integer
  Declared       164     165
  Defined   
  Referenced

MPI_TAG                                                                   
  Parameter, Integer
  Declared         9      10
  Defined   
  Referenced

MPI_TAG_UB                                                                
  Parameter, Integer
  Declared       214     215
  Defined   
  Referenced

MPI_THREAD_FUNNELED                                                       
  Parameter, Integer
  Declared       486     487
  Defined   
  Referenced

MPI_THREAD_MULTIPLE                                                       
  Parameter, Integer
  Declared       490     491
  Defined   
  Referenced

MPI_THREAD_SERIALIZED                                                     
  Parameter, Integer
  Declared       488     489
  Defined   
  Referenced

MPI_THREAD_SINGLE                                                         
  Parameter, Integer
  Declared       484     485
  Defined   
  Referenced

MPI_TYPECLASS_COMPLEX                                                     
  Parameter, Integer
  Declared       466     467
  Defined   
  Referenced

MPI_TYPECLASS_INTEGER                                                     
  Parameter, Integer
  Declared       464     465
  Defined   
  Referenced

MPI_TYPECLASS_REAL                                                        
  Parameter, Integer
  Declared       462     463
  Defined   
  Referenced

MPI_TYPE_DUP_FN                                                           
  Procedure
  Declared       543
  Defined   
  Referenced

MPI_TYPE_NULL_COPY_FN                                                     
  Procedure
  Declared       544
  Defined   
  Referenced

MPI_TYPE_NULL_DELETE_FN                                                   
  Procedure
  Declared       543
  Defined   
  Referenced

MPI_UB                                                                    
  Parameter, Integer
  Declared       304     305
  Defined   
  Referenced

MPI_UINT16_T                                                              
  Parameter, Integer
  Declared       394     395
  Defined   
  Referenced

MPI_UINT32_T                                                              
  Parameter, Integer
  Declared       396     397
  Defined   
  Referenced

MPI_UINT64_T                                                              
  Parameter, Integer
  Declared       398     399
  Defined   
  Referenced

MPI_UINT8_T                                                               
  Parameter, Integer
  Declared       392     393
  Defined   
  Referenced

MPI_UNDEFINED                                                             
  Parameter, Integer
  Declared       254     255
  Defined   
  Referenced

MPI_UNEQUAL                                                               
  Parameter, Integer
  Declared       146     147
  Defined   
  Referenced

MPI_UNIVERSE_SIZE                                                         
  Parameter, Integer
  Declared       222     223
  Defined   
  Referenced

MPI_UNSIGNED                                                              
  Parameter, Integer
  Declared       354     355
  Defined   
  Referenced

MPI_UNSIGNED_CHAR                                                         
  Parameter, Integer
  Declared       344     345
  Defined   
  Referenced

MPI_UNSIGNED_LONG                                                         
  Parameter, Integer
  Declared       358     359
  Defined   
  Referenced

MPI_UNSIGNED_LONG_LONG                                                    
  Parameter, Integer
  Declared       368     369
  Defined   
  Referenced

MPI_UNSIGNED_SHORT                                                        
  Parameter, Integer
  Declared       350     351
  Defined   
  Referenced

MPI_UNWEIGHTED                            /MPIFCMB5/ offset=0             
  Integer
  Declared       534     550
  Defined   
  Referenced

MPI_VERSION                                                               
  Parameter, Integer
  Declared       274     275
  Defined   
  Referenced

MPI_WCHAR                                                                 
  Parameter, Integer
  Declared       346     347
  Defined   
  Referenced

MPI_WEIGHTS_EMPTY                         /MPIFCMB9/ offset=0             
  Integer
  Declared       535     551
  Defined   
  Referenced

MPI_WIN_BASE                                                              
  Parameter, Integer
  Declared       228     229
  Defined   
  Referenced

MPI_WIN_CREATE_FLAVOR                                                     
  Parameter, Integer
  Declared       234     235
  Defined   
  Referenced

MPI_WIN_DISP_UNIT                                                         
  Parameter, Integer
  Declared       232     233
  Defined   
  Referenced

MPI_WIN_DUP_FN                                                            
  Procedure
  Declared       541
  Defined   
  Referenced

MPI_WIN_FLAVOR_ALLOCATE                                                   
  Parameter, Integer
  Declared       150     151
  Defined   
  Referenced

MPI_WIN_FLAVOR_CREATE                                                     
  Parameter, Integer
  Declared       148     149
  Defined   
  Referenced

MPI_WIN_FLAVOR_DYNAMIC                                                    
  Parameter, Integer
  Declared       152     153
  Defined   
  Referenced

MPI_WIN_FLAVOR_SHARED                                                     
  Parameter, Integer
  Declared       154     155
  Defined   
  Referenced

MPI_WIN_MODEL                                                             
  Parameter, Integer
  Declared       236     237
  Defined   
  Referenced

MPI_WIN_NULL                                                              
  Parameter, Integer
  Declared       196     197
  Defined   
  Referenced

MPI_WIN_NULL_COPY_FN                                                      
  Procedure
  Declared       542
  Defined   
  Referenced

MPI_WIN_NULL_DELETE_FN                                                    
  Procedure
  Declared       541
  Defined   
  Referenced

MPI_WIN_SEPARATE                                                          
  Parameter, Integer
  Declared       156     157
  Defined   
  Referenced

MPI_WIN_SIZE                                                              
  Parameter, Integer
  Declared       230     231
  Defined   
  Referenced

MPI_WIN_UNIFIED                                                           
  Parameter, Integer
  Declared       158     159
  Defined   
  Referenced

MPI_WTICK                                 Module MG_CONSTANTS_MOD         
  Function, Real*8, result(MPI_WTICK), Interface body
  Declared       537     546
  Defined   
  Referenced     323

MPI_WTIME                                                                 
  Function, Real*8, result(MPI_WTIME), External
  Declared       537     546
  Defined   
  Referenced    1096

MPI_WTIME_IS_GLOBAL                                                       
  Parameter, Integer
  Declared       220     221
  Defined   
  Referenced

MYPE                                      Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      96     108     116     132     136     140     144     148     152     191     248     312     741     913
  Referenced in contained procedure

MYPE                                      Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced    1011

MYPE_XY                                   Stack                           
  Variable, Integer
  Declared        66
  Defined        108
  Referenced     109     110

MYPX                                      Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        112     114
  Referenced     139     143     183
  Referenced in contained procedure

MYPY                                      Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        109
  Referenced     131     135     184
  Referenced in contained procedure

MYPZ                                      Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        116
  Referenced     147     151     185
  Referenced in contained procedure

MY_GLOBAL_NX_END                          Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        187
  Referenced
  Referenced in contained procedure

MY_GLOBAL_NX_START                        Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        183
  Referenced     187     250
  Referenced in contained procedure

MY_GLOBAL_NY_END                          Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        188
  Referenced
  Referenced in contained procedure

MY_GLOBAL_NY_START                        Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        184
  Referenced     188     251
  Referenced in contained procedure

MY_GLOBAL_NZ_END                          Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        189
  Referenced     246
  Referenced in contained procedure

MY_GLOBAL_NZ_START                        Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        185
  Referenced     189     252
  Referenced in contained procedure

MY_SPIKE                                  Stack                           
  Variable, Logical
  Declared       444
  Defined   
  Referenced

NEIGHBORS                                 Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined        123     132     136     140     144     148     152
  Referenced     122     156
  Referenced in contained procedure

NEIGHBORS_ORIG                            Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined        127     156
  Referenced     126
  Referenced in contained procedure

NORTH                                     Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     136
  Referenced in contained procedure

NPX                                       Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     108     109     110     116     132     136     143     148     152     179     373     386
  Referenced in contained procedure

NPY                                       Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     108     116     135     148     152     180     373     386
  Referenced in contained procedure

NPZ                                       Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     151     181     373     386
  Referenced in contained procedure

NUMPES                                    Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      98     394     397    1120    1124
  Referenced in contained procedure

NUM_NEIGHS                                Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        130     133     137     141     145     149     153
  Referenced
  Referenced in contained procedure

NUM_SPIKES                                Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     193     209     238
  Referenced in contained procedure

NUM_SUM_GRID                              Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     381
  Referenced in contained procedure

NUM_TSTEPS                                Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     383
  Referenced in contained procedure

NUM_VARS                                  Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     167     193     376     459     465     471     477     483     489     495     501     507     513     519     525
           531     537     543     549     555     561     567     573     579     585     591     597     603     609     615
           621     627     633     640     646     652     658     664     670     676     682     688     694     700     702
           747     751     755     759     763     767     771     775     779     783     787     791     795     799     803
           807     811     815     819     823     827     831     835     839     843     847     851     855     859     863
           867     871     875     879     883     887     891     895     899     903     907     909     914
  Referenced in contained procedure

NVARS                                     Stack                           
  Variable, Integer
  Declared        67
  Defined   
  Referenced

NX                                        Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     179     183     187     373     374    1064    1076
  Referenced in contained procedure

NY                                        Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     180     184     188     373     374    1063    1075
  Referenced in contained procedure

NZ                                        Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     181     185     189     373     374    1062    1074
  Referenced in contained procedure

OFFSET_X                                  Stack                           
  Variable, Integer
  Declared        68
  Defined   
  Referenced

OFFSET_Y                                  Stack                           
  Variable, Integer
  Declared        69
  Defined   
  Referenced

OFFSET_Z                                  Stack                           
  Variable, Integer
  Declared        70
  Defined   
  Referenced

PERCENT_SUM                               Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     381
  Referenced in contained procedure

PMPI_WTICK                                                                
  Function, Real*8, result(PMPI_WTICK), External
  Declared       538     547
  Defined   
  Referenced

PMPI_WTIME                                Module MG_CONSTANTS_MOD         
  Function, Real*8, result(PMPI_WTIME), Interface body
  Declared       538     547
  Defined   
  Referenced

REAL                                                                      
  Function, Real, Intrinsic, Pure, Elemental
  Declared  
  Defined   
  Referenced     200     323    1124

REMAINDER                                 Stack                           
  Variable, Integer
  Declared        71
  Defined        110
  Referenced     111     112

REPORT_DIFFUSION                          Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     378     379
  Referenced in contained procedure

RESULTLEN                                 Stack                           
  Variable, Integer
  Declared      1008
  Defined   
  Referenced    1012

ROOT_PE                                   Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     191     226     230     312     913
  Referenced in contained procedure

RSPIKE_LOC                                Heap                            
  Variable, Real(kind=8), Dimension(:,:), Allocatable
  Declared        81
  Defined        197
  Referenced     196     211     212     213     216

SCALING                                   Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced     388
  Referenced in contained procedure

SCALING_STRONG                            Module MG_OPTIONS_MOD           
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced     388
  Referenced in contained procedure

SIZE_OF_DATA                                                              
  Parameter, Integer(kind=8)
  Declared       304
  Defined   
  Referenced

SOURCE_TOTAL                              Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined        168     915
  Referenced     166
  Referenced in contained procedure

SOUTH                                     Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     132
  Referenced in contained procedure

SPIKES                                    Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:), Allocatable
  Declared  
  Defined        160     193     194     200
  Referenced     158     226     748     752     756     760     764     768     772     776     780     784     788     792     796
           800     804     808     812     816     820     824     828     832     836     840     844     848     852     856
           860     864     868     872     876     880     884     888     892     896     900     904     915
  Referenced in contained procedure

SPIKE_LOC                                 Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc, Dimension(:,:), Allocatable
  Declared  
  Defined        164     202     203     204     205     210     211     212     213     248     250     251     252     258     260
           261     262
  Referenced     162     230     240     241     242     741     743     744     745
  Referenced in contained procedure

SPIKE_LOC_X                               Stack                           
  Variable, Integer
  Declared       447
  Defined   
  Referenced

SPIKE_LOC_Y                               Stack                           
  Variable, Integer
  Declared       448
  Defined   
  Referenced

SPIKE_LOC_Z                               Stack                           
  Variable, Integer
  Declared       449
  Defined   
  Referenced

SPIKE_NUM                                 MG_INSERT_SPIKE                 
  Dummy Argument, Integer, Intent(in)
  Declared       714     720
  Defined   
  Referenced     741     743     744     745     748     752     756     760     764     768     772     776     780     784     788
           792     796     800     804     808     812     816     820     824     828     832     836     840     844     848
           852     856     860     864     868     872     876     880     884     888     892     896     900     904     915

SQRT                                                                      
  Function, Real, Intrinsic, Pure, Elemental
  Declared  
  Defined   
  Referenced    1124

STENCIL                                   MG_PRINT_HEADER                 
  Dummy Argument, Integer, Intent(in)
  Declared       274     280
  Defined   
  Referenced     344

STENCIL_2D5PT                             Module MG_OPTIONS_MOD           
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced     350
  Referenced in contained procedure

STENCIL_2D9PT                             Module MG_OPTIONS_MOD           
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced     354
  Referenced in contained procedure

STENCIL_3D27PT                            Module MG_OPTIONS_MOD           
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced     362
  Referenced in contained procedure

STENCIL_3D7PT                             Module MG_OPTIONS_MOD           
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced     358
  Referenced in contained procedure

STENCIL_NONE                              Module MG_OPTIONS_MOD           
  Parameter, Integer, Use assoc
  Declared  
  Defined   
  Referenced     346
  Referenced in contained procedure

STRING                                    Stack                           
  Variable, Character(511)
  Declared      1007
  Defined   
  Referenced    1012    1013

TEST_DATE                                 Stack                           
  Variable, Character(30)
  Declared       290
  Defined   
  Referenced     315     395     397

TEST_TIME                                 Stack                           
  Variable, Character(30)
  Declared       292
  Defined   
  Referenced     315     395     397

TMP                                       Stack                           
  Variable, Double Precision
  Declared      1117
  Defined       1119    1121
  Referenced    1124

TRIM                                                                      
  Function, Integer, Intrinsic, Pure
  Declared  
  Defined   
  Referenced    1011

VALUES                                    MG_COMPUTE_STDDEV               
  Dummy Argument, Double Precision, Dimension(1:*)
  Declared      1111    1114
  Defined   
  Referenced    1121

WEST                                      Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     140
  Referenced in contained procedure

WORK                                      Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:,:,:), Allocatable
  Declared  
  Defined   
  Referenced     705
  Referenced in contained procedure

XLOC                                      Stack                           
  Variable, Integer
  Declared        72
  Defined        240
  Referenced

YLOC                                      Stack                           
  Variable, Integer
  Declared        73
  Defined        241
  Referenced

ZLOC                                      Stack                           
  Variable, Integer
  Declared        74
  Defined        242
  Referenced     246

_ALLOCATED                                                                
  Function, Integer, Intrinsic, Pure
  Declared  
  Defined   
  Referenced     940     941     942     943     944     945     946     947     948     949     951     952     953     954     955
           956     957     958     959     960     962     963     964     965     966     967     968     969     970     971
           973     974     975     976     977     978     979     980     981     982

_F90_DATE_AND_TIME                                                        
  Subroutine, Intrinsic
  Declared  
  Defined   
  Referenced     315

_F90_TRIM                                                                 
  Function, Integer, Intrinsic, Pure
  Declared  
  Defined   
  Referenced    1011


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                     C o m m o n   B l o c k   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB5/                            Length: 4 bytes

     MG_UTILS_MOD                     Block is used from MG_CONSTANTS_MOD
     MG_TIMER in MG_UTILS_MOD         
     MG_ASSERT in MG_UTILS_MOD        Block is used from MG_CONSTANTS_MOD
     MG_GRID_DEALLOC in MG_UTILS_MOD  Block is used from MG_CONSTANTS_MOD
     MG_UTILS_MOD                     Block is hosted from MG_ASSERT
     MG_UTILS_MOD                     Block is hosted from MG_GRID_DEALLOC

     Member Comparison
     -----------------
     The common block members are declared the same.

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB9/                            Length: 4 bytes

     MG_UTILS_MOD                     Block is used from MG_CONSTANTS_MOD
     MG_TIMER in MG_UTILS_MOD         
     MG_ASSERT in MG_UTILS_MOD        Block is used from MG_CONSTANTS_MOD
     MG_GRID_DEALLOC in MG_UTILS_MOD  Block is used from MG_CONSTANTS_MOD
     MG_UTILS_MOD                     Block is hosted from MG_ASSERT
     MG_UTILS_MOD                     Block is hosted from MG_GRID_DEALLOC

     Member Comparison
     -----------------
     The common block members are declared the same.

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV1/                            Length: 28 bytes

     MG_UTILS_MOD                     Block is hosted from MG_GRID_DEALLOC
     MG_TIMER in MG_UTILS_MOD         
     MG_ASSERT in MG_UTILS_MOD        Block is used from MG_CONSTANTS_MOD
     MG_GRID_DEALLOC in MG_UTILS_MOD  Block is used from MG_CONSTANTS_MOD
     MG_UTILS_MOD                     Block is used from MG_CONSTANTS_MOD
     MG_UTILS_MOD                     Block is hosted from MG_ASSERT

     Member Comparison
     -----------------
     The common block members are declared the same.

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV2/                            Length: 24 bytes

     MG_UTILS_MOD                     Block is used from MG_CONSTANTS_MOD
     MG_TIMER in MG_UTILS_MOD         
     MG_ASSERT in MG_UTILS_MOD        Block is used from MG_CONSTANTS_MOD
     MG_GRID_DEALLOC in MG_UTILS_MOD  Block is used from MG_CONSTANTS_MOD
     MG_UTILS_MOD                     Block is hosted from MG_ASSERT
     MG_UTILS_MOD                     Block is hosted from MG_GRID_DEALLOC

     Member Comparison
     -----------------
     The common block members are declared the same.

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIVC/                            Length: 2 bytes

     MG_UTILS_MOD                     Block is used from MG_CONSTANTS_MOD
     MG_TIMER in MG_UTILS_MOD         
     MG_ASSERT in MG_UTILS_MOD        Block is used from MG_CONSTANTS_MOD
     MG_GRID_DEALLOC in MG_UTILS_MOD  Block is used from MG_CONSTANTS_MOD
     MG_UTILS_MOD                     Block is hosted from MG_ASSERT
     MG_UTILS_MOD                     Block is hosted from MG_GRID_DEALLOC

     Member Comparison
     -----------------
     The common block members are declared the same.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ALLOCATED(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 940, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 941, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 942, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 943, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 944, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 945, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 946, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 947, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 948, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 949, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 951, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 952, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 953, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 954, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 955, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 956, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 957, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 958, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 959, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 960, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 962, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 963, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 964, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 965, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 966, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 967, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 968, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 969, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 970, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 971, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 973, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 974, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 975, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 976, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 977, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 978, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 979, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 980, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 981, file MG_UTILS.F)
                   MG_GRID_DEALLOC in MG_UTILS_MOD (Line 982, file MG_UTILS.F)

Name  Messages
----  --------
DATE_AND_TIME(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_PRINT_HEADER in MG_UTILS_MOD (Line 315, file MG_UTILS.F)

Name  Messages
----  --------
INT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_INIT in MG_UTILS_MOD (Line 211, file MG_UTILS.F)
                   MG_INIT in MG_UTILS_MOD (Line 212, file MG_UTILS.F)
                   MG_INIT in MG_UTILS_MOD (Line 213, file MG_UTILS.F)

Name  Messages
----  --------
MG_ASSERT in MG_UTILS_MOD
      Defined as:  Subroutine (line 988, file MG_UTILS.F)

      Interface:   None

      Called By:   MG_INIT in MG_UTILS_MOD (Line 124, file MG_UTILS.F)
                   MG_INIT in MG_UTILS_MOD (Line 128, file MG_UTILS.F)
                   MG_INIT in MG_UTILS_MOD (Line 228, file MG_UTILS.F)
                   MG_INIT in MG_UTILS_MOD (Line 232, file MG_UTILS.F)
                   MG_GRID_INIT in MG_UTILS_MOD (Line 702, file MG_UTILS.F)
                   MG_INSERT_SPIKE in MG_UTILS_MOD (Line 909, file MG_UTILS.F)

      Calls:       TRIM(Intrinsic) (Line 1011, file MG_UTILS.F)
                   MPI_ERROR_STRING (Line 1012, file MG_UTILS.F)
                   MPI_ABORT (Line 1014, file MG_UTILS.F)

Name  Messages
----  --------
MG_COMPUTE_STDDEV in MG_UTILS_MOD
      Defined as:  Function (line 1672, file MG_UTILS.F)

      Interface:   None

      Calls:       REAL(Intrinsic) (Line 1685, file MG_UTILS.F)
                   SQRT(Intrinsic) (Line 1685, file MG_UTILS.F)

Name  Messages
----  --------
MG_CONSTANTS_MOD
      Defined as:  No definitions.

      Used By:     MG_UTILS_MOD
                   MG_UTILS_MOD  (indirectly)
                   MG_UTILS_MOD
                   MG_UTILS_MOD

Name  Messages
----  --------
MG_GRID_DEALLOC in MG_UTILS_MOD
      Defined as:  Subroutine (line 923, file MG_UTILS.F)

      Interface:   None

      Calls:       ALLOCATED(Intrinsic) (Line 940, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 941, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 942, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 943, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 944, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 945, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 946, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 947, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 948, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 949, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 951, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 952, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 953, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 954, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 955, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 956, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 957, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 958, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 959, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 960, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 962, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 963, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 964, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 965, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 966, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 967, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 968, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 969, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 970, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 971, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 973, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 974, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 975, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 976, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 977, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 978, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 979, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 980, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 981, file MG_UTILS.F)
                   ALLOCATED(Intrinsic) (Line 982, file MG_UTILS.F)

Name  Messages
----  --------
MG_GRID_INIT in MG_UTILS_MOD
      Defined as:  Subroutine (line 434, file MG_UTILS.F)

      Interface:   None

      Calls:       MG_ASSERT in MG_UTILS_MOD (Line 702, file MG_UTILS.F)

Name  Messages
----  --------
MG_INIT in MG_UTILS_MOD
      Defined as:  Subroutine (line 49, file MG_UTILS.F)

      Interface:   None

      Calls:       MG_ASSERT in MG_UTILS_MOD (Line 124, file MG_UTILS.F)
                   MG_ASSERT in MG_UTILS_MOD (Line 128, file MG_UTILS.F)
                   MG_ASSERT in MG_UTILS_MOD (Line 228, file MG_UTILS.F)
                   MG_ASSERT in MG_UTILS_MOD (Line 232, file MG_UTILS.F)
                   MPI_COMM_DUP (Line 92, file MG_UTILS.F)
                   MPI_ERRHANDLER_SET (Line 94, file MG_UTILS.F)
                   MPI_COMM_RANK (Line 96, file MG_UTILS.F)
                   MPI_COMM_SIZE (Line 98, file MG_UTILS.F)
                   MOD(Intrinsic) (Line 108, file MG_UTILS.F)
                   MOD(Intrinsic) (Line 110, file MG_UTILS.F)
                   RANDOM_NUMBER(Intrinsic) (Line 193, file MG_UTILS.F)
                   REAL(Intrinsic) (Line 200, file MG_UTILS.F)
                   INT(Intrinsic) (Line 211, file MG_UTILS.F)
                   INT(Intrinsic) (Line 212, file MG_UTILS.F)
                   INT(Intrinsic) (Line 213, file MG_UTILS.F)
                   MPI_BCAST (Line 226, file MG_UTILS.F)
                   MPI_BCAST (Line 230, file MG_UTILS.F)

Name  Messages
----  --------
MG_INIT_GRID in MG_UTILS_MOD
      Defined as:  Subroutine (line 1037, file MG_UTILS.F)

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_INSERT_SPIKE in MG_UTILS_MOD
      Defined as:  Subroutine (line 714, file MG_UTILS.F)

      Interface:   None

      Calls:       MG_ASSERT in MG_UTILS_MOD (Line 909, file MG_UTILS.F)

Name  Messages
----  --------
MG_OPTIONS_MOD
      Defined as:  No definitions.

      Used By:     MG_UTILS_MOD

Name  Messages
----  --------
MG_PRINT_HEADER in MG_UTILS_MOD
      Defined as:  Subroutine (line 274, file MG_UTILS.F)

      Interface:   None

      Calls:       MPI_WTICK (Line 323, file MG_UTILS.F)
                   DATE_AND_TIME(Intrinsic) (Line 315, file MG_UTILS.F)
                   REAL(Intrinsic) (Line 323, file MG_UTILS.F)

Name  Messages
----  --------
MG_TIMER in MG_UTILS_MOD
      Defined as:  Function (line 1091, file MG_UTILS.F)

      Interface:   None

      Calls:       MPI_WTIME (Line 1657, file MG_UTILS.F)

Name  Messages
----  --------
MG_UTILS_MOD
      Defined as:  Module (line 28, file MG_UTILS.F)

        Uses:      MG_CONSTANTS_MOD
                   MG_OPTIONS_MOD
                   MG_CONSTANTS_MOD  (indirectly)
                   MG_CONSTANTS_MOD
                   MG_CONSTANTS_MOD

Name  Messages
----  --------
MOD(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_INIT in MG_UTILS_MOD (Line 108, file MG_UTILS.F)
                   MG_INIT in MG_UTILS_MOD (Line 110, file MG_UTILS.F)

Name  Messages
----  --------
MPI_ABORT
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_ASSERT in MG_UTILS_MOD (Line 1014, file MG_UTILS.F)

Name  Messages
----  --------
MPI_BCAST
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_INIT in MG_UTILS_MOD (Line 226, file MG_UTILS.F)
                   MG_INIT in MG_UTILS_MOD (Line 230, file MG_UTILS.F)

Name  Messages
----  --------
MPI_COMM_DUP
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_INIT in MG_UTILS_MOD (Line 92, file MG_UTILS.F)

Name  Messages
----  --------
MPI_COMM_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_COMM_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_COMM_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_COMM_RANK
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_INIT in MG_UTILS_MOD (Line 96, file MG_UTILS.F)

Name  Messages
----  --------
MPI_COMM_SIZE
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_INIT in MG_UTILS_MOD (Line 98, file MG_UTILS.F)

Name  Messages
----  --------
MPI_CONVERSION_FN_NULL
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_ERRHANDLER_SET
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_INIT in MG_UTILS_MOD (Line 94, file MG_UTILS.F)

Name  Messages
----  --------
MPI_ERROR_STRING
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_ASSERT in MG_UTILS_MOD (Line 1012, file MG_UTILS.F)

Name  Messages
----  --------
MPI_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_TYPE_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_TYPE_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_TYPE_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WIN_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WIN_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WIN_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WTICK
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_PRINT_HEADER in MG_UTILS_MOD (Line 323, file MG_UTILS.F)

Name  Messages
----  --------
MPI_WTIME
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_TIMER in MG_UTILS_MOD (Line 1657, file MG_UTILS.F)

Name  Messages
----  --------
PMPI_WTICK
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
PMPI_WTIME
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
RANDOM_NUMBER(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_INIT in MG_UTILS_MOD (Line 193, file MG_UTILS.F)

Name  Messages
----  --------
REAL(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_INIT in MG_UTILS_MOD (Line 200, file MG_UTILS.F)
                   MG_PRINT_HEADER in MG_UTILS_MOD (Line 323, file MG_UTILS.F)
                   MG_COMPUTE_STDDEV in MG_UTILS_MOD (Line 1685, file MG_UTILS.F)

Name  Messages
----  --------
SQRT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_COMPUTE_STDDEV in MG_UTILS_MOD (Line 1685, file MG_UTILS.F)

Name  Messages
----  --------
TRIM(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_ASSERT in MG_UTILS_MOD (Line 1011, file MG_UTILS.F)

Name  Messages
----  --------
_ALLOCATED(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
_F90_DATE_AND_TIME(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
_F90_TRIM(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
