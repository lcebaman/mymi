%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /lus/scratch/p02128/work/MiniGhost/source/MG_SEND_BSPMA.F
Compiled : 10/31/18  05:23:40
Compiler : Version 8.7.6
Ftnlx    : Version 8503 (libcif 85008)
Target   : x86-64
Command  : ftn_driver.exe -hcpu=broadwell -hstatic -D__CRAYXC
           -D__CRAY_BROADWELL -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries
           -D_MG_MPI -D_MG_INT4 -D_MG_REAL8 -ffree -hlist=a -c MG_SEND_BSPMA.F
           -I/opt/cray/pe/cce/8.7.6/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/mpt/7.7.3/gni/mpich-cray/8.6/include
           -I/opt/cray/pe/libsci/18.07.1/CRAY/8.6/x86_64/include
           -I/opt/cray/rca/2.2.18-6.0.7.0_33.3__g2aa4f39.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/xpmem/2.2.15-6.0.7.0_35.11__g7549d06.ari/include
           -I/opt/cray/dmapp/7.1.1-6.0.7.0_34.3__g5a674e0.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-6.0.7.0_24.1__g3b1768f.ari/include
           -I/opt/cray/ugni/6.0.14.0-6.0.7.0_23.1__gea11d3d.ari/include
           -I/opt/cray/udreg/2.3.2-6.0.7.0_33.18__g5196236.ari/include
           -I/opt/cray/alps/6.6.43-6.0.7.0_26.4__ga796da3.ari/include
           -I/opt/cray/wlm_detect/1.3.3-6.0.7.0_47.2__g7109084.ari/include
           -I/opt/cray/krca/2.2.4-6.0.7.0_32.3__g8505b97.ari/include
           -I/opt/cray-hss-devel/8.0.0/include
Program
  Units  : MG_SEND_BSPMA_MOD

ftnlx report
------------
Source   : /lus/scratch/p02128/work/MiniGhost/source/MG_SEND_BSPMA.F
Date     : 10/31/2018  05:23:40


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          O p t i o n s   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Options :  -O cache2,scalar2,thread2,vector2,mpi0,modinline,ipa3,noaggress
           -O autoprefetch,noautothread,fusion2,nomsgs,nonegmsgs,nooverindex
           -O pattern,shortcircuit2,unroll2,nozeroinc
           -h noadd_paren,align_arrays,nobounds,caf,noconcurrent,nocontiguous
           -h nocontiguous_assumed_shape,fma,nofp_trap,nofunc_trace,noomp_analyz
           e
           -h noomp_trace,nopat_trace
           -h safe_addr,thread_do_concurrent,fp2=approx,flex_mp=default         
           -h alias=default:standard_restrict         
           -h static (or -static)
           -h omp,noacc
           -h cpu=x86-64,broadwell
           -h network=aries
           -K trap=none
           -s default32
           -eh
           -d abcdefgijmopqsvwzACEFIPQRST0
           -e nBDZ 
           -f free
           -m3
           -S /lus/scratch/tmp/pe_5199/MG_SEND_BSPMA_1.s


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned                
     F - Flat - No calls      f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
     R - Rerolling            r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.     ! ************************************************************************
    2.     !
    3.     !               miniGhost: stencil computations with boundary exchange.
    4.     !                 Copyright (2012) Sandia Corporation
    5.     !
    6.     ! Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
    7.     ! license for use of this work by or on behalf of the U.S. Government.
    8.     !
    9.     ! This library is free software; you can redistribute it and/or modify
   10.     ! it under the terms of the GNU Lesser General Public License as
   11.     ! published by the Free Software Foundation; either version 2.1 of the
   12.     ! License, or (at your option) any later version.
   13.     !
   14.     ! This library is distributed in the hope that it will be useful, but
   15.     ! WITHOUT ANY WARRANTY; without even the implied warranty of
   16.     ! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   17.     ! Lesser General Public License for more details.
   18.     !
   19.     ! You should have received a copy of the GNU Lesser General Public
   20.     ! License along with this library; if not, write to the Free Software
   21.     ! Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
   22.     ! USA
   23.     ! Questions? Contact Richard F. Barrett (rfbarre@sandia.gov) or
   24.     !                    Michael A. Heroux (maherou@sandia.gov)
   25.     !
   26.     ! ************************************************************************
   27.     
   28.     MODULE MG_SEND_BSPMA_MOD
   29.     
   30.        ! Purpose
   31.        ! =======
   32.        ! MPI transmission, via non-blocking send (MPI_ISEND), of boundary data
   33.        ! for the BSPMA communication strategy.
   34.     
   35.        USE MG_CONSTANTS_MOD
   36.        USE MG_UTILS_MOD
   37.        USE MG_PROFILING_MOD
   38.     
   39.        IMPLICIT NONE
   40.     
   41.     CONTAINS
   42.        
   43.        SUBROUTINE MG_SEND_BSPMA ( IERR )
   44.        
   45.           ! -------------------------------------------------------
   46.           ! Pack all variables for single message to each neighbor.
   47.           ! -------------------------------------------------------
   48.     
   49.           ! ---------------------
   50.           ! Argument Declarations
   51.           ! ---------------------
   52.     
   53.           INTEGER, INTENT(OUT) :: &
   54.              IERR           ! Return status
   55.     
   56.           ! ------------------
   57.           ! Local Declarations
   58.           ! ------------------
   59.        
   60.           INTEGER :: &
   61.              I, J,                        &  ! Counters
   62.              MSG_REQS_OFFSET
   63.        
   64.           REAL(KIND=MG_REAL8) ::      &
   65.              TIME_START,              &
   66.              TIME_START_DIR
   67.     
   68.           ! ---------------------
   69.           ! Executable Statements
   70.           ! ---------------------
   71.        
   72.           IERR = 0
   73.     
   74.           IF ( NUMPES == 1 ) &
   75.              RETURN
   76.     
   77.     #if defined _MG_MPI
   78.     
   79.  +        TIME_START = MG_TIMER()
   80.     
   81.           ! ------------------------------------------------------
   82.           ! Construct message buffers across variables, then send.
   83.           ! ------------------------------------------------------
   84.        
   85.           NUM_SENDS = 0
   86.           MSG_REQS_OFFSET = MAX_NUM_RECVS
   87.     
   88.           ! Back boundary
   89.        
   90.           IF ( NEIGHBORS(BACK) /= -1 ) THEN
   91.  +           TIME_START_DIR = MG_TIMER ()
   92.              NUM_SENDS = NUM_SENDS + 1
   93.              MSG_REQS_OFFSET = MAX_NUM_RECVS + BACK
   94.  +           CALL MPI_ISEND ( SEND_BUFFER_BACK, COUNT_SEND_BACK, MG_MPI_REAL, &
   95.                               NEIGHBORS(BACK), MSG_TAGS(BACK),                &
   96.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
   97.  +           MG_PERF%TIME_SEND_Z_PE = MG_PERF%TIME_SEND_Z_PE + MG_TIMER () - &
   98.                                       TIME_START_DIR
   99.     
  100.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_BACK
  101.              IF ( COUNT_SEND_BACK > MG_PERF%SEND_COUNT_MAX ) THEN
  102.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_BACK
  103.              END IF
  104.              IF ( COUNT_SEND_BACK < MG_PERF%SEND_COUNT_MIN ) THEN
  105.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_BACK
  106.              END IF
  107.     
  108.           END IF
  109.        
  110.           ! Front boundary
  111.        
  112.           IF ( NEIGHBORS(FRONT) /= -1 ) THEN
  113.  +           TIME_START_DIR = MG_TIMER ()
  114.              NUM_SENDS = NUM_SENDS + 1
  115.              MSG_REQS_OFFSET = MAX_NUM_RECVS + FRONT
  116.  +           CALL MPI_ISEND ( SEND_BUFFER_FRONT, COUNT_SEND_FRONT, MG_MPI_REAL, &
  117.                               NEIGHBORS(FRONT), MSG_TAGS(FRONT),                &
  118.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
  119.  +           MG_PERF%TIME_SEND_Z_PE = MG_PERF%TIME_SEND_Z_PE + MG_TIMER () - &
  120.                                       TIME_START_DIR
  121.     
  122.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_FRONT
  123.              IF ( COUNT_SEND_FRONT > MG_PERF%SEND_COUNT_MAX ) THEN
  124.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_FRONT
  125.              END IF
  126.              IF ( COUNT_SEND_FRONT < MG_PERF%SEND_COUNT_MIN ) THEN
  127.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_FRONT
  128.              END IF
  129.     
  130.           END IF
  131.        
  132.           ! East boundary
  133.        
  134.           IF ( NEIGHBORS(EAST) /= -1 ) THEN
  135.  +           TIME_START_DIR = MG_TIMER ()
  136.              NUM_SENDS = NUM_SENDS + 1
  137.              MSG_REQS_OFFSET = MAX_NUM_RECVS + EAST
  138.  +           CALL MPI_ISEND ( SEND_BUFFER_EAST, COUNT_SEND_EAST, MG_MPI_REAL, &
  139.                               NEIGHBORS(EAST), MSG_TAGS(EAST),                &
  140.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
  141.  +           MG_PERF%TIME_SEND_X_PE = MG_PERF%TIME_SEND_X_PE + MG_TIMER () - &
  142.                                       TIME_START_DIR
  143.     
  144.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_EAST
  145.              IF ( COUNT_SEND_EAST > MG_PERF%SEND_COUNT_MAX ) THEN
  146.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_EAST
  147.              END IF
  148.              IF ( COUNT_SEND_EAST < MG_PERF%SEND_COUNT_MIN ) THEN
  149.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_EAST
  150.              END IF
  151.     
  152.           END IF
  153.        
  154.           ! West boundary
  155.        
  156.           IF ( NEIGHBORS(WEST) /= -1 ) THEN
  157.  +           TIME_START_DIR = MG_TIMER ()
  158.              NUM_SENDS = NUM_SENDS + 1
  159.              MSG_REQS_OFFSET = MAX_NUM_RECVS + WEST
  160.  +           CALL MPI_ISEND ( SEND_BUFFER_WEST, COUNT_SEND_WEST, MG_MPI_REAL, &
  161.                               NEIGHBORS(WEST), MSG_TAGS(WEST),                &
  162.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
  163.  +           MG_PERF%TIME_SEND_X_PE = MG_PERF%TIME_SEND_X_PE + MG_TIMER () - &
  164.                                       TIME_START_DIR
  165.     
  166.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_WEST
  167.              IF ( COUNT_SEND_WEST > MG_PERF%SEND_COUNT_MAX ) THEN
  168.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_WEST
  169.              END IF
  170.              IF ( COUNT_SEND_WEST < MG_PERF%SEND_COUNT_MIN ) THEN
  171.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_WEST
  172.              END IF
  173.     
  174.           END IF
  175.        
  176.           ! North boundary
  177.        
  178.           IF ( NEIGHBORS(NORTH) /= -1 ) THEN
  179.  +           TIME_START_DIR = MG_TIMER ()
  180.              NUM_SENDS = NUM_SENDS + 1
  181.              MSG_REQS_OFFSET = MAX_NUM_RECVS + NORTH
  182.  +           CALL MPI_ISEND ( SEND_BUFFER_NORTH, COUNT_SEND_NORTH, MG_MPI_REAL, &
  183.                               NEIGHBORS(NORTH), MSG_TAGS(NORTH),                &
  184.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
  185.  +           MG_PERF%TIME_SEND_Y_PE = MG_PERF%TIME_SEND_Y_PE + MG_TIMER () - &
  186.                                       TIME_START_DIR
  187.     
  188.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_NORTH
  189.              IF ( COUNT_SEND_NORTH > MG_PERF%SEND_COUNT_MAX ) THEN
  190.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_NORTH
  191.              END IF
  192.              IF ( COUNT_SEND_NORTH < MG_PERF%SEND_COUNT_MIN ) THEN
  193.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_NORTH
  194.              END IF
  195.     
  196.           END IF
  197.        
  198.           ! South boundary
  199.        
  200.           IF ( NEIGHBORS(SOUTH) /= -1 ) THEN
  201.  +           TIME_START_DIR = MG_TIMER ()
  202.              NUM_SENDS = NUM_SENDS + 1
  203.              MSG_REQS_OFFSET = MAX_NUM_RECVS + SOUTH
  204.  +           CALL MPI_ISEND ( SEND_BUFFER_SOUTH, COUNT_SEND_SOUTH, MG_MPI_REAL, &
  205.                               NEIGHBORS(SOUTH), MSG_TAGS(SOUTH),                &
  206.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
  207.  +           MG_PERF%TIME_SEND_Y_PE = MG_PERF%TIME_SEND_Y_PE + MG_TIMER () - &
  208.                                       TIME_START_DIR
  209.     
  210.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_SOUTH
  211.              IF ( COUNT_SEND_SOUTH > MG_PERF%SEND_COUNT_MAX ) THEN
  212.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_SOUTH
  213.              END IF
  214.              IF ( COUNT_SEND_SOUTH < MG_PERF%SEND_COUNT_MIN ) THEN
  215.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_SOUTH
  216.              END IF
  217.     
  218.           END IF
  219.     
  220.           COUNT_SEND_NORTH = 0
  221.           COUNT_SEND_SOUTH = 0
  222.           COUNT_SEND_EAST  = 0
  223.           COUNT_SEND_WEST  = 0
  224.           COUNT_SEND_BACK  = 0
  225.           COUNT_SEND_FRONT = 0
  226.     
  227.  +        MG_PERF%TIME_SEND_PE = MG_PERF%TIME_SEND_PE + MG_TIMER() - TIME_START
  228.     
  229.           MG_PERF%NUM_SENDS = MG_PERF%NUM_SENDS + NUM_SENDS
  230.     
  231.     #endif _MG_MPI
  232.     
  233.           RETURN
  234.     
  235.        END SUBROUTINE MG_SEND_BSPMA
ftn-5002 ftn: NOTE MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 235 
  Local variable "J" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 235 
  Local variable "I" is declared but neither defined nor used.

  236.        
  237.     END MODULE MG_SEND_BSPMA_MOD

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 79, Column = 20 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 91, Column = 27 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 94, Column = 15 
  "mpi_isend" (called from "mg_send_bspma") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 97, Column = 60 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 113, Column = 27 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 116, Column = 15 
  "mpi_isend" (called from "mg_send_bspma") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 119, Column = 60 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 135, Column = 27 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 138, Column = 15 
  "mpi_isend" (called from "mg_send_bspma") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 141, Column = 60 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 157, Column = 27 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 160, Column = 15 
  "mpi_isend" (called from "mg_send_bspma") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 163, Column = 60 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 179, Column = 27 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 182, Column = 15 
  "mpi_isend" (called from "mg_send_bspma") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 185, Column = 60 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 201, Column = 27 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 204, Column = 15 
  "mpi_isend" (called from "mg_send_bspma") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 207, Column = 60 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_BSPMA, File = MG_SEND_BSPMA.F, Line = 227, Column = 53 
  "mg_timer" (called from "mg_send_bspma") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            C r o s s   R e f e r e n c e   for   MG_SEND_BSPMA_MOD
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                                      Storage/Owner                   
----                                      -------------                   

BACK                                      Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      90      93      95
  Referenced in contained procedure

COUNT_SEND_BACK                           Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        224
  Referenced      94     100     101     102     104     105
  Referenced in contained procedure

COUNT_SEND_EAST                           Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        222
  Referenced     138     144     145     146     148     149
  Referenced in contained procedure

COUNT_SEND_FRONT                          Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        225
  Referenced     116     122     123     124     126     127
  Referenced in contained procedure

COUNT_SEND_NORTH                          Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        220
  Referenced     182     188     189     190     192     193
  Referenced in contained procedure

COUNT_SEND_SOUTH                          Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        221
  Referenced     204     210     211     212     214     215
  Referenced in contained procedure

COUNT_SEND_WEST                           Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        223
  Referenced     160     166     167     168     170     171
  Referenced in contained procedure

EAST                                      Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     134     137     139
  Referenced in contained procedure

FRONT                                     Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     112     115     117
  Referenced in contained procedure

I                                         Stack                           
  Variable, Integer
  Declared        61
  Defined   
  Referenced

IERR                                      MG_SEND_BSPMA                   
  Dummy Argument, Integer, Intent(out)
  Declared        43      54
  Defined         72
  Referenced      96     118     140     162     184     206

J                                         Stack                           
  Variable, Integer
  Declared        61
  Defined   
  Referenced

MAX_NUM_RECVS                             Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      86      93     115     137     159     181     203
  Referenced in contained procedure

MG_CONSTANTS_MOD                                                          
  Module, Used indirectly (from module MG_UTILS_MOD)
  Declared  
  Defined   
  Referenced

MG_CONSTANTS_MOD                                                          
  Module, Used indirectly (from module MG_PROFILING_MOD)
  Declared  
  Defined   
  Referenced

MG_CONSTANTS_MOD                                                          
  Module
  Declared  
  Defined   
  Referenced      35

MG_ENV_MOD                                                                
  Module, Used indirectly (from module MG_PROFILING_MOD)
  Declared  
  Defined   
  Referenced

MG_MPI_REAL                               Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      94     116     138     160     182     204
  Referenced in contained procedure

MG_OPTIONS_MOD                                                            
  Module, Used indirectly (from module MG_PROFILING_MOD)
  Declared  
  Defined   
  Referenced

MG_OPTIONS_MOD                                                            
  Module, Used indirectly (from module MG_UTILS_MOD)
  Declared  
  Defined   
  Referenced

MG_PERF                                   Module MG_PROFILING_MOD         
  TYPE(PERF_CHECK), Use assoc
  Declared  
  Defined         97     100     102     105     119     122     124     127     141     144     146     149     163     166     168
           171     185     188     190     193     207     210     212     215     227     229
  Referenced     101     104     123     126     145     148     167     170     189     192     211     214
  Referenced in contained procedure

MG_PROFILING_MOD                                                          
  Module
  Declared  
  Defined   
  Referenced      37

MG_REAL8                                  Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=1), Use assoc
  Declared  
  Defined   
  Referenced      64
  Referenced in contained procedure

MG_SEND_BSPMA                                                             
  Subroutine, Module procedure
  Declared        43
  Defined   
  Referenced

MG_SEND_BSPMA_MOD                                                         
  Module
  Declared        28
  Defined   
  Referenced

MG_TIMER                                  Module MG_UTILS_MOD             
  Function, Double Precision, result(MG_TIMER), Module procedure
  Declared  
  Defined   
  Referenced      79      91      97     113     119     135     141     157     163     179     185     201     207     227

MG_TIMER                                  Module MG_UTILS_MOD             
  Function, Double Precision, result(MG_TIMER), Module procedure
  Declared  
  Defined   
  Referenced      79      91      97     113     119     135     141     157     163     179     185     201     207     227

MG_UTILS_MOD                                                              
  Module
  Declared  
  Defined   
  Referenced      36

MG_UTILS_MOD                                                              
  Module, Used indirectly (from module MG_PROFILING_MOD)
  Declared  
  Defined   
  Referenced

MPIFCMB5                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB9                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV1                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV2                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIVC                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPI_COMM_MG                               Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      96     118     140     162     184     206
  Referenced in contained procedure

MPI_ISEND                                                                 
  Subroutine, External
  Declared  
  Defined   
  Referenced      94      94     116     116     138     138     160     160     182     182     204     204

MSG_REQS                                  Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced      96     118     140     162     184     206
  Referenced in contained procedure

MSG_REQS_OFFSET                           Stack                           
  Variable, Integer
  Declared        62
  Defined         86      93     115     137     159     181     203
  Referenced      96     118     140     162     184     206

MSG_TAGS                                  Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced      95     117     139     161     183     205
  Referenced in contained procedure

NEIGHBORS                                 Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced      90      95     112     117     134     139     156     161     178     183     200     205
  Referenced in contained procedure

NORTH                                     Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     178     181     183
  Referenced in contained procedure

NUMPES                                    Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      74
  Referenced in contained procedure

NUM_SENDS                                 Structure offset=192            
  Integer(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     229

NUM_SENDS                                 Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined         85      92     114     136     158     180     202
  Referenced     229
  Referenced in contained procedure

SEND_BUFFER_BACK                          Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced      94
  Referenced in contained procedure

SEND_BUFFER_EAST                          Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced     138
  Referenced in contained procedure

SEND_BUFFER_FRONT                         Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced     116
  Referenced in contained procedure

SEND_BUFFER_NORTH                         Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced     182
  Referenced in contained procedure

SEND_BUFFER_SOUTH                         Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced     204
  Referenced in contained procedure

SEND_BUFFER_WEST                          Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced     160
  Referenced in contained procedure

SEND_COUNT                                Structure offset=256            
  Integer(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     100     122     144     166     188     210

SEND_COUNT_MAX                            Structure offset=320            
  Integer(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     101     102     123     124     145     146     167     168     189     190     211     212

SEND_COUNT_MIN                            Structure offset=384            
  Integer(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     104     105     126     127     148     149     170     171     192     193     214     215

SOUTH                                     Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     200     203     205
  Referenced in contained procedure

TIME_SEND_PE                              Structure offset=1536           
  Real(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     227

TIME_SEND_X_PE                            Structure offset=2048           
  Real(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     141     163

TIME_SEND_Y_PE                            Structure offset=2368           
  Real(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     185     207

TIME_SEND_Z_PE                            Structure offset=2688           
  Real(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced      97     119

TIME_START                                Stack                           
  Variable, Real(kind=8)
  Declared        65
  Defined         79
  Referenced     227

TIME_START_DIR                            Stack                           
  Variable, Real(kind=8)
  Declared        66
  Defined         91     113     135     157     179     201
  Referenced      98     120     142     164     186     208

WEST                                      Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     156     159     161
  Referenced in contained procedure


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                     C o m m o n   B l o c k   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB5/                            Length: 4 bytes

     MG_SEND_BSPMA_MOD                Block is used from MG_CONSTANTS_MOD

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB9/                            Length: 4 bytes

     MG_SEND_BSPMA_MOD                Block is used from MG_CONSTANTS_MOD

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV1/                            Length: 28 bytes

     MG_SEND_BSPMA_MOD                Block is used from MG_CONSTANTS_MOD

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV2/                            Length: 24 bytes

     MG_SEND_BSPMA_MOD                Block is used from MG_CONSTANTS_MOD

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIVC/                            Length: 2 bytes

     MG_SEND_BSPMA_MOD                Block is used from MG_CONSTANTS_MOD


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ENV in MG_ENV_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_ASSERT in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_COMPUTE_STDDEV in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_CONSTANTS_MOD
      Defined as:  No definitions.

      Used By:     MG_SEND_BSPMA_MOD
                   MG_SEND_BSPMA_MOD  (indirectly)
                   MG_SEND_BSPMA_MOD  (indirectly)

Name  Messages
----  --------
MG_ENV_MOD
      Defined as:  No definitions.

      Used By:     MG_SEND_BSPMA_MOD  (indirectly)

Name  Messages
----  --------
MG_GRID_DEALLOC in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_GRID_INIT in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_INIT in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_INIT_GRID in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_INSERT_SPIKE in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_OPTIONS_MOD
      Defined as:  No definitions.

      Used By:     MG_SEND_BSPMA_MOD  (indirectly)
                   MG_SEND_BSPMA_MOD  (indirectly)

Name  Messages
----  --------
MG_PERF_INIT in MG_PROFILING_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_PERF_REPORT in MG_PROFILING_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_PRINT_HEADER in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_PROFILING_MOD
      Defined as:  No definitions.

      Used By:     MG_SEND_BSPMA_MOD

Name  Messages
----  --------
MG_SEND_BSPMA in MG_SEND_BSPMA_MOD
      Defined as:  Subroutine (line 43, file MG_SEND_BSPMA.F)

      Interface:   None

      Calls:       MG_TIMER in MG_UTILS_MOD (Line 79, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 91, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 97, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 113, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 119, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 135, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 141, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 157, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 163, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 179, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 185, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 201, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 207, file MG_SEND_BSPMA.F)
                   MG_TIMER in MG_UTILS_MOD (Line 227, file MG_SEND_BSPMA.F)
                   MPI_ISEND (Line 94, file MG_SEND_BSPMA.F)
                   MPI_ISEND (Line 116, file MG_SEND_BSPMA.F)
                   MPI_ISEND (Line 138, file MG_SEND_BSPMA.F)
                   MPI_ISEND (Line 160, file MG_SEND_BSPMA.F)
                   MPI_ISEND (Line 182, file MG_SEND_BSPMA.F)
                   MPI_ISEND (Line 204, file MG_SEND_BSPMA.F)

Name  Messages
----  --------
MG_SEND_BSPMA_MOD
      Defined as:  Module (line 28, file MG_SEND_BSPMA.F)

        Uses:      MG_CONSTANTS_MOD
                   MG_UTILS_MOD
                   MG_OPTIONS_MOD  (indirectly)
                   MG_CONSTANTS_MOD  (indirectly)
                   MG_PROFILING_MOD
                   MG_OPTIONS_MOD  (indirectly)
                   MG_ENV_MOD  (indirectly)
                   MG_UTILS_MOD  (indirectly)
                   MG_CONSTANTS_MOD  (indirectly)

Name  Messages
----  --------
MG_TIMER in MG_UTILS_MOD
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 79, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 91, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 97, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 113, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 119, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 135, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 141, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 157, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 163, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 179, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 185, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 201, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 207, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 227, file MG_SEND_BSPMA.F)

Name  Messages
----  --------
MG_UTILS_MOD
      Defined as:  No definitions.

      Used By:     MG_SEND_BSPMA_MOD
                   MG_SEND_BSPMA_MOD  (indirectly)

Name  Messages
----  --------
MPI_COMM_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_COMM_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_COMM_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_CONVERSION_FN_NULL
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_ISEND
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 94, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 116, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 138, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 160, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 182, file MG_SEND_BSPMA.F)
                   MG_SEND_BSPMA in MG_SEND_BSPMA_MOD (Line 204, file MG_SEND_BSPMA.F)

Name  Messages
----  --------
MPI_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_TYPE_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_TYPE_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_TYPE_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WIN_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WIN_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WIN_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WTICK
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_WTIME
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
PMPI_WTICK
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
PMPI_WTIME
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
