%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /lus/scratch/p02128/work/MiniGhost/source/MG_SEND_SVAF.F
Compiled : 10/31/18  05:23:40
Compiler : Version 8.7.6
Ftnlx    : Version 8503 (libcif 85008)
Target   : x86-64
Command  : ftn_driver.exe -hcpu=broadwell -hstatic -D__CRAYXC
           -D__CRAY_BROADWELL -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries
           -D_MG_MPI -D_MG_INT4 -D_MG_REAL8 -ffree -hlist=a -c MG_SEND_SVAF.F
           -I/opt/cray/pe/cce/8.7.6/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/mpt/7.7.3/gni/mpich-cray/8.6/include
           -I/opt/cray/pe/libsci/18.07.1/CRAY/8.6/x86_64/include
           -I/opt/cray/rca/2.2.18-6.0.7.0_33.3__g2aa4f39.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/xpmem/2.2.15-6.0.7.0_35.11__g7549d06.ari/include
           -I/opt/cray/dmapp/7.1.1-6.0.7.0_34.3__g5a674e0.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-6.0.7.0_24.1__g3b1768f.ari/include
           -I/opt/cray/ugni/6.0.14.0-6.0.7.0_23.1__gea11d3d.ari/include
           -I/opt/cray/udreg/2.3.2-6.0.7.0_33.18__g5196236.ari/include
           -I/opt/cray/alps/6.6.43-6.0.7.0_26.4__ga796da3.ari/include
           -I/opt/cray/wlm_detect/1.3.3-6.0.7.0_47.2__g7109084.ari/include
           -I/opt/cray/krca/2.2.4-6.0.7.0_32.3__g8505b97.ari/include
           -I/opt/cray-hss-devel/8.0.0/include
Program
  Units  : MG_SEND_SVAF_MOD

ftnlx report
------------
Source   : /lus/scratch/p02128/work/MiniGhost/source/MG_SEND_SVAF.F
Date     : 10/31/2018  05:23:40


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          O p t i o n s   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Options :  -O cache2,scalar2,thread2,vector2,mpi0,modinline,ipa3,noaggress
           -O autoprefetch,noautothread,fusion2,nomsgs,nonegmsgs,nooverindex
           -O pattern,shortcircuit2,unroll2,nozeroinc
           -h noadd_paren,align_arrays,nobounds,caf,noconcurrent,nocontiguous
           -h nocontiguous_assumed_shape,fma,nofp_trap,nofunc_trace,noomp_analyz
           e
           -h noomp_trace,nopat_trace
           -h safe_addr,thread_do_concurrent,fp2=approx,flex_mp=default         
           -h alias=default:standard_restrict         
           -h static (or -static)
           -h omp,noacc
           -h cpu=x86-64,broadwell
           -h network=aries
           -K trap=none
           -s default32
           -eh
           -d abcdefgijmopqsvwzACEFIPQRST0
           -e nBDZ 
           -f free
           -m3
           -S /lus/scratch/tmp/pe_5214/MG_SEND_SVAF_1.s


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned                
     F - Flat - No calls      f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
     R - Rerolling            r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.     ! ************************************************************************
    2.     !
    3.     !               miniGhost: stencil computations with boundary exchange.
    4.     !                 Copyright (2012) Sandia Corporation
    5.     !
    6.     ! Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
    7.     ! license for use of this work by or on behalf of the U.S. Government.
    8.     !
    9.     ! This library is free software; you can redistribute it and/or modify
   10.     ! it under the terms of the GNU Lesser General Public License as
   11.     ! published by the Free Software Foundation; either version 2.1 of the
   12.     ! License, or (at your option) any later version.
   13.     !
   14.     ! This library is distributed in the hope that it will be useful, but
   15.     ! WITHOUT ANY WARRANTY; without even the implied warranty of
   16.     ! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   17.     ! Lesser General Public License for more details.
   18.     !
   19.     ! You should have received a copy of the GNU Lesser General Public
   20.     ! License along with this library; if not, write to the Free Software
   21.     ! Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
   22.     ! USA
   23.     ! Questions? Contact Richard F. Barrett (rfbarre@sandia.gov) or
   24.     !                    Michael A. Heroux (maherou@sandia.gov)
   25.     !
   26.     ! ************************************************************************
   27.     
   28.     MODULE MG_SEND_SVAF_MOD
   29.     
   30.        ! Purpose
   31.        ! =======
   32.        ! MPI transmission, via non-blocking send (MPI_ISEND), of boundary data
   33.        ! for the SVAF communication strategy.
   34.     
   35.        USE MG_CONSTANTS_MOD
   36.        USE MG_UTILS_MOD
   37.        USE MG_PROFILING_MOD
   38.     
   39.        IMPLICIT NONE
   40.     
   41.     CONTAINS
   42.        
   43.        SUBROUTINE MG_SEND_SVAF ( GRID, IERR )
   44.        
   45.           ! -------------------------------------------------------
   46.           ! Pack all variables for single message to each neighbor.
   47.           ! -------------------------------------------------------
   48.     
   49.           ! ---------------------
   50.           ! Argument Declarations
   51.           ! ---------------------
   52.     
   53.           INTEGER, INTENT(OUT) :: &
   54.              IERR           ! Return status
   55.     
   56.           REAL(KIND=MG_REAL), DIMENSION(0:NX+1, 0:NY+1, 0:NZ+1), INTENT(IN) :: &
   57.              GRID
   58.     
   59.           ! ------------------
   60.           ! Local Declarations
   61.           ! ------------------
   62.        
   63.           INTEGER :: &
   64.              I, J,                        &  ! Counters
   65.              MSG_REQS_OFFSET
   66.        
   67.           REAL(KIND=MG_REAL8) ::      &
   68.              TIME_START,              &
   69.              TIME_START_DIR
   70.     
   71.           ! ---------------------
   72.           ! Executable Statements
   73.           ! ---------------------
   74.        
   75.           IERR = 0
   76.     
   77.           IF ( NUMPES == 1 ) &
   78.              RETURN
   79.     
   80.     #if defined _MG_MPI
   81.     
   82.  +        TIME_START = MG_TIMER()
   83.     
   84.           ! ------------------------------------------------------
   85.           ! Construct message buffers across variables, then send.
   86.           ! ------------------------------------------------------
   87.        
   88.           NUM_SENDS = 0
   89.           MSG_REQS_OFFSET = MAX_NUM_RECVS
   90.     
   91.           ! Back boundary
   92.        
   93.           IF ( NEIGHBORS(BACK) /= -1 ) THEN
   94.  +           TIME_START_DIR = MG_TIMER ()
   95.              NUM_SENDS = NUM_SENDS + 1
   96.              MSG_REQS_OFFSET = MAX_NUM_RECVS + BACK
   97.  +           CALL MPI_ISEND ( SEND_BUFFER_BACK, COUNT_SEND_BACK, MG_MPI_REAL, &
   98.                               NEIGHBORS(BACK), MSG_TAGS(BACK),                &
   99.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
  100.  +           MG_PERF%TIME_SEND_Z_PE = MG_PERF%TIME_SEND_Z_PE + MG_TIMER () - &
  101.                                       TIME_START_DIR
  102.     
  103.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_BACK
  104.              IF ( COUNT_SEND_BACK > MG_PERF%SEND_COUNT_MAX ) THEN
  105.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_BACK
  106.              END IF
  107.              IF ( COUNT_SEND_BACK < MG_PERF%SEND_COUNT_MIN ) THEN
  108.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_BACK
  109.              END IF
  110.     
  111.           END IF
  112.        
  113.           ! Front boundary
  114.        
  115.           IF ( NEIGHBORS(FRONT) /= -1 ) THEN
  116.  +           TIME_START_DIR = MG_TIMER ()
  117.              NUM_SENDS = NUM_SENDS + 1
  118.              MSG_REQS_OFFSET = MAX_NUM_RECVS + FRONT
  119.  +           CALL MPI_ISEND ( SEND_BUFFER_FRONT, COUNT_SEND_FRONT, MG_MPI_REAL, &
  120.                               NEIGHBORS(FRONT), MSG_TAGS(FRONT),                &
  121.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
  122.  +           MG_PERF%TIME_SEND_Z_PE = MG_PERF%TIME_SEND_Z_PE + MG_TIMER () - &
  123.                                       TIME_START_DIR
  124.     
  125.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_FRONT
  126.              IF ( COUNT_SEND_FRONT > MG_PERF%SEND_COUNT_MAX ) THEN
  127.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_FRONT
  128.              END IF
  129.              IF ( COUNT_SEND_FRONT < MG_PERF%SEND_COUNT_MIN ) THEN
  130.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_FRONT
  131.              END IF
  132.     
  133.           END IF
  134.        
  135.           ! East boundary
  136.        
  137.           IF ( NEIGHBORS(EAST) /= -1 ) THEN
  138.  +           TIME_START_DIR = MG_TIMER ()
  139.              NUM_SENDS = NUM_SENDS + 1
  140.              MSG_REQS_OFFSET = MAX_NUM_RECVS + EAST
  141.  +           CALL MPI_ISEND ( SEND_BUFFER_EAST, COUNT_SEND_EAST, MG_MPI_REAL, &
  142.                               NEIGHBORS(EAST), MSG_TAGS(EAST),                &
  143.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
  144.  +           MG_PERF%TIME_SEND_X_PE = MG_PERF%TIME_SEND_X_PE + MG_TIMER () - &
  145.                                       TIME_START_DIR
  146.     
  147.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_EAST
  148.              IF ( COUNT_SEND_EAST > MG_PERF%SEND_COUNT_MAX ) THEN
  149.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_EAST
  150.              END IF
  151.              IF ( COUNT_SEND_EAST < MG_PERF%SEND_COUNT_MIN ) THEN
  152.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_EAST
  153.              END IF
  154.     
  155.           END IF
  156.        
  157.           ! West boundary
  158.        
  159.           IF ( NEIGHBORS(WEST) /= -1 ) THEN
  160.  +           TIME_START_DIR = MG_TIMER ()
  161.              NUM_SENDS = NUM_SENDS + 1
  162.              MSG_REQS_OFFSET = MAX_NUM_RECVS + WEST
  163.  +           CALL MPI_ISEND ( SEND_BUFFER_WEST, COUNT_SEND_WEST, MG_MPI_REAL, &
  164.                               NEIGHBORS(WEST), MSG_TAGS(WEST),                &
  165.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
  166.  +           MG_PERF%TIME_SEND_X_PE = MG_PERF%TIME_SEND_X_PE + MG_TIMER () - &
  167.                                       TIME_START_DIR
  168.     
  169.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_WEST
  170.              IF ( COUNT_SEND_WEST > MG_PERF%SEND_COUNT_MAX ) THEN
  171.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_WEST
  172.              END IF
  173.              IF ( COUNT_SEND_WEST < MG_PERF%SEND_COUNT_MIN ) THEN
  174.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_WEST
  175.              END IF
  176.     
  177.           END IF
  178.        
  179.           ! North boundary
  180.        
  181.           IF ( NEIGHBORS(NORTH) /= -1 ) THEN
  182.  +           TIME_START_DIR = MG_TIMER ()
  183.              NUM_SENDS = NUM_SENDS + 1
  184.              MSG_REQS_OFFSET = MAX_NUM_RECVS + NORTH
  185.  +           CALL MPI_ISEND ( SEND_BUFFER_NORTH, COUNT_SEND_NORTH, MG_MPI_REAL, &
  186.                               NEIGHBORS(NORTH), MSG_TAGS(NORTH),                &
  187.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
  188.  +           MG_PERF%TIME_SEND_Y_PE = MG_PERF%TIME_SEND_Y_PE + MG_TIMER () - &
  189.                                       TIME_START_DIR
  190.     
  191.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_NORTH
  192.              IF ( COUNT_SEND_NORTH > MG_PERF%SEND_COUNT_MAX ) THEN
  193.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_NORTH
  194.              END IF
  195.              IF ( COUNT_SEND_NORTH < MG_PERF%SEND_COUNT_MIN ) THEN
  196.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_NORTH
  197.              END IF
  198.     
  199.           END IF
  200.        
  201.           ! South boundary
  202.        
  203.           IF ( NEIGHBORS(SOUTH) /= -1 ) THEN
  204.  +           TIME_START_DIR = MG_TIMER ()
  205.              NUM_SENDS = NUM_SENDS + 1
  206.              MSG_REQS_OFFSET = MAX_NUM_RECVS + SOUTH
  207.  +           CALL MPI_ISEND ( SEND_BUFFER_SOUTH, COUNT_SEND_SOUTH, MG_MPI_REAL, &
  208.                               NEIGHBORS(SOUTH), MSG_TAGS(SOUTH),                &
  209.                               MPI_COMM_MG, MSG_REQS(MSG_REQS_OFFSET), IERR )
  210.  +           MG_PERF%TIME_SEND_Y_PE = MG_PERF%TIME_SEND_Y_PE + MG_TIMER () - &
  211.                                       TIME_START_DIR
  212.     
  213.              MG_PERF%SEND_COUNT  = MG_PERF%SEND_COUNT + COUNT_SEND_SOUTH
  214.              IF ( COUNT_SEND_SOUTH > MG_PERF%SEND_COUNT_MAX ) THEN
  215.                 MG_PERF%SEND_COUNT_MAX = COUNT_SEND_SOUTH
  216.              END IF
  217.              IF ( COUNT_SEND_SOUTH < MG_PERF%SEND_COUNT_MIN ) THEN
  218.                 MG_PERF%SEND_COUNT_MIN = COUNT_SEND_SOUTH
  219.              END IF
  220.     
  221.           END IF
  222.     
  223.           COUNT_SEND_NORTH = 0
  224.           COUNT_SEND_SOUTH = 0
  225.           COUNT_SEND_EAST  = 0
  226.           COUNT_SEND_WEST  = 0
  227.           COUNT_SEND_BACK  = 0
  228.           COUNT_SEND_FRONT = 0
  229.     
  230.  +        MG_PERF%TIME_SEND_PE = MG_PERF%TIME_SEND_PE + MG_TIMER() - TIME_START
  231.     
  232.           MG_PERF%NUM_SENDS = MG_PERF%NUM_SENDS + NUM_SENDS
  233.     
  234.     #endif _MG_MPI
  235.     
  236.           RETURN
  237.     
  238.        END SUBROUTINE MG_SEND_SVAF
ftn-5002 ftn: NOTE MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 238 
  Local variable "J" is declared but neither defined nor used.

ftn-5002 ftn: NOTE MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 238 
  Local variable "I" is declared but neither defined nor used.

ftn-5004 ftn: NOTE MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 238 
  Dummy Argument "GRID" is not referenced or defined.

  239.        
  240.     END MODULE MG_SEND_SVAF_MOD

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 82, Column = 20 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 94, Column = 27 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 97, Column = 15 
  "mpi_isend" (called from "mg_send_svaf") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 100, Column = 60 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 116, Column = 27 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 119, Column = 15 
  "mpi_isend" (called from "mg_send_svaf") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 122, Column = 60 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 138, Column = 27 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 141, Column = 15 
  "mpi_isend" (called from "mg_send_svaf") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 144, Column = 60 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 160, Column = 27 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 163, Column = 15 
  "mpi_isend" (called from "mg_send_svaf") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 166, Column = 60 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 182, Column = 27 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 185, Column = 15 
  "mpi_isend" (called from "mg_send_svaf") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 188, Column = 60 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 204, Column = 27 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3021 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 207, Column = 15 
  "mpi_isend" (called from "mg_send_svaf") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 210, Column = 60 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.

ftn-3118 ftn: IPA MG_SEND_SVAF, File = MG_SEND_SVAF.F, Line = 230, Column = 53 
  "mg_timer" (called from "mg_send_svaf") was not inlined because the call site will not flatten.  "mpi_wtime_" is missing.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
             C r o s s   R e f e r e n c e   for   MG_SEND_SVAF_MOD
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                                      Storage/Owner                   
----                                      -------------                   

BACK                                      Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      93      96      98
  Referenced in contained procedure

COUNT_SEND_BACK                           Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        227
  Referenced      97     103     104     105     107     108
  Referenced in contained procedure

COUNT_SEND_EAST                           Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        225
  Referenced     141     147     148     149     151     152
  Referenced in contained procedure

COUNT_SEND_FRONT                          Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        228
  Referenced     119     125     126     127     129     130
  Referenced in contained procedure

COUNT_SEND_NORTH                          Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        223
  Referenced     185     191     192     193     195     196
  Referenced in contained procedure

COUNT_SEND_SOUTH                          Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        224
  Referenced     207     213     214     215     217     218
  Referenced in contained procedure

COUNT_SEND_WEST                           Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined        226
  Referenced     163     169     170     171     173     174
  Referenced in contained procedure

EAST                                      Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     137     140     142
  Referenced in contained procedure

FRONT                                     Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     115     118     120
  Referenced in contained procedure

GRID                                      MG_SEND_SVAF                    
  Dummy Argument, Real(kind=8), Dimension(0:<exp>,0:<exp>,0:<exp>), Intent(in)
  Declared        43      57
  Defined   
  Referenced

I                                         Stack                           
  Variable, Integer
  Declared        64
  Defined   
  Referenced

IERR                                      MG_SEND_SVAF                    
  Dummy Argument, Integer, Intent(out)
  Declared        43      54
  Defined         75
  Referenced      99     121     143     165     187     209

J                                         Stack                           
  Variable, Integer
  Declared        64
  Defined   
  Referenced

MAX_NUM_RECVS                             Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      89      96     118     140     162     184     206
  Referenced in contained procedure

MG_CONSTANTS_MOD                                                          
  Module, Used indirectly (from module MG_UTILS_MOD)
  Declared  
  Defined   
  Referenced

MG_CONSTANTS_MOD                                                          
  Module, Used indirectly (from module MG_PROFILING_MOD)
  Declared  
  Defined   
  Referenced

MG_CONSTANTS_MOD                                                          
  Module
  Declared  
  Defined   
  Referenced      35

MG_ENV_MOD                                                                
  Module, Used indirectly (from module MG_PROFILING_MOD)
  Declared  
  Defined   
  Referenced

MG_MPI_REAL                               Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      97     119     141     163     185     207
  Referenced in contained procedure

MG_OPTIONS_MOD                                                            
  Module, Used indirectly (from module MG_PROFILING_MOD)
  Declared  
  Defined   
  Referenced

MG_OPTIONS_MOD                                                            
  Module, Used indirectly (from module MG_UTILS_MOD)
  Declared  
  Defined   
  Referenced

MG_PERF                                   Module MG_PROFILING_MOD         
  TYPE(PERF_CHECK), Use assoc
  Declared  
  Defined        100     103     105     108     122     125     127     130     144     147     149     152     166     169     171
           174     188     191     193     196     210     213     215     218     230     232
  Referenced     104     107     126     129     148     151     170     173     192     195     214     217
  Referenced in contained procedure

MG_PROFILING_MOD                                                          
  Module
  Declared  
  Defined   
  Referenced      37

MG_REAL                                   Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=1), Use assoc
  Declared  
  Defined   
  Referenced      56
  Referenced in contained procedure

MG_REAL8                                  Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=1), Use assoc
  Declared  
  Defined   
  Referenced      67
  Referenced in contained procedure

MG_SEND_SVAF                                                              
  Subroutine, Module procedure
  Declared        43
  Defined   
  Referenced

MG_SEND_SVAF_MOD                                                          
  Module
  Declared        28
  Defined   
  Referenced

MG_TIMER                                  Module MG_UTILS_MOD             
  Function, Double Precision, result(MG_TIMER), Module procedure
  Declared  
  Defined   
  Referenced      82      94     100     116     122     138     144     160     166     182     188     204     210     230

MG_TIMER                                  Module MG_UTILS_MOD             
  Function, Double Precision, result(MG_TIMER), Module procedure
  Declared  
  Defined   
  Referenced      82      94     100     116     122     138     144     160     166     182     188     204     210     230

MG_UTILS_MOD                                                              
  Module
  Declared  
  Defined   
  Referenced      36

MG_UTILS_MOD                                                              
  Module, Used indirectly (from module MG_PROFILING_MOD)
  Declared  
  Defined   
  Referenced

MPIFCMB5                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIFCMB9                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV1                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIV2                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPIPRIVC                                  Module MG_CONSTANTS_MOD         
  Common block 
  Declared  
  Defined   
  Referenced

MPI_COMM_MG                               Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      99     121     143     165     187     209
  Referenced in contained procedure

MPI_ISEND                                                                 
  Subroutine, External
  Declared  
  Defined   
  Referenced      97      97     119     119     141     141     163     163     185     185     207     207

MSG_REQS                                  Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced      99     121     143     165     187     209
  Referenced in contained procedure

MSG_REQS_OFFSET                           Stack                           
  Variable, Integer
  Declared        65
  Defined         89      96     118     140     162     184     206
  Referenced      99     121     143     165     187     209

MSG_TAGS                                  Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced      98     120     142     164     186     208
  Referenced in contained procedure

NEIGHBORS                                 Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced      93      98     115     120     137     142     159     164     181     186     203     208
  Referenced in contained procedure

NORTH                                     Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     181     184     186
  Referenced in contained procedure

NUMPES                                    Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced      77
  Referenced in contained procedure

NUM_SENDS                                 Structure offset=192            
  Integer(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     232

NUM_SENDS                                 Module MG_CONSTANTS_MOD         
  Integer(kind=4), Use assoc
  Declared  
  Defined         88      95     117     139     161     183     205
  Referenced     232
  Referenced in contained procedure

NX                                        Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced
  Referenced in contained procedure

NY                                        Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced
  Referenced in contained procedure

NZ                                        Module MG_OPTIONS_MOD           
  Integer, Use assoc
  Declared  
  Defined   
  Referenced
  Referenced in contained procedure

SEND_BUFFER_BACK                          Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced      97
  Referenced in contained procedure

SEND_BUFFER_EAST                          Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced     141
  Referenced in contained procedure

SEND_BUFFER_FRONT                         Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced     119
  Referenced in contained procedure

SEND_BUFFER_NORTH                         Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced     185
  Referenced in contained procedure

SEND_BUFFER_SOUTH                         Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced     207
  Referenced in contained procedure

SEND_BUFFER_WEST                          Module MG_CONSTANTS_MOD         
  Real(kind=8), Use assoc, Dimension(:), Allocatable
  Declared  
  Defined   
  Referenced     163
  Referenced in contained procedure

SEND_COUNT                                Structure offset=256            
  Integer(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     103     125     147     169     191     213

SEND_COUNT_MAX                            Structure offset=320            
  Integer(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     104     105     126     127     148     149     170     171     192     193     214     215

SEND_COUNT_MIN                            Structure offset=384            
  Integer(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     107     108     129     130     151     152     173     174     195     196     217     218

SOUTH                                     Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     203     206     208
  Referenced in contained procedure

TIME_SEND_PE                              Structure offset=1536           
  Real(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     230

TIME_SEND_X_PE                            Structure offset=2048           
  Real(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     144     166

TIME_SEND_Y_PE                            Structure offset=2368           
  Real(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     188     210

TIME_SEND_Z_PE                            Structure offset=2688           
  Real(kind=8), Component of PERF_CHECK
  Declared  
  Defined   
  Referenced     100     122

TIME_START                                Stack                           
  Variable, Real(kind=8)
  Declared        68
  Defined         82
  Referenced     230

TIME_START_DIR                            Stack                           
  Variable, Real(kind=8)
  Declared        69
  Defined         94     116     138     160     182     204
  Referenced     101     123     145     167     189     211

WEST                                      Module MG_CONSTANTS_MOD         
  Parameter, Integer(kind=4), Use assoc
  Declared  
  Defined   
  Referenced     159     162     164
  Referenced in contained procedure


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                     C o m m o n   B l o c k   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB5/                            Length: 4 bytes

     MG_SEND_SVAF_MOD                 Block is used from MG_CONSTANTS_MOD

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB9/                            Length: 4 bytes

     MG_SEND_SVAF_MOD                 Block is used from MG_CONSTANTS_MOD

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV1/                            Length: 28 bytes

     MG_SEND_SVAF_MOD                 Block is used from MG_CONSTANTS_MOD

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV2/                            Length: 24 bytes

     MG_SEND_SVAF_MOD                 Block is used from MG_CONSTANTS_MOD

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIVC/                            Length: 2 bytes

     MG_SEND_SVAF_MOD                 Block is used from MG_CONSTANTS_MOD


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ENV in MG_ENV_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_ASSERT in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_COMPUTE_STDDEV in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_CONSTANTS_MOD
      Defined as:  No definitions.

      Used By:     MG_SEND_SVAF_MOD
                   MG_SEND_SVAF_MOD  (indirectly)
                   MG_SEND_SVAF_MOD  (indirectly)

Name  Messages
----  --------
MG_ENV_MOD
      Defined as:  No definitions.

      Used By:     MG_SEND_SVAF_MOD  (indirectly)

Name  Messages
----  --------
MG_GRID_DEALLOC in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_GRID_INIT in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_INIT in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_INIT_GRID in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_INSERT_SPIKE in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_OPTIONS_MOD
      Defined as:  No definitions.

      Used By:     MG_SEND_SVAF_MOD  (indirectly)
                   MG_SEND_SVAF_MOD  (indirectly)

Name  Messages
----  --------
MG_PERF_INIT in MG_PROFILING_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_PERF_REPORT in MG_PROFILING_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_PRINT_HEADER in MG_UTILS_MOD
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MG_PROFILING_MOD
      Defined as:  No definitions.

      Used By:     MG_SEND_SVAF_MOD

Name  Messages
----  --------
MG_SEND_SVAF in MG_SEND_SVAF_MOD
      Defined as:  Subroutine (line 43, file MG_SEND_SVAF.F)

      Interface:   None

      Calls:       MG_TIMER in MG_UTILS_MOD (Line 82, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 94, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 100, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 116, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 122, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 138, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 144, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 160, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 166, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 182, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 188, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 204, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 210, file MG_SEND_SVAF.F)
                   MG_TIMER in MG_UTILS_MOD (Line 230, file MG_SEND_SVAF.F)
                   MPI_ISEND (Line 97, file MG_SEND_SVAF.F)
                   MPI_ISEND (Line 119, file MG_SEND_SVAF.F)
                   MPI_ISEND (Line 141, file MG_SEND_SVAF.F)
                   MPI_ISEND (Line 163, file MG_SEND_SVAF.F)
                   MPI_ISEND (Line 185, file MG_SEND_SVAF.F)
                   MPI_ISEND (Line 207, file MG_SEND_SVAF.F)

Name  Messages
----  --------
MG_SEND_SVAF_MOD
      Defined as:  Module (line 28, file MG_SEND_SVAF.F)

        Uses:      MG_CONSTANTS_MOD
                   MG_UTILS_MOD
                   MG_OPTIONS_MOD  (indirectly)
                   MG_CONSTANTS_MOD  (indirectly)
                   MG_PROFILING_MOD
                   MG_OPTIONS_MOD  (indirectly)
                   MG_ENV_MOD  (indirectly)
                   MG_UTILS_MOD  (indirectly)
                   MG_CONSTANTS_MOD  (indirectly)

Name  Messages
----  --------
MG_TIMER in MG_UTILS_MOD
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 82, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 94, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 100, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 116, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 122, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 138, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 144, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 160, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 166, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 182, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 188, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 204, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 210, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 230, file MG_SEND_SVAF.F)

Name  Messages
----  --------
MG_UTILS_MOD
      Defined as:  No definitions.

      Used By:     MG_SEND_SVAF_MOD
                   MG_SEND_SVAF_MOD  (indirectly)

Name  Messages
----  --------
MPI_COMM_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_COMM_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_COMM_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_CONVERSION_FN_NULL
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_ISEND
      Defined as:  No definitions.

      Interface:   None

      Called By:   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 97, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 119, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 141, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 163, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 185, file MG_SEND_SVAF.F)
                   MG_SEND_SVAF in MG_SEND_SVAF_MOD (Line 207, file MG_SEND_SVAF.F)

Name  Messages
----  --------
MPI_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_TYPE_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_TYPE_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_TYPE_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WIN_DUP_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WIN_NULL_COPY_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WIN_NULL_DELETE_FN
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
MPI_WTICK
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_WTIME
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
PMPI_WTICK
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
PMPI_WTIME
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
