
#################################################################
#                                                               #
#            CrayPat-lite Performance Statistics                #
#                                                               #
#################################################################

CrayPat/X:  Version 7.0.4 Revision e00a493  09/12/18 13:16:44
Experiment:                  lite  lite-events   
Number of PEs (MPI ranks):    144
Numbers of PEs per Node:       36  PEs on each of  4  Nodes
Numbers of Threads per PE:      1
Number of Cores per Socket:    22
Execution start time:  Wed Oct 31 04:55:08 2018
System name and speed:  nid00024  2.201 GHz (nominal)
Intel Broadwell  CPU  Family:  6  Model: 79  Stepping:  1
DRAM: 128 GiB DDR4-2400 on 2.2 GHz nodes



Avg Process Time:     30.84 secs              
High Memory:      113,896.7 MiBytes     790.9 MiBytes per PE
I/O Read Rate:     2.076426 MiBytes/sec       
I/O Write Rate:   11.394468 MiBytes/sec       

Notes for table 1:

  This table shows functions that have significant exclusive time,
    averaged across ranks.
  For further explanation, see the "General table notes" below,
    or use:  pat_report -v -O profile ...

Table 1:  Profile by Function Group and Function (limited entries shown)

  Time% |      Time |     Imb. |  Imb. |    Calls | Group
        |           |     Time | Time% |          |  Function=[MAX10]
        |           |          |       |          |   PE=HIDE
       
 100.0% | 30.725083 |       -- |    -- | 52,915.0 | Total
|-----------------------------------------------------------------------------
|  93.7% | 28.777542 |       -- |    -- | 21,358.7 | USER
||----------------------------------------------------------------------------
||  37.2% | 11.415465 | 0.192564 |  1.7% |    800.0 | mg_stencil_3d27pt$mg_stencil_comps_mod_.LOOP@li.286
||  36.3% | 11.159994 | 0.155754 |  1.4% |    800.0 | mg_stencil_3d27pt$mg_stencil_comps_mod_.LOOP@li.312
||  12.3% |  3.780967 | 0.197929 |  5.0% |    800.0 | mg_allreduce_sum$mg_allreduce_mod_.LOOP@li.82
||   1.6% |  0.502485 | 0.067331 | 11.9% |     40.0 | mg_init_grid$mg_utils_mod_.LOOP@li.1061
||   1.1% |  0.349689 | 0.233960 | 40.4% |    600.0 | get_face$mg_get_face_mod_.LOOP@li.110
||   1.1% |  0.329035 | 0.208675 | 39.1% |    600.0 | get_face$mg_get_face_mod_.LOOP@li.99
||============================================================================
|   4.4% |  1.359611 |       -- |    -- | 21,642.9 | MPI
||----------------------------------------------------------------------------
||   2.2% |  0.686756 | 0.704975 | 51.0% |    800.0 | MPI_ALLREDUCE
||   2.1% |  0.633912 | 0.396771 | 38.8% |    302.4 | MPI_WAITANY
||============================================================================
|   1.4% |  0.434176 |       -- |    -- |    536.1 | ETC
||----------------------------------------------------------------------------
||   1.4% |  0.430252 | 0.033698 |  7.3% |    524.0 | query_cpu_mask
|=============================================================================

Notes for table 2:

  This table shows energy and power usage for the nodes with the
    maximum, mean, and minimum usage, as well as the sum of usage over
    all nodes.
    Energy and power for accelerators is also shown, if applicable.
  For further explanation, see the "General table notes" below,
    or use:  pat_report -v -O program_energy ...

Table 2:
  Program energy and power usage (from Cray PM) (limited entries shown)

   Node |      Node |   Process | Node Id
 Energy | Power (W) |      Time |  PE=HIDE
    (J) |           |           | 
       
 40,054 | 1,298.821 | 30.838726 | Total
|-----------------------------------------
| 10,147 |   329.033 | 30.838811 | nid.52
| 10,116 |   328.030 | 30.838646 | nid.53
|  9,910 |   321.349 | 30.838716 | nid.51
|  9,881 |   320.409 | 30.838732 | nid.24
|=========================================

Notes for table 3:

  This table show the average time and number of bytes read from each
    input file, taking the average over the number of ranks that read
    from the file.  It also shows the number of read operations, and
    average rates.
  For further explanation, see the "General table notes" below,
    or use:  pat_report -v -O read_stats ...

Table 3:  File Input Stats by Filename (limited entries shown)

 Avg Read | Avg Read |   Read Rate | Number |    Avg | Bytes/ | File Name=!x/^/(proc|sys)/
 Time per |  MiBytes | MiBytes/sec |     of |  Reads |   Call |  PE=HIDE
   Reader |      per |             | Reader |    per |        | 
     Rank |   Reader |             |  Ranks | Reader |        | 
          |     Rank |             |        |   Rank |        | 
|-----------------------------------------------------------------------------
| 0.000017 | 0.000011 |    0.663150 |    120 |    1.5 |   8.00 | _UnknownFile_
|=============================================================================

Notes for table 4:

  This table show the average time and number of bytes written to each
    output file, taking the average over the number of ranks that
    wrote to the file.  It also shows the number of write operations,
    and average rates.
  For further explanation, see the "General table notes" below,
    or use:  pat_report -v -O write_stats ...

Table 4:  File Output Stats by Filename (limited entries shown)

      Avg |      Avg |  Write Rate | Number |    Avg | Bytes/ | File Name=!x/^/(proc|sys)/
    Write |    Write | MiBytes/sec |     of | Writes |   Call |  PE=HIDE
 Time per |  MiBytes |             | Writer |    per |        | 
   Writer |      per |             |  Ranks | Writer |        | 
     Rank |   Writer |             |        |   Rank |        | 
          |     Rank |             |        |        |        | 
|-----------------------------------------------------------------------------
| 0.000063 | 0.005267 |   83.462370 |      1 |  132.0 |  41.84 | stdout
| 0.000036 | 0.005363 |  149.715525 |      1 |  182.0 |  30.90 | results.yaml
| 0.000021 | 0.000126 |    5.944873 |    120 |    4.1 |  32.00 | _UnknownFile_
| 0.000021 | 0.004581 |  220.995196 |      1 |  107.0 |  44.90 | results.txt
|=============================================================================

Table 5:  Lustre File Information

    File Path |    Stripe | Stripe | Stripe | OST list
              |      size | offset |  count | 
-------------------------------------------------------
  results.txt | 1,048,576 |      0 |      1 | 22
 results.yaml | 1,048,576 |      0 |      1 | 3
=======================================================


General table notes:

    The default notes for a table do not account for the effects
    of additional command-line options, but the detailed notes
    produced by the -v option do account for them.
    
    An imbalance metric in a line is based on values in main threads
    across multiple ranks, or on values across all threads, as applicable.
    
    An imbalance percent in a line is relative to the maximum value
    for that line across ranks or threads, as applicable.
    
Program invocation:
  /lus/scratch/p02128/work/MiniGhost/source/miniGhost.x --scaling 1 --nx 672 --ny 672 --nz 672 --num_vars 40 --num_spikes 1 --debug_grid 1 --report_diffusion 21 --percent_sum 100 --num_tsteps 20 --stencil 24 --comm_method 10 --report_perf 1 --npx 4 --npy ...

For a complete report with expanded tables and notes, run:
  pat_report /lus/scratch/p02128/work/MiniGhost/miniGhost.x+9766-24t

For help identifying callers of particular functions:
  pat_report -O callers+src /lus/scratch/p02128/work/MiniGhost/miniGhost.x+9766-24t
To see the entire call tree:
  pat_report -O calltree+src /lus/scratch/p02128/work/MiniGhost/miniGhost.x+9766-24t

For interactive, graphical performance analysis, run:
  app2 /lus/scratch/p02128/work/MiniGhost/miniGhost.x+9766-24t

================  End of CrayPat-lite output  ==========================
